# text = <think> Okay, let's tackle this query.
# sent_id = 0
1	<think>	<think>	X	FM	_	2	advmod	_	start_char=0|end_char=7
2	Okay	Okay	X	FM	Foreign=Yes	0	root	_	start_char=8|end_char=12|SpaceAfter=No
3	,	,	PUNCT	$,	_	6	punct	_	start_char=12|end_char=13
4	let	let	INTJ	ITJ	_	8	nsubj	_	start_char=14|end_char=17|SpaceAfter=No
5	's	's	X	FM	Foreign=Yes	4	flat	_	start_char=17|end_char=19
6	tackle	tackle	X	FM	Foreign=Yes	8	compound	_	start_char=20|end_char=26
7	this	thie	PRON	FM	Foreign=Yes|Person=3|PronType=Prs	8	nsubj	_	start_char=27|end_char=31
8	query	query	NOUN	FM	Foreign=Yes	2	appos	_	start_char=32|end_char=37|SpaceAfter=No
9	.	.	PUNCT	$.	_	2	punct	_	start_char=37|end_char=38

# text = The user wants a reformulated text based on the "linguistischer Ansatz (Sprachebenen)" with three specific instructions: remove unnecessary information at the text level, simplify syntax by removing subordinate clauses at the sentence level, and add explanations for difficult words at the word level.
# sent_id = 1
1	The	the	DET	FM	Definite=Def|Foreign=Yes|PronType=Art	0	root	_	start_char=39|end_char=42
2	user	user	X	FM	Foreign=Yes	1	flat	_	start_char=43|end_char=47
3	wants	wants	X	FM	Foreign=Yes	1	flat	_	start_char=48|end_char=53
4	a	a	X	FM	Foreign=Yes	1	flat	_	start_char=54|end_char=55
5	reformulated	reformulated	X	FM	Foreign=Yes	1	flat	_	start_char=56|end_char=68
6	text	Text	X	FM	Foreign=Yes	1	flat	_	start_char=69|end_char=73
7	based	based	X	FM	Foreign=Yes	1	flat	_	start_char=74|end_char=79
8	on	on	X	FM	Foreign=Yes	1	flat	_	start_char=80|end_char=82
9	the	the	DET	FM	Definite=Def|Foreign=Yes|PronType=Art	1	flat	_	start_char=83|end_char=86
10	"	"	PUNCT	$(	_	12	punct	_	start_char=87|end_char=88|SpaceAfter=No
11	linguistischer	linguistisch	ADJ	ADJA	Case=Nom|Degree=Pos|Gender=Masc|Number=Sing	12	amod	_	start_char=88|end_char=102
12	Ansatz	Ansatz	NOUN	NN	Case=Nom|Gender=Masc|Number=Sing	1	appos	_	start_char=103|end_char=109
13	(	(	PUNCT	$(	_	14	punct	_	start_char=110|end_char=111|SpaceAfter=No
14	Sprachebenen	Sprachebene	NOUN	NN	Case=Nom|Gender=Fem|Number=Plur	12	appos	_	start_char=111|end_char=123|SpaceAfter=No
15	)	)	PUNCT	$(	_	14	punct	_	start_char=123|end_char=124|SpaceAfter=No
16	"	"	PUNCT	$(	_	14	punct	_	start_char=124|end_char=125
17	with	with	X	FM	Foreign=Yes	12	flat	_	start_char=126|end_char=130
18	three	three	X	FM	Foreign=Yes	1	flat	_	start_char=131|end_char=136
19	specific	specific	X	FM	Foreign=Yes	1	flat	_	start_char=137|end_char=145
20	instructions	instructions	X	FM	Foreign=Yes	12	flat	_	start_char=146|end_char=158|SpaceAfter=No
21	:	:	PUNCT	$.	_	12	punct	_	start_char=158|end_char=159
22	remove	remove	X	FM	Foreign=Yes	1	flat	_	start_char=160|end_char=166
23	unnecessary	unnecessary	X	FM	Foreign=Yes	1	flat	_	start_char=167|end_char=178
24	information	information	X	FM	Foreign=Yes	1	flat	_	start_char=179|end_char=190
25	at	at	X	FM	Foreign=Yes	1	flat	_	start_char=191|end_char=193
26	the	the	DET	FM	Definite=Def|Foreign=Yes|PronType=Art	1	flat	_	start_char=194|end_char=197
27	text	Text	X	FM	Foreign=Yes	1	flat	_	start_char=198|end_char=202
28	level	level	X	FM	Foreign=Yes	1	flat	_	start_char=203|end_char=208|SpaceAfter=No
29	,	,	PUNCT	$,	_	1	punct	_	start_char=208|end_char=209
30	simplify	simplify	X	FM	Foreign=Yes	1	flat	_	start_char=210|end_char=218
31	syntax	syntax	X	FM	Foreign=Yes	1	flat	_	start_char=219|end_char=225
32	by	by	X	FM	Foreign=Yes	1	flat	_	start_char=226|end_char=228
33	removing	removing	X	FM	Foreign=Yes	1	flat	_	start_char=229|end_char=237
34	subordinate	subordinate	X	FM	Foreign=Yes	1	flat	_	start_char=238|end_char=249
35	clauses	clauses	X	FM	Foreign=Yes	1	flat	_	start_char=250|end_char=257
36	at	at	X	FM	Foreign=Yes	1	flat	_	start_char=258|end_char=260
37	the	the	DET	FM	Definite=Def|Foreign=Yes|PronType=Art	1	flat	_	start_char=261|end_char=264
38	sentence	sentence	X	FM	Foreign=Yes	1	flat	_	start_char=265|end_char=273
39	level	level	X	FM	Foreign=Yes	1	flat	_	start_char=274|end_char=279|SpaceAfter=No
40	,	,	PUNCT	$,	_	42	punct	_	start_char=279|end_char=280
41	and	and	CCONJ	FM	Foreign=Yes	42	cc	_	start_char=281|end_char=284
42	add	add	X	FM	Foreign=Yes	1	flat	_	start_char=285|end_char=288
43	explanations	explanations	X	FM	Foreign=Yes	1	flat	_	start_char=289|end_char=301
44	for	for	X	FM	Foreign=Yes	1	flat	_	start_char=302|end_char=305
45	difficult	difficult	X	FM	Foreign=Yes	1	flat	_	start_char=306|end_char=315
46	words	words	X	FM	Foreign=Yes	1	flat	_	start_char=316|end_char=321
47	at	at	X	FM	Foreign=Yes	1	flat	_	start_char=322|end_char=324
48	the	the	DET	FM	Definite=Def|Foreign=Yes|PronType=Art	1	flat	_	start_char=325|end_char=328
49	word	word	PROPN	FM	Foreign=Yes	1	flat	_	start_char=329|end_char=333
50	level	level	PROPN	FM	Foreign=Yes	1	flat	_	start_char=334|end_char=339|SpaceAfter=No
51	.	.	PUNCT	$.	_	12	punct	_	start_char=339|end_char=340|SpacesAfter=\s\s

# text = First, I need to understand the original text.
# sent_id = 2
1	First	First	X	FM	Foreign=Yes	0	root	_	start_char=342|end_char=347|SpaceAfter=No
2	,	,	PUNCT	$,	_	3	punct	_	start_char=347|end_char=348
3	I	I	X	FM	Foreign=Yes	1	appos	_	start_char=349|end_char=350
4	need	need	X	FM	Foreign=Yes	3	flat	_	start_char=351|end_char=355
5	to	to	X	FM	Foreign=Yes	3	flat	_	start_char=356|end_char=358
6	understand	understand	X	FM	Foreign=Yes	3	flat	_	start_char=359|end_char=369
7	the	the	DET	FM	Definite=Def|Foreign=Yes|PronType=Art	3	flat	_	start_char=370|end_char=373
8	original	original	PROPN	FM	Foreign=Yes	3	flat	_	start_char=374|end_char=382
9	text	Text	NOUN	FM	Foreign=Yes	3	flat	_	start_char=383|end_char=387|SpaceAfter=No
10	.	.	PUNCT	$.	_	1	punct	_	start_char=387|end_char=388

# text = It seems to be about lost and found items, procedures for reporting found items over 10 euros, where to go, what happens if the owner doesn't claim the item, auctions, handling animals, and online resources.
# sent_id = 3
1	It	it	X	FM	Foreign=Yes	0	root	_	start_char=389|end_char=391
2	seems	seems	X	FM	Foreign=Yes	1	flat	_	start_char=392|end_char=397
3	to	to	X	FM	Foreign=Yes	1	flat	_	start_char=398|end_char=400
4	be	be	X	FM	Foreign=Yes	1	flat	_	start_char=401|end_char=403
5	about	about	X	FM	Foreign=Yes	1	flat	_	start_char=404|end_char=409
6	lost	losen	X	FM	Foreign=Yes	1	flat	_	start_char=410|end_char=414
7	and	and	X	FM	Foreign=Yes	1	flat	_	start_char=415|end_char=418
8	found	found	X	FM	Foreign=Yes	1	flat	_	start_char=419|end_char=424
9	items	items	X	FM	Foreign=Yes	1	flat	_	start_char=425|end_char=430|SpaceAfter=No
10	,	,	PUNCT	$,	_	1	punct	_	start_char=430|end_char=431
11	procedures	procedures	X	FM	Foreign=Yes	1	flat	_	start_char=432|end_char=442
12	for	for	X	FM	Foreign=Yes	1	flat	_	start_char=443|end_char=446
13	reporting	reporting	X	FM	Foreign=Yes	1	flat	_	start_char=447|end_char=456
14	found	found	X	FM	Foreign=Yes	1	flat	_	start_char=457|end_char=462
15	items	items	X	FM	Foreign=Yes	1	flat	_	start_char=463|end_char=468
16	over	over	X	FM	Foreign=Yes	1	flat	_	start_char=469|end_char=473
17	10	10	X	FM	Foreign=Yes	1	flat	_	start_char=474|end_char=476
18	euros	euros	X	FM	Foreign=Yes	1	flat	_	start_char=477|end_char=482|SpaceAfter=No
19	,	,	PUNCT	$,	_	1	punct	_	start_char=482|end_char=483
20	where	where	X	FM	Foreign=Yes	1	flat	_	start_char=484|end_char=489
21	to	to	X	FM	Foreign=Yes	1	flat	_	start_char=490|end_char=492
22	go	go	X	FM	Foreign=Yes	1	flat	_	start_char=493|end_char=495|SpaceAfter=No
23	,	,	PUNCT	$,	_	1	punct	_	start_char=495|end_char=496
24	what	what	X	FM	Foreign=Yes	1	flat	_	start_char=497|end_char=501
25	happens	happens	X	FM	Foreign=Yes	1	flat	_	start_char=502|end_char=509
26	if	if	X	FM	Foreign=Yes	1	flat	_	start_char=510|end_char=512
27	the	the	X	FM	Foreign=Yes	1	flat	_	start_char=513|end_char=516
28	owner	owner	X	FM	Foreign=Yes	1	flat	_	start_char=517|end_char=522
29	doesn	doesn	X	FM	Foreign=Yes	1	flat	_	start_char=523|end_char=528|SpaceAfter=No
30	't	't	X	FM	Foreign=Yes	1	flat	_	start_char=528|end_char=530
31	claim	claim	X	FM	Foreign=Yes	1	flat	_	start_char=531|end_char=536
32	the	the	X	FM	Foreign=Yes	1	flat	_	start_char=537|end_char=540
33	item	item	X	FM	Foreign=Yes	1	flat	_	start_char=541|end_char=545|SpaceAfter=No
34	,	,	PUNCT	$,	_	1	flat	_	start_char=545|end_char=546
35	auctions	auctions	X	FM	Foreign=Yes	1	flat	_	start_char=547|end_char=555|SpaceAfter=No
36	,	,	PUNCT	$,	_	1	punct	_	start_char=555|end_char=556
37	handling	handling	X	FM	Foreign=Yes	1	flat	_	start_char=557|end_char=565
38	animals	animals	X	FM	Foreign=Yes	1	flat	_	start_char=566|end_char=573|SpaceAfter=No
39	,	,	PUNCT	$,	_	41	punct	_	start_char=573|end_char=574
40	and	and	CCONJ	FM	Foreign=Yes	41	cc	_	start_char=575|end_char=578
41	online	online	X	FM	Foreign=Yes	1	flat	_	start_char=579|end_char=585
42	resources	resources	X	FM	Foreign=Yes	41	flat	_	start_char=586|end_char=595|SpaceAfter=No
43	.	.	PUNCT	$.	_	1	punct	_	start_char=595|end_char=596

# text = The goal is to simplify this for a specific audience, possibly those with intellectual disabilities or language learners.
# sent_id = 4
1	The	the	DET	FM	Definite=Def|Foreign=Yes|PronType=Art	0	root	_	start_char=597|end_char=600
2	goal	goal	X	FM	Foreign=Yes	1	flat	_	start_char=601|end_char=605
3	is	is	X	FM	Foreign=Yes	1	flat	_	start_char=606|end_char=608
4	to	to	X	FM	Foreign=Yes	1	flat	_	start_char=609|end_char=611
5	simplify	simplify	X	FM	Foreign=Yes	1	flat	_	start_char=612|end_char=620
6	this	this	X	FM	Foreign=Yes	1	flat	_	start_char=621|end_char=625
7	for	for	X	FM	Foreign=Yes	1	flat	_	start_char=626|end_char=629
8	a	a	X	FM	Foreign=Yes	1	flat	_	start_char=630|end_char=631
9	specific	specific	X	FM	Foreign=Yes	1	flat	_	start_char=632|end_char=640
10	audience	audience	X	FM	Foreign=Yes	1	flat	_	start_char=641|end_char=649|SpaceAfter=No
11	,	,	PUNCT	$,	_	1	punct	_	start_char=649|end_char=650
12	possibly	possibly	X	FM	Foreign=Yes	1	flat	_	start_char=651|end_char=659
13	those	those	X	FM	Foreign=Yes	1	flat	_	start_char=660|end_char=665
14	with	with	X	FM	Foreign=Yes	1	flat	_	start_char=666|end_char=670
15	intellectual	intellectual	X	FM	Foreign=Yes	1	flat	_	start_char=671|end_char=683
16	disabilities	disabilities	X	FM	Foreign=Yes	1	flat	_	start_char=684|end_char=696
17	or	or	X	FM	Foreign=Yes	1	flat	_	start_char=697|end_char=699
18	language	language	X	FM	Foreign=Yes	1	flat	_	start_char=700|end_char=708
19	learners	learners	X	FM	Foreign=Yes	1	flat	_	start_char=709|end_char=717|SpaceAfter=No
20	.	.	PUNCT	$.	_	1	punct	_	start_char=717|end_char=718|SpacesAfter=\s\s

# text = Starting with the text level: identify and remove any non-essential information.
# sent_id = 5
1	Starting	Starting	X	FM	Foreign=Yes	0	root	_	start_char=720|end_char=728
2	with	with	X	FM	Foreign=Yes	1	flat	_	start_char=729|end_char=733
3	the	the	DET	FM	Definite=Def|Foreign=Yes|PronType=Art	1	flat	_	start_char=734|end_char=737
4	text	Text	X	FM	Foreign=Yes	1	flat	_	start_char=738|end_char=742
5	level	level	X	FM	Foreign=Yes	1	flat	_	start_char=743|end_char=748|SpaceAfter=No
6	:	:	PUNCT	$.	_	1	punct	_	start_char=748|end_char=749
7	identify	identify	X	FM	Foreign=Yes	1	flat	_	start_char=750|end_char=758
8	and	and	CCONJ	FM	Foreign=Yes	1	flat	_	start_char=759|end_char=762
9	remove	remove	X	FM	Foreign=Yes	1	flat	_	start_char=763|end_char=769
10	any	any	X	FM	Foreign=Yes	1	flat	_	start_char=770|end_char=773
11	non	non	X	FM	Foreign=Yes	1	flat	_	start_char=774|end_char=777|SpaceAfter=No
12	-	-	PUNCT	$(	_	1	flat	_	start_char=777|end_char=778|SpaceAfter=No
13	essential	essential	PROPN	FM	Foreign=Yes	1	flat	_	start_char=778|end_char=787
14	information	information	NOUN	FM	Foreign=Yes	1	flat	_	start_char=788|end_char=799|SpaceAfter=No
15	.	.	PUNCT	$.	_	1	punct	_	start_char=799|end_char=800

# text = The original text is pretty direct, but maybe some examples or details can be cut.
# sent_id = 6
1	The	the	DET	FM	Definite=Def|Foreign=Yes|PronType=Art	0	root	_	start_char=801|end_char=804
2	original	original	X	FM	Foreign=Yes	1	flat	_	start_char=805|end_char=813
3	text	Text	X	FM	Foreign=Yes	1	flat	_	start_char=814|end_char=818
4	is	is	X	FM	Foreign=Yes	1	flat	_	start_char=819|end_char=821
5	pretty	pretty	X	FM	Foreign=Yes	1	flat	_	start_char=822|end_char=828
6	direct	direct	X	FM	Foreign=Yes	1	flat	_	start_char=829|end_char=835|SpaceAfter=No
7	,	,	PUNCT	$,	_	1	punct	_	start_char=835|end_char=836
8	but	but	X	FM	Foreign=Yes	1	flat	_	start_char=837|end_char=840
9	maybe	maybe	X	FM	Foreign=Yes	1	flat	_	start_char=841|end_char=846
10	some	some	X	FM	Foreign=Yes	1	flat	_	start_char=847|end_char=851
11	examples	examples	X	FM	Foreign=Yes	1	flat	_	start_char=852|end_char=860
12	or	or	X	FM	Foreign=Yes	1	flat	_	start_char=861|end_char=863
13	details	details	X	FM	Foreign=Yes	1	flat	_	start_char=864|end_char=871
14	can	can	X	FM	Foreign=Yes	1	flat	_	start_char=872|end_char=875
15	be	be	X	FM	Foreign=Yes	1	flat	_	start_char=876|end_char=878
16	cut	cut	X	FM	Foreign=Yes	1	flat	_	start_char=879|end_char=882|SpaceAfter=No
17	.	.	PUNCT	$.	_	1	punct	_	start_char=882|end_char=883

# text = For instance, the part about online services might be streamlined.
# sent_id = 7
1	For	For	X	FM	Foreign=Yes	0	root	_	start_char=884|end_char=887
2	instance	instance	X	FM	Foreign=Yes	1	flat	_	start_char=888|end_char=896|SpaceAfter=No
3	,	,	PUNCT	$,	_	1	punct	_	start_char=896|end_char=897
4	the	the	DET	FM	Definite=Def|Foreign=Yes|PronType=Art	1	flat	_	start_char=898|end_char=901
5	part	part	X	FM	Foreign=Yes	1	flat	_	start_char=902|end_char=906
6	about	about	X	FM	Foreign=Yes	1	flat	_	start_char=907|end_char=912
7	online	online	X	FM	Foreign=Yes	1	flat	_	start_char=913|end_char=919
8	services	services	X	FM	Foreign=Yes	1	flat	_	start_char=920|end_char=928
9	might	might	X	FM	Foreign=Yes	1	flat	_	start_char=929|end_char=934
10	be	be	X	FM	Foreign=Yes	1	flat	_	start_char=935|end_char=937
11	streamlined	streamlined	X	FM	Foreign=Yes	1	flat	_	start_char=938|end_char=949|SpaceAfter=No
12	.	.	PUNCT	$.	_	1	punct	_	start_char=949|end_char=950|SpacesAfter=\s\s

# text = At the sentence level, the user wants to eliminate subordinate clauses and use simple structures.
# sent_id = 8
1	At	At	X	FM	Foreign=Yes	0	root	_	start_char=952|end_char=954
2	the	the	DET	FM	Definite=Def|Foreign=Yes|PronType=Art	1	flat	_	start_char=955|end_char=958
3	sentence	sentence	X	FM	Foreign=Yes	1	flat	_	start_char=959|end_char=967
4	level	level	X	FM	Foreign=Yes	1	flat	_	start_char=968|end_char=973|SpaceAfter=No
5	,	,	PUNCT	$,	_	1	punct	_	start_char=973|end_char=974
6	the	the	DET	FM	Definite=Def|Foreign=Yes|PronType=Art	1	flat	_	start_char=975|end_char=978
7	user	user	X	FM	Foreign=Yes	1	flat	_	start_char=979|end_char=983
8	wants	wants	X	FM	Foreign=Yes	1	flat	_	start_char=984|end_char=989
9	to	to	X	FM	Foreign=Yes	1	flat	_	start_char=990|end_char=992
10	eliminate	eliminate	X	FM	Foreign=Yes	1	flat	_	start_char=993|end_char=1002
11	subordinate	subordinate	X	FM	Foreign=Yes	1	flat	_	start_char=1003|end_char=1014
12	clauses	clauses	X	FM	Foreign=Yes	1	flat	_	start_char=1015|end_char=1022
13	and	and	CCONJ	FM	Foreign=Yes	16	cc	_	start_char=1023|end_char=1026
14	use	use	X	FM	Foreign=Yes	1	flat	_	start_char=1027|end_char=1030
15	simple	simpeln	ADJ	FM	Degree=Pos|Foreign=Yes	1	flat	_	start_char=1031|end_char=1037
16	structures	structures	NOUN	FM	Foreign=Yes	1	flat	_	start_char=1038|end_char=1048|SpaceAfter=No
17	.	.	PUNCT	$.	_	1	punct	_	start_char=1048|end_char=1049

# text = That means breaking down complex sentences into shorter, active voice sentences.
# sent_id = 9
1	That	That	X	FM	Foreign=Yes	0	root	_	start_char=1050|end_char=1054
2	means	means	X	FM	Foreign=Yes	1	flat	_	start_char=1055|end_char=1060
3	breaking	breaking	X	FM	Foreign=Yes	1	flat	_	start_char=1061|end_char=1069
4	down	down	X	FM	Foreign=Yes	1	flat	_	start_char=1070|end_char=1074
5	complex	complex	X	FM	Foreign=Yes	1	flat	_	start_char=1075|end_char=1082
6	sentences	sentences	X	FM	Foreign=Yes	1	flat	_	start_char=1083|end_char=1092
7	into	into	X	FM	Foreign=Yes	1	flat	_	start_char=1093|end_char=1097
8	shorter	shorter	X	FM	Foreign=Yes	1	flat	_	start_char=1098|end_char=1105|SpaceAfter=No
9	,	,	PUNCT	$,	_	1	punct	_	start_char=1105|end_char=1106
10	active	active	X	FM	Foreign=Yes	1	flat	_	start_char=1107|end_char=1113
11	voice	voice	X	FM	Foreign=Yes	1	flat	_	start_char=1114|end_char=1119
12	sentences	sentences	X	FM	Foreign=Yes	1	flat	_	start_char=1120|end_char=1129|SpaceAfter=No
13	.	.	PUNCT	$.	_	1	punct	_	start_char=1129|end_char=1130

# text = For example, changing "Wenn Sie etwas finden, das mehr als 10 Euro wert ist, müssen Sie es abgeben." to "Wenn Sie etwas finden, das mehr als 10 Euro wert ist, geben Sie es ab."
# sent_id = 10
1	For	For	X	FM	Foreign=Yes	22	nsubj	_	start_char=1131|end_char=1134
2	example	example	INTJ	ITJ	_	1	advmod	_	start_char=1135|end_char=1142|SpaceAfter=No
3	,	,	PUNCT	$,	_	4	punct	_	start_char=1142|end_char=1143
4	changing	changing	X	FM	Foreign=Yes	2	appos	_	start_char=1144|end_char=1152
5	"	"	PUNCT	$(	_	9	punct	_	start_char=1153|end_char=1154|SpaceAfter=No
6	Wenn	wenn	SCONJ	KOUS	_	9	mark	_	start_char=1154|end_char=1158
7	Sie	sie	PRON	PPER	Case=Nom|Number=Plur|Person=2|Polite=Form|PronType=Prs	9	nsubj	_	start_char=1159|end_char=1162
8	etwas	etwas	PRON	PIS	Gender=Neut|Number=Sing|PronType=Ind	9	obj	_	start_char=1163|end_char=1168
9	finden	finden	VERB	VVINF	VerbForm=Inf	1	advcl	_	start_char=1169|end_char=1175|SpaceAfter=No
10	,	,	PUNCT	$,	_	16	punct	_	start_char=1175|end_char=1176
11	das	der	PRON	PRELS	Case=Nom|Gender=Neut|Number=Sing|PronType=Dem,Rel	16	nsubj	_	start_char=1177|end_char=1180
12	mehr	mehr	ADV	ADV	_	16	advmod	_	start_char=1181|end_char=1185
13	als	als	ADP	KOKOM	_	15	case	_	start_char=1186|end_char=1189
14	10	10	NUM	CARD	NumType=Card	15	nummod	_	start_char=1190|end_char=1192
15	Euro	Euro	PROPN	NN	Case=Nom|Gender=Neut|Number=Plur	16	obl	_	start_char=1193|end_char=1197
16	wert	wert	ADJ	ADJD	Degree=Pos	8	acl	_	start_char=1198|end_char=1202
17	ist	sein	AUX	VAFIN	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	16	cop	_	start_char=1203|end_char=1206|SpaceAfter=No
18	,	,	PUNCT	$,	_	9	punct	_	start_char=1206|end_char=1207
19	müssen	müssen	AUX	VMFIN	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	22	aux	_	start_char=1208|end_char=1214
20	Sie	sie	PRON	PPER	Case=Nom|Number=Plur|Person=2|Polite=Form|PronType=Prs	22	nsubj	_	start_char=1215|end_char=1218
21	es	es	PRON	PPER	Case=Acc|Gender=Neut|Number=Sing|Person=3|PronType=Prs	22	obj	_	start_char=1219|end_char=1221
22	abgeben	abgeben	VERB	VVINF	VerbForm=Inf	0	root	_	start_char=1222|end_char=1229|SpaceAfter=No
23	.	.	PUNCT	$.	_	25	punct	_	start_char=1229|end_char=1230|SpaceAfter=No
24	"	"	PUNCT	$(	_	22	punct	_	start_char=1230|end_char=1231
25	to	to	X	FM	Foreign=Yes	22	advmod	_	start_char=1232|end_char=1234
26	"	"	PUNCT	$(	_	30	punct	_	start_char=1235|end_char=1236|SpaceAfter=No
27	Wenn	wenn	SCONJ	KOUS	_	30	mark	_	start_char=1236|end_char=1240
28	Sie	sie	PRON	PPER	Case=Nom|Number=Plur|Person=2|Polite=Form|PronType=Prs	30	nsubj	_	start_char=1241|end_char=1244
29	etwas	etwas	PRON	PIS	Gender=Neut|Number=Sing|PronType=Ind	30	obj	_	start_char=1245|end_char=1250
30	finden	finden	VERB	VVINF	VerbForm=Inf	22	advcl	_	start_char=1251|end_char=1257|SpaceAfter=No
31	,	,	PUNCT	$,	_	37	punct	_	start_char=1257|end_char=1258
32	das	der	PRON	PRELS	Case=Nom|Gender=Neut|Number=Sing|PronType=Dem,Rel	37	nsubj	_	start_char=1259|end_char=1262
33	mehr	mehr	ADV	ADV	_	37	advmod	_	start_char=1263|end_char=1267
34	als	als	ADP	KOKOM	_	36	case	_	start_char=1268|end_char=1271
35	10	10	NUM	CARD	NumType=Card	36	nummod	_	start_char=1272|end_char=1274
36	Euro	Euro	PROPN	NN	Case=Nom|Gender=Neut|Number=Plur	37	nmod	_	start_char=1275|end_char=1279
37	wert	wert	ADJ	ADJD	Degree=Pos	29	acl	_	start_char=1280|end_char=1284
38	ist	sein	AUX	VAFIN	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	37	cop	_	start_char=1285|end_char=1288|SpaceAfter=No
39	,	,	PUNCT	$,	_	30	punct	_	start_char=1288|end_char=1289
40	geben	geben	VERB	VVFIN	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	22	conj	_	start_char=1290|end_char=1295
41	Sie	sie	PRON	PPER	Case=Nom|Number=Plur|Person=2|Polite=Form|PronType=Prs	40	nsubj	_	start_char=1296|end_char=1299
42	es	es	PRON	PPER	Case=Acc|Gender=Neut|Number=Sing|Person=3|PronType=Prs	40	obj	_	start_char=1300|end_char=1302
43	ab	ab	ADP	PTKVZ	_	40	compound:prt	_	start_char=1303|end_char=1305|SpaceAfter=No
44	.	.	PUNCT	$.	_	40	punct	_	start_char=1305|end_char=1306|SpaceAfter=No
45	"	"	PUNCT	$(	_	40	punct	_	start_char=1306|end_char=1307|SpacesAfter=\s\s

# text = For the word level, replace difficult words with simpler synonyms or add explanations.
# sent_id = 11
1	For	For	X	FM	Foreign=Yes	0	root	_	start_char=1309|end_char=1312
2	the	the	DET	FM	Definite=Def|Foreign=Yes|PronType=Art	1	flat	_	start_char=1313|end_char=1316
3	word	word	X	FM	Foreign=Yes	1	flat	_	start_char=1317|end_char=1321
4	level	level	X	FM	Foreign=Yes	1	flat	_	start_char=1322|end_char=1327|SpaceAfter=No
5	,	,	PUNCT	$,	_	1	punct	_	start_char=1327|end_char=1328
6	replace	replace	X	FM	Foreign=Yes	1	flat	_	start_char=1329|end_char=1336
7	difficult	difficult	X	FM	Foreign=Yes	1	flat	_	start_char=1337|end_char=1346
8	words	words	X	FM	Foreign=Yes	1	flat	_	start_char=1347|end_char=1352
9	with	with	X	FM	Foreign=Yes	1	flat	_	start_char=1353|end_char=1357
10	simpler	simpel	X	FM	Foreign=Yes	1	flat	_	start_char=1358|end_char=1365
11	synonyms	synonyms	X	FM	Foreign=Yes	1	flat	_	start_char=1366|end_char=1374
12	or	or	X	FM	Foreign=Yes	1	flat	_	start_char=1375|end_char=1377
13	add	add	X	FM	Foreign=Yes	1	flat	_	start_char=1378|end_char=1381
14	explanations	explanations	X	FM	Foreign=Yes	1	flat	_	start_char=1382|end_char=1394|SpaceAfter=No
15	.	.	PUNCT	$.	_	1	punct	_	start_char=1394|end_char=1395

# text = Words like "Fundbüro" could be explained as "das Büro für verlorene Gegenstände" or replaced with a simpler term if possible.
# sent_id = 12
1	Words	Words	PROPN	FM	Foreign=Yes	0	root	_	start_char=1396|end_char=1401
2	like	liken	PROPN	FM	Foreign=Yes	1	flat	_	start_char=1402|end_char=1406
3	"	"	PUNCT	$(	_	4	punct	_	start_char=1407|end_char=1408|SpaceAfter=No
4	Fundbüro	Fundbüro	NOUN	FM	Foreign=Yes	1	appos	_	start_char=1408|end_char=1416|SpaceAfter=No
5	"	"	PUNCT	$(	_	4	punct	_	start_char=1416|end_char=1417
6	could	could	X	FM	Foreign=Yes	4	flat	_	start_char=1418|end_char=1423
7	be	be	X	FM	Foreign=Yes	4	flat	_	start_char=1424|end_char=1426
8	explained	explained	X	FM	Foreign=Yes	4	flat	_	start_char=1427|end_char=1436
9	as	as	PRON	FM	Foreign=Yes|Person=3|PronType=Prs	4	flat	_	start_char=1437|end_char=1439
10	"	"	PUNCT	$(	_	12	punct	_	start_char=1440|end_char=1441|SpaceAfter=No
11	das	der	DET	ART	Case=Acc|Definite=Def|Gender=Neut|Number=Sing|PronType=Art	12	det	_	start_char=1441|end_char=1444
12	Büro	Büro	NOUN	NN	Case=Acc|Gender=Neut|Number=Sing	4	appos	_	start_char=1445|end_char=1449
13	für	für	ADP	APPR	_	15	case	_	start_char=1450|end_char=1453
14	verlorene	verloren	ADJ	ADJA	Case=Acc|Degree=Pos|Gender=Neut|Number=Plur	15	amod	_	start_char=1454|end_char=1463
15	Gegenstände	Gegenstand	NOUN	NN	Case=Acc|Gender=Neut|Number=Plur	12	nmod	_	start_char=1464|end_char=1475|SpaceAfter=No
16	"	"	PUNCT	$(	_	12	punct	_	start_char=1475|end_char=1476
17	or	or	X	FM	Foreign=Yes	12	cop	_	start_char=1477|end_char=1479
18	replaced	replaced	X	FM	Foreign=Yes	15	flat	_	start_char=1480|end_char=1488
19	with	with	X	FM	Foreign=Yes	12	flat	_	start_char=1489|end_char=1493
20	a	a	X	FM	Foreign=Yes	17	flat	_	start_char=1494|end_char=1495
21	simpler	simpel	X	FM	Foreign=Yes	17	flat	_	start_char=1496|end_char=1503
22	term	term	X	FM	Foreign=Yes	17	flat	_	start_char=1504|end_char=1508
23	if	if	X	FM	Foreign=Yes	12	flat	_	start_char=1509|end_char=1511
24	possible	possible	X	FM	Foreign=Yes	12	flat	_	start_char=1512|end_char=1520|SpaceAfter=No
25	.	.	PUNCT	$.	_	12	punct	_	start_char=1520|end_char=1521|SpacesAfter=\s\s

# text = I should also check for consistency in terminology and ensure that each section is clear and concise.
# sent_id = 13
1	I	I	X	FM	Foreign=Yes	0	root	_	start_char=1523|end_char=1524
2	should	should	X	FM	Foreign=Yes	1	flat	_	start_char=1525|end_char=1531
3	also	also	X	FM	Foreign=Yes	1	flat	_	start_char=1532|end_char=1536
4	check	checken	X	FM	Foreign=Yes	1	flat	_	start_char=1537|end_char=1542
5	for	for	X	FM	Foreign=Yes	1	flat	_	start_char=1543|end_char=1546
6	consistency	consistency	X	FM	Foreign=Yes	1	flat	_	start_char=1547|end_char=1558
7	in	in	X	FM	Foreign=Yes	1	flat	_	start_char=1559|end_char=1561
8	terminology	terminology	X	FM	Foreign=Yes	1	flat	_	start_char=1562|end_char=1573
9	and	and	X	FM	Foreign=Yes	1	flat	_	start_char=1574|end_char=1577
10	ensure	ensure	X	FM	Foreign=Yes	1	flat	_	start_char=1578|end_char=1584
11	that	that	X	FM	Foreign=Yes	1	flat	_	start_char=1585|end_char=1589
12	each	each	X	FM	Foreign=Yes	1	flat	_	start_char=1590|end_char=1594
13	section	section	X	FM	Foreign=Yes	1	flat	_	start_char=1595|end_char=1602
14	is	is	X	FM	Foreign=Yes	1	flat	_	start_char=1603|end_char=1605
15	clear	clear	X	FM	Foreign=Yes	1	flat	_	start_char=1606|end_char=1611
16	and	and	CCONJ	FM	Foreign=Yes	1	flat	_	start_char=1612|end_char=1615
17	concise	concise	X	FM	Foreign=Yes	1	flat	_	start_char=1616|end_char=1623|SpaceAfter=No
18	.	.	PUNCT	$.	_	1	punct	_	start_char=1623|end_char=1624

# text = Maybe using bullet points for lists and headings to structure the information.
# sent_id = 14
1	Maybe	Maybe	X	FM	Foreign=Yes	0	root	_	start_char=1625|end_char=1630
2	using	using	X	FM	Foreign=Yes	1	flat	_	start_char=1631|end_char=1636
3	bullet	bullet	X	FM	Foreign=Yes	1	flat	_	start_char=1637|end_char=1643
4	points	points	X	FM	Foreign=Yes	1	flat	_	start_char=1644|end_char=1650
5	for	for	X	FM	Foreign=Yes	1	flat	_	start_char=1651|end_char=1654
6	lists	lists	X	FM	Foreign=Yes	1	flat	_	start_char=1655|end_char=1660
7	and	and	CCONJ	FM	Foreign=Yes	1	flat	_	start_char=1661|end_char=1664
8	headings	headings	X	FM	Foreign=Yes	1	flat	_	start_char=1665|end_char=1673
9	to	to	X	FM	Foreign=Yes	1	flat	_	start_char=1674|end_char=1676
10	structure	structure	X	FM	Foreign=Yes	1	flat	_	start_char=1677|end_char=1686
11	the	the	DET	FM	Definite=Def|Foreign=Yes|PronType=Art	1	flat	_	start_char=1687|end_char=1690
12	information	information	NOUN	FM	Foreign=Yes	1	flat	_	start_char=1691|end_char=1702|SpaceAfter=No
13	.	.	PUNCT	$.	_	1	punct	_	start_char=1702|end_char=1703

# text = Also, ensuring that each step in the process is outlined simply without overlapping information.
# sent_id = 15
1	Also	also	ADV	ADV	_	0	root	_	start_char=1704|end_char=1708|SpaceAfter=No
2	,	,	PUNCT	$,	_	3	punct	_	start_char=1708|end_char=1709
3	ensuring	ensuring	X	FM	Foreign=Yes	1	appos	_	start_char=1710|end_char=1718
4	that	that	X	FM	Foreign=Yes	3	flat	_	start_char=1719|end_char=1723
5	each	each	X	FM	Foreign=Yes	3	flat	_	start_char=1724|end_char=1728
6	step	step	X	FM	Foreign=Yes	3	flat	_	start_char=1729|end_char=1733
7	in	in	X	FM	Foreign=Yes	3	flat	_	start_char=1734|end_char=1736
8	the	the	DET	FM	Definite=Def|Foreign=Yes|PronType=Art	3	flat	_	start_char=1737|end_char=1740
9	process	process	X	FM	Foreign=Yes	3	flat	_	start_char=1741|end_char=1748
10	is	is	X	FM	Foreign=Yes	3	flat	_	start_char=1749|end_char=1751
11	outlined	outlined	X	FM	Foreign=Yes	3	flat	_	start_char=1752|end_char=1760
12	simply	simply	X	FM	Foreign=Yes	3	flat	_	start_char=1761|end_char=1767
13	without	without	X	FM	Foreign=Yes	3	flat	_	start_char=1768|end_char=1775
14	overlapping	overlapping	X	FM	Foreign=Yes	3	flat	_	start_char=1776|end_char=1787
15	information	information	X	FM	Foreign=Yes	3	flat	_	start_char=1788|end_char=1799|SpaceAfter=No
16	.	.	PUNCT	$.	_	3	punct	_	start_char=1799|end_char=1800|SpacesAfter=\s\s

# text = Potential pitfalls: making sure that the core information isn't lost in simplification.
# sent_id = 16
1	Potential	Potential	X	FM	Foreign=Yes	0	root	_	start_char=1802|end_char=1811
2	pitfalls	pitfalls	X	FM	Foreign=Yes	1	flat	_	start_char=1812|end_char=1820|SpaceAfter=No
3	:	:	PUNCT	$.	_	4	punct	_	start_char=1820|end_char=1821
4	making	making	X	FM	Foreign=Yes	1	appos	_	start_char=1822|end_char=1828
5	sure	suren	X	FM	Foreign=Yes	4	flat	_	start_char=1829|end_char=1833
6	that	that	X	FM	Foreign=Yes	4	flat	_	start_char=1834|end_char=1838
7	the	the	DET	FM	Definite=Def|Foreign=Yes|PronType=Art	4	flat	_	start_char=1839|end_char=1842
8	core	core	X	FM	Foreign=Yes	4	flat	_	start_char=1843|end_char=1847
9	information	information	X	FM	Foreign=Yes	4	flat	_	start_char=1848|end_char=1859
10	isn	isn	X	FM	Foreign=Yes	4	flat	_	start_char=1860|end_char=1863|SpaceAfter=No
11	't	't	X	FM	Foreign=Yes	4	flat	_	start_char=1863|end_char=1865
12	lost	losen	X	FM	Foreign=Yes	4	flat	_	start_char=1866|end_char=1870
13	in	in	X	FM	Foreign=Yes	4	flat	_	start_char=1871|end_char=1873
14	simplification	simplification	X	FM	Foreign=Yes	4	flat	_	start_char=1874|end_char=1888|SpaceAfter=No
15	.	.	PUNCT	$.	_	4	punct	_	start_char=1888|end_char=1889

# text = For example, the part about the 6-month waiting period and subsequent auctioning needs to be clear but simplified.
# sent_id = 17
1	For	For	X	FM	Foreign=Yes	0	root	_	start_char=1890|end_char=1893
2	example	example	X	FM	Foreign=Yes	1	flat	_	start_char=1894|end_char=1901|SpaceAfter=No
3	,	,	PUNCT	$,	_	1	punct	_	start_char=1901|end_char=1902
4	the	the	DET	FM	Definite=Def|Foreign=Yes|PronType=Art	1	flat	_	start_char=1903|end_char=1906
5	part	part	X	FM	Foreign=Yes	1	flat	_	start_char=1907|end_char=1911
6	about	about	X	FM	Foreign=Yes	1	flat	_	start_char=1912|end_char=1917
7	the	the	DET	FM	Definite=Def|Foreign=Yes|PronType=Art	1	flat	_	start_char=1918|end_char=1921
8	6	6	X	FM	Foreign=Yes	1	flat	_	start_char=1922|end_char=1923|SpaceAfter=No
9	-	-	PUNCT	$,	_	1	punct	_	start_char=1923|end_char=1924|SpaceAfter=No
10	month	month	X	FM	Foreign=Yes	1	flat	_	start_char=1924|end_char=1929
11	waiting	waiting	X	FM	Foreign=Yes	1	flat	_	start_char=1930|end_char=1937
12	period	period	X	FM	Foreign=Yes	1	flat	_	start_char=1938|end_char=1944
13	and	and	X	FM	Foreign=Yes	1	flat	_	start_char=1945|end_char=1948
14	subsequent	subsequent	X	FM	Foreign=Yes	1	flat	_	start_char=1949|end_char=1959
15	auctioning	auctioning	X	FM	Foreign=Yes	1	flat	_	start_char=1960|end_char=1970
16	needs	needs	X	FM	Foreign=Yes	1	flat	_	start_char=1971|end_char=1976
17	to	to	X	FM	Foreign=Yes	1	flat	_	start_char=1977|end_char=1979
18	be	be	X	FM	Foreign=Yes	1	flat	_	start_char=1980|end_char=1982
19	clear	clear	X	FM	Foreign=Yes	1	flat	_	start_char=1983|end_char=1988
20	but	but	X	FM	Foreign=Yes	1	flat	_	start_char=1989|end_char=1992
21	simplified	simplified	PROPN	FM	Foreign=Yes	1	flat	_	start_char=1993|end_char=2003|SpaceAfter=No
22	.	.	PUNCT	$.	_	1	punct	_	start_char=2003|end_char=2004

# text = Also, handling specific terms like "Finderlohn" (finder's fee) which might need an explanation.
# sent_id = 18
1	Also	also	ADV	ADV	_	3	advmod	_	start_char=2005|end_char=2009|SpaceAfter=No
2	,	,	PUNCT	$,	_	3	punct	_	start_char=2009|end_char=2010
3	handling	handling	X	FM	Foreign=Yes	0	root	_	start_char=2011|end_char=2019
4	specific	specific	X	FM	Foreign=Yes	3	flat	_	start_char=2020|end_char=2028
5	terms	terms	X	FM	Foreign=Yes	3	flat	_	start_char=2029|end_char=2034
6	like	liken	X	FM	Foreign=Yes	3	flat	_	start_char=2035|end_char=2039
7	"	"	PUNCT	$(	_	8	punct	_	start_char=2040|end_char=2041|SpaceAfter=No
8	Finderlohn	Finderlohn	NOUN	NN	Foreign=Yes|Gender=Masc	3	appos	_	start_char=2041|end_char=2051|SpaceAfter=No
9	"	"	PUNCT	$(	_	8	punct	_	start_char=2051|end_char=2052
10	(	(	PUNCT	$(	_	11	punct	_	start_char=2053|end_char=2054|SpaceAfter=No
11	finder	finder	X	FM	Foreign=Yes	8	appos	_	start_char=2054|end_char=2060|SpaceAfter=No
12	's	's	X	FM	Foreign=Yes	11	flat	_	start_char=2060|end_char=2062
13	fee	fee	X	FM	Foreign=Yes	11	flat	_	start_char=2063|end_char=2066|SpaceAfter=No
14	)	)	PUNCT	$(	_	11	punct	_	start_char=2066|end_char=2067
15	which	which	X	FM	Foreign=Yes	11	flat	_	start_char=2068|end_char=2073
16	might	might	X	FM	Foreign=Yes	11	flat	_	start_char=2074|end_char=2079
17	need	need	X	FM	Foreign=Yes	11	flat	_	start_char=2080|end_char=2084
18	an	an	X	FM	Foreign=Yes	11	flat	_	start_char=2085|end_char=2087
19	explanation	explanation	X	FM	Foreign=Yes	11	flat	_	start_char=2088|end_char=2099|SpaceAfter=No
20	.	.	PUNCT	$.	_	3	punct	_	start_char=2099|end_char=2100|SpacesAfter=\s\s

# text = I should also consider the audience's comprehension level.
# sent_id = 19
1	I	I	X	FM	Foreign=Yes	0	root	_	start_char=2102|end_char=2103
2	should	should	X	FM	Foreign=Yes	1	flat	_	start_char=2104|end_char=2110
3	also	also	X	FM	Foreign=Yes	1	flat	_	start_char=2111|end_char=2115
4	consider	consider	X	FM	Foreign=Yes	1	flat	_	start_char=2116|end_char=2124
5	the	the	DET	FM	Definite=Def|Foreign=Yes|PronType=Art	1	flat	_	start_char=2125|end_char=2128
6	audience	audience	X	FM	Foreign=Yes	1	flat	_	start_char=2129|end_char=2137|SpaceAfter=No
7	's	's	X	FM	Foreign=Yes	1	flat	_	start_char=2137|end_char=2139
8	comprehension	comprehension	X	FM	Foreign=Yes	1	flat	_	start_char=2140|end_char=2153
9	level	level	X	FM	Foreign=Yes	1	flat	_	start_char=2154|end_char=2159|SpaceAfter=No
10	.	.	PUNCT	$.	_	1	punct	_	start_char=2159|end_char=2160

# text = Using everyday language, avoiding technical jargon, and ensuring that each instruction is a straightforward action.
# sent_id = 20
1	Using	Using	X	FM	Foreign=Yes	0	root	_	start_char=2161|end_char=2166
2	everyday	everyday	X	FM	Foreign=Yes	1	flat	_	start_char=2167|end_char=2175
3	language	language	X	FM	Foreign=Yes	1	flat	_	start_char=2176|end_char=2184|SpaceAfter=No
4	,	,	PUNCT	$,	_	5	punct	_	start_char=2184|end_char=2185
5	avoiding	avoiding	X	FM	Foreign=Yes	1	flat	_	start_char=2186|end_char=2194
6	technical	technical	X	FM	Foreign=Yes	1	flat	_	start_char=2195|end_char=2204
7	jargon	jargon	X	FM	Foreign=Yes	1	flat	_	start_char=2205|end_char=2211|SpaceAfter=No
8	,	,	PUNCT	$,	_	5	punct	_	start_char=2211|end_char=2212
9	and	and	CCONJ	FM	Foreign=Yes	5	cc	_	start_char=2213|end_char=2216
10	ensuring	ensuring	X	FM	Foreign=Yes	1	flat	_	start_char=2217|end_char=2225
11	that	that	X	FM	Foreign=Yes	1	flat	_	start_char=2226|end_char=2230
12	each	each	X	FM	Foreign=Yes	1	flat	_	start_char=2231|end_char=2235
13	instruction	instruction	X	FM	Foreign=Yes	10	flat	_	start_char=2236|end_char=2247
14	is	is	X	FM	Foreign=Yes	10	flat	_	start_char=2248|end_char=2250
15	a	a	X	FM	Foreign=Yes	1	flat	_	start_char=2251|end_char=2252
16	straightforward	straightforward	X	FM	Foreign=Yes	1	flat	_	start_char=2253|end_char=2268
17	action	action	X	FM	Foreign=Yes	1	flat	_	start_char=2269|end_char=2275|SpaceAfter=No
18	.	.	PUNCT	$.	_	1	punct	_	start_char=2275|end_char=2276

# text = For example, instead of saying "die Fundanzeige aufgenommen wird," maybe "Ihre Daten werden aufgeschrieben."
# sent_id = 21
1	For	For	PROPN	FM	Foreign=Yes	10	dep	_	start_char=2277|end_char=2280
2	example	example	X	FM	Foreign=Yes	1	flat	_	start_char=2281|end_char=2288|SpaceAfter=No
3	,	,	PUNCT	$,	_	1	punct	_	start_char=2288|end_char=2289
4	instead	instead	PROPN	FM	Foreign=Yes	1	flat	_	start_char=2290|end_char=2297
5	of	of	PROPN	FM	Foreign=Yes	1	flat	_	start_char=2298|end_char=2300
6	saying	saying	PROPN	FM	Foreign=Yes	1	flat	_	start_char=2301|end_char=2307
7	"	"	PUNCT	$(	_	1	punct	_	start_char=2308|end_char=2309|SpaceAfter=No
8	die	der	DET	ART	Case=Nom|Definite=Def|Gender=Fem|Number=Sing|PronType=Art	9	det	_	start_char=2309|end_char=2312
9	Fundanzeige	Fundanzeige	NOUN	NN	Case=Nom|Gender=Fem|Number=Sing	10	nsubj:pass	_	start_char=2313|end_char=2324
10	aufgenommen	aufnehmen	VERB	VVPP	VerbForm=Part	0	root	_	start_char=2325|end_char=2336
11	wird	werden	AUX	VAFIN	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin|Voice=Pass	10	aux:pass	_	start_char=2337|end_char=2341|SpaceAfter=No
12	,	,	PUNCT	$,	_	14	punct	_	start_char=2341|end_char=2342|SpaceAfter=No
13	"	"	PUNCT	$(	_	14	punct	_	start_char=2342|end_char=2343
14	maybe	maybe	PROPN	FM	_	19	parataxis	_	start_char=2344|end_char=2349
15	"	"	PUNCT	$(	_	14	punct	_	start_char=2350|end_char=2351|SpaceAfter=No
16	Ihre	ihr	DET	PPOSAT	Case=Nom|Gender=Neut|Number=Plur|Number[psor]=Sing|Person=3|Poss=Yes|PronType=Prs	17	det:poss	_	start_char=2351|end_char=2355
17	Daten	Datum	NOUN	NN	Case=Nom|Gender=Neut|Number=Plur	19	nsubj:pass	_	start_char=2356|end_char=2361
18	werden	werden	AUX	VAFIN	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin|Voice=Pass	19	aux:pass	_	start_char=2362|end_char=2368
19	aufgeschrieben	aufschreiben	VERB	VVPP	VerbForm=Part	10	parataxis	_	start_char=2369|end_char=2383|SpaceAfter=No
20	.	.	PUNCT	$.	_	19	punct	_	start_char=2383|end_char=2384|SpaceAfter=No
21	"	"	PUNCT	$(	_	14	punct	_	start_char=2384|end_char=2385|SpacesAfter=\s\s

# text = Finally, review the reformulated text to ensure it meets all three criteria: no unnecessary info, simple sentence structures, and explanations for complex terms.
# sent_id = 22
1	Finally	Finally	X	FM	Foreign=Yes	0	root	_	start_char=2387|end_char=2394|SpaceAfter=No
2	,	,	PUNCT	$,	_	3	punct	_	start_char=2394|end_char=2395
3	review	reviewen	X	FM	Foreign=Yes	1	flat	_	start_char=2396|end_char=2402
4	the	the	DET	FM	Definite=Def|Foreign=Yes|PronType=Art	1	flat	_	start_char=2403|end_char=2406
5	reformulated	reformulated	X	FM	Foreign=Yes	1	flat	_	start_char=2407|end_char=2419
6	text	Text	X	FM	Foreign=Yes	1	flat	_	start_char=2420|end_char=2424
7	to	to	X	FM	Foreign=Yes	1	flat	_	start_char=2425|end_char=2427
8	ensure	ensure	X	FM	Foreign=Yes	1	flat	_	start_char=2428|end_char=2434
9	it	it	X	FM	Foreign=Yes	1	flat	_	start_char=2435|end_char=2437
10	meets	meets	X	FM	Foreign=Yes	1	flat	_	start_char=2438|end_char=2443
11	all	alle	X	FM	Foreign=Yes	1	flat	_	start_char=2444|end_char=2447
12	three	three	X	FM	Foreign=Yes	1	flat	_	start_char=2448|end_char=2453
13	criteria	criteria	X	FM	Foreign=Yes	1	flat	_	start_char=2454|end_char=2462|SpaceAfter=No
14	:	:	PUNCT	$.	_	1	punct	_	start_char=2462|end_char=2463
15	no	no	X	FM	Foreign=Yes	1	flat	_	start_char=2464|end_char=2466
16	unnecessary	unnecessary	X	FM	Foreign=Yes	1	flat	_	start_char=2467|end_char=2478
17	info	info	X	FM	Foreign=Yes	1	flat	_	start_char=2479|end_char=2483|SpaceAfter=No
18	,	,	PUNCT	$,	_	1	punct	_	start_char=2483|end_char=2484
19	simple	simpeln	X	FM	Foreign=Yes	1	flat	_	start_char=2485|end_char=2491
20	sentence	sentence	X	FM	Foreign=Yes	1	flat	_	start_char=2492|end_char=2500
21	structures	structures	X	FM	Foreign=Yes	1	flat	_	start_char=2501|end_char=2511|SpaceAfter=No
22	,	,	PUNCT	$,	_	24	punct	_	start_char=2511|end_char=2512
23	and	and	CCONJ	FM	Foreign=Yes	24	cc	_	start_char=2513|end_char=2516
24	explanations	explanations	X	FM	Foreign=Yes	1	flat	_	start_char=2517|end_char=2529
25	for	for	X	FM	Foreign=Yes	24	flat	_	start_char=2530|end_char=2533
26	complex	complex	X	FM	Foreign=Yes	24	flat	_	start_char=2534|end_char=2541
27	terms	terms	X	FM	Foreign=Yes	24	flat	_	start_char=2542|end_char=2547|SpaceAfter=No
28	.	.	PUNCT	$.	_	1	punct	_	start_char=2547|end_char=2548

# text = Check for clarity and flow, making sure each section logically follows the previous one without redundancy.
# sent_id = 23
1	Check	checken	X	FM	Foreign=Yes	0	root	_	start_char=2549|end_char=2554
2	for	for	X	FM	Foreign=Yes	1	flat	_	start_char=2555|end_char=2558
3	clarity	clarity	X	FM	Foreign=Yes	1	flat	_	start_char=2559|end_char=2566
4	and	and	CCONJ	FM	Foreign=Yes	1	flat	_	start_char=2567|end_char=2570
5	flow	flow	X	FM	Foreign=Yes	1	flat	_	start_char=2571|end_char=2575|SpaceAfter=No
6	,	,	PUNCT	$,	_	1	punct	_	start_char=2575|end_char=2576
7	making	making	X	FM	Foreign=Yes	1	flat	_	start_char=2577|end_char=2583
8	sure	suren	X	FM	Foreign=Yes	1	flat	_	start_char=2584|end_char=2588
9	each	each	X	FM	Foreign=Yes	1	flat	_	start_char=2589|end_char=2593
10	section	section	X	FM	Foreign=Yes	1	flat	_	start_char=2594|end_char=2601
11	logically	logically	X	FM	Foreign=Yes	1	flat	_	start_char=2602|end_char=2611
12	follows	follows	X	FM	Foreign=Yes	1	flat	_	start_char=2612|end_char=2619
13	the	the	DET	FM	Definite=Def|Foreign=Yes|PronType=Art	1	flat	_	start_char=2620|end_char=2623
14	previous	previous	X	FM	Foreign=Yes	1	flat	_	start_char=2624|end_char=2632
15	one	one	X	FM	Foreign=Yes	1	flat	_	start_char=2633|end_char=2636
16	without	without	X	FM	Foreign=Yes	1	flat	_	start_char=2637|end_char=2644
17	redundancy	redundancy	X	FM	Foreign=Yes	1	flat	_	start_char=2645|end_char=2655|SpaceAfter=No
18	.	.	PUNCT	$.	_	1	punct	_	start_char=2655|end_char=2656

# text = </think> **Fundsachen – Einfach erklärt** ________________________________________ **Was tun, wenn Sie etwas finden?** - **Wertvolle Dinge**: Wenn Sie etwas finden, das **mehr als 10 Euro** kostet (z. B. Geld, Handys), geben Sie es ab.
# sent_id = 24
1	</think>	</think>	ADV	ADV	_	3	advmod	_	start_char=2657|end_char=2665|SpacesAfter=\s\s
2	**	**	PUNCT	$(	_	1	punct	_	start_char=2667|end_char=2669|SpaceAfter=No
3	Fundsachen	Fundsache	NOUN	NN	Case=Nom|Gender=Fem|Number=Plur	49	nsubj	_	start_char=2669|end_char=2679
4	–	–	PUNCT	$(	_	6	punct	_	start_char=2680|end_char=2681
5	Einfach	einfach	ADV	ADV	_	6	advmod	_	start_char=2682|end_char=2689
6	erklärt	erklären	VERB	VVFIN	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	parataxis	_	start_char=2690|end_char=2697|SpaceAfter=No
7	**	**	PUNCT	$(	_	11	punct	_	start_char=2697|end_char=2699|SpacesAfter=\s\s\s
8	________________________________________	________________________________________	PUNCT	$(	_	11	punct	_	start_char=2702|end_char=2742|SpacesAfter=\s\s\s\s
9	**	**	PUNCT	$(	_	11	punct	_	start_char=2746|end_char=2748|SpaceAfter=No
10	Was	was	PRON	PWS	Case=Acc|Gender=Neut|Number=Sing|PronType=Int,Rel	11	nsubj	_	start_char=2748|end_char=2751
11	tun	tun	VERB	VVINF	VerbForm=Inf	6	parataxis	_	start_char=2752|end_char=2755|SpaceAfter=No
12	,	,	PUNCT	$,	_	16	punct	_	start_char=2755|end_char=2756
13	wenn	wenn	SCONJ	KOUS	_	16	mark	_	start_char=2757|end_char=2761
14	Sie	sie	PRON	PPER	Case=Nom|Number=Plur|Person=2|Polite=Form|PronType=Prs	16	nsubj	_	start_char=2762|end_char=2765
15	etwas	etwas	PRON	PIS	Gender=Neut|Number=Sing|PronType=Ind	16	obj	_	start_char=2766|end_char=2771
16	finden	finden	VERB	VVINF	VerbForm=Inf	11	advcl	_	start_char=2772|end_char=2778|SpaceAfter=No
17	?	?	PUNCT	$.	_	16	punct	_	start_char=2778|end_char=2779|SpaceAfter=No
18	**	**	PUNCT	$(	_	20	punct	_	start_char=2779|end_char=2781|SpacesAfter=\s\s\s
19	-	-	PUNCT	$(	_	23	punct	_	start_char=2784|end_char=2785
20	*	*	SYM	$(	_	16	parataxis	_	start_char=2786|end_char=2787|SpaceAfter=No
21	*	*	SYM	$(	_	23	cc	_	start_char=2787|end_char=2788|SpaceAfter=No
22	Wertvolle	wertvoll	ADJ	ADJA	Case=Nom|Degree=Pos|Gender=Fem|Number=Plur	23	amod	_	start_char=2788|end_char=2797
23	Dinge	Ding	NOUN	NN	Case=Nom|Gender=Fem|Number=Plur	16	appos	_	start_char=2798|end_char=2803|SpaceAfter=No
24	*	*	PUNCT	$(	_	23	punct	_	start_char=2803|end_char=2804|SpaceAfter=No
25	*	*	PUNCT	$(	_	23	appos	_	start_char=2804|end_char=2805|SpaceAfter=No
26	:	:	PUNCT	$.	_	30	punct	_	start_char=2805|end_char=2806
27	Wenn	wenn	SCONJ	KOUS	_	30	mark	_	start_char=2807|end_char=2811
28	Sie	sie	PRON	PPER	Case=Nom|Number=Plur|Person=2|Polite=Form|PronType=Prs	30	nsubj	_	start_char=2812|end_char=2815
29	etwas	etwas	PRON	PIS	Gender=Neut|Number=Sing|PronType=Ind	30	obj	_	start_char=2816|end_char=2821
30	finden	finden	VERB	VVINF	VerbForm=Inf	25	advcl	_	start_char=2822|end_char=2828|SpaceAfter=No
31	,	,	PUNCT	$,	_	40	punct	_	start_char=2828|end_char=2829
32	das	der	PRON	PRELS	Case=Nom|Gender=Neut|Number=Sing|PronType=Dem,Rel	40	nsubj	_	start_char=2830|end_char=2833
33	*	*	PUNCT	$(	_	40	advmod	_	start_char=2834|end_char=2835|SpaceAfter=No
34	*mehr	*mehr	NOUN	NN	_	40	obj	_	start_char=2835|end_char=2840
35	als	als	ADP	KOKOM	_	37	case	_	start_char=2841|end_char=2844
36	10	10	NUM	CARD	NumType=Card	37	nummod	_	start_char=2845|end_char=2847
37	Euro	Euro	NOUN	NN	Case=Acc|Gender=Masc|Number=Plur	34	nmod	_	start_char=2848|end_char=2852|SpaceAfter=No
38	*	*	SYM	XY	_	37	appos	_	start_char=2852|end_char=2853|SpaceAfter=No
39	*	*	NOUN	XY	_	40	obj	_	start_char=2853|end_char=2854
40	kostet	kosten	VERB	VVFIN	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	29	acl	_	start_char=2855|end_char=2861
41	(	(	PUNCT	$(	_	44	punct	_	start_char=2862|end_char=2863|SpaceAfter=No
42	z.	z.	X	APPRART	_	43	case	_	start_char=2863|end_char=2865
43	B.	B.	X	NN	Case=Dat|Gender=Neut|Number=Sing	44	nmod	_	start_char=2866|end_char=2868
44	Geld	Geld	NOUN	NN	Case=Acc|Gender=Neut|Number=Sing	40	appos	_	start_char=2869|end_char=2873|SpaceAfter=No
45	,	,	PUNCT	$,	_	46	punct	_	start_char=2873|end_char=2874
46	Handys	Handy	NOUN	NN	Case=Nom|Gender=Neut|Number=Sing	44	conj	_	start_char=2875|end_char=2881|SpaceAfter=No
47	)	)	PUNCT	$(	_	44	punct	_	start_char=2881|end_char=2882|SpaceAfter=No
48	,	,	PUNCT	$,	_	30	punct	_	start_char=2882|end_char=2883
49	geben	geben	VERB	VVFIN	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	start_char=2884|end_char=2889
50	Sie	sie	PRON	PPER	Case=Nom|Number=Plur|Person=2|PronType=Prs	49	nsubj	_	start_char=2890|end_char=2893
51	es	es	PRON	PPER	Case=Acc|Gender=Neut|Number=Sing|Person=3|PronType=Prs	49	obj	_	start_char=2894|end_char=2896
52	ab.	ab.	ADP	PTKVZ	_	49	compound:prt	_	start_char=2897|end_char=2900|SpacesAfter=\s\s\s

# text = - **Wo?**: Gehen Sie zum **Fundbüro** Ihrer Stadt oder Gemeinde.
# sent_id = 25
1	-	-	PUNCT	$(	_	3	punct	_	start_char=2903|end_char=2904
2	**	**	PUNCT	$(	_	3	punct	_	start_char=2905|end_char=2907|SpaceAfter=No
3	Wo?	Wo?	NOUN	NN	Case=Nom|Gender=Neut|Number=Sing	6	dep	_	start_char=2907|end_char=2910|SpaceAfter=No
4	**	**	PUNCT	$(	_	6	punct	_	start_char=2910|end_char=2912|SpaceAfter=No
5	:	:	PUNCT	$.	_	6	punct	_	start_char=2912|end_char=2913
6	Gehen	Gehen	VERB	VVFIN	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	start_char=2914|end_char=2919
7	Sie	sie	PRON	PPER	Case=Nom|Number=Plur|Person=2|Polite=Form|PronType=Prs	6	nsubj	_	start_char=2920|end_char=2923
8-9	zum	_	_	_	_	_	_	_	start_char=2924|end_char=2927
8	zu	zu	ADP	APPR	_	11	case	_	_
9	dem	der	DET	ART	Case=Dat|Definite=Def|Gender=Neut|Number=Sing|PronType=Art	11	det	_	_
10	**	**	PUNCT	$(	_	11	punct	_	start_char=2928|end_char=2930|SpaceAfter=No
11	Fundbüro	Fundbüro	NOUN	NN	Case=Dat|Gender=Neut|Number=Sing	6	obl	_	start_char=2930|end_char=2938|SpaceAfter=No
12	*	*	PUNCT	$(	_	11	appos	_	start_char=2938|end_char=2939|SpaceAfter=No
13	*	*	PUNCT	$(	_	15	case	_	start_char=2939|end_char=2940
14	Ihrer	Ihr	DET	PPOSAT	Case=Dat|Gender=Fem|Number=Sing|Person=3|Poss=Yes|PronType=Prs	15	det:poss	_	start_char=2941|end_char=2946
15	Stadt	Stadt	NOUN	NN	Case=Dat|Gender=Fem|Number=Sing	11	nmod	_	start_char=2947|end_char=2952
16	oder	oder	CCONJ	KON	_	17	cc	_	start_char=2953|end_char=2957
17	Gemeinde	Gemeinde	NOUN	NN	Case=Dat|Gender=Fem|Number=Sing	15	conj	_	start_char=2958|end_char=2966|SpaceAfter=No
18	.	.	PUNCT	$.	_	6	punct	_	start_char=2966|end_char=2967|SpacesAfter=\s\s\s\s

# text = **Was passiert danach?** 1. **Daten aufschreiben**: Ihr Name und Ihre Adresse werden notiert.
# sent_id = 26
1	**	**	PUNCT	$(	_	2	punct	_	start_char=2971|end_char=2973|SpaceAfter=No
2	Was	was	PRON	PWS	Case=Nom|Gender=Neut|Number=Sing|PronType=Int,Rel	3	nsubj	_	start_char=2973|end_char=2976
3	passiert	passieren	VERB	VVFIN	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	start_char=2977|end_char=2985
4	danach	danach	ADV	PAV	_	3	advmod	_	start_char=2986|end_char=2992|SpaceAfter=No
5	?	?	PUNCT	$.	_	3	punct	_	start_char=2992|end_char=2993|SpaceAfter=No
6	**	**	PUNCT	$(	_	11	punct	_	start_char=2993|end_char=2995|SpacesAfter=\s\s\s
7	1.	1.	ADJ	ADJA	Degree=Pos|NumType=Ord	11	parataxis	_	start_char=2998|end_char=3000
8	*	*	PUNCT	$(	_	11	parataxis	_	start_char=3001|end_char=3002|SpaceAfter=No
9	*	*	PUNCT	$(	_	11	punct	_	start_char=3002|end_char=3003|SpaceAfter=No
10	Daten	Datum	NOUN	NN	Case=Acc|Gender=Neut|Number=Plur	11	obj	_	start_char=3003|end_char=3008
11	aufschreiben	aufschreiben	VERB	VVINF	Number=Plur|VerbForm=Fin	3	parataxis	_	start_char=3009|end_char=3021|SpaceAfter=No
12	*	*	PUNCT	$(	_	11	punct	_	start_char=3021|end_char=3022|SpaceAfter=No
13	*	*	PUNCT	$(	_	11	punct	_	start_char=3022|end_char=3023|SpaceAfter=No
14	:	:	PUNCT	$.	_	21	punct	_	start_char=3023|end_char=3024
15	Ihr	ihr	DET	PPOSAT	Case=Nom|Gender=Masc|Number=Sing|Number[psor]=Sing|Person=3|Poss=Yes|PronType=Prs	16	det:poss	_	start_char=3025|end_char=3028
16	Name	Name	NOUN	NN	Case=Nom|Gender=Masc|Number=Sing	21	nsubj:pass	_	start_char=3029|end_char=3033
17	und	und	CCONJ	KON	_	19	cc	_	start_char=3034|end_char=3037
18	Ihre	ihr	DET	PPOSAT	Case=Nom|Gender=Fem|Number=Sing|Number[psor]=Sing|Person=3|Poss=Yes|PronType=Prs	19	det:poss	_	start_char=3038|end_char=3042
19	Adresse	Adresse	NOUN	NN	Case=Nom|Gender=Fem|Number=Sing	16	conj	_	start_char=3043|end_char=3050
20	werden	werden	AUX	VAFIN	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin|Voice=Pass	21	aux:pass	_	start_char=3051|end_char=3057
21	notiert	notieren	VERB	VVPP	VerbForm=Part	3	parataxis	_	start_char=3058|end_char=3065|SpaceAfter=No
22	.	.	PUNCT	$.	_	3	punct	_	start_char=3065|end_char=3066|SpacesAfter=\s\s\s

# text = 2. **Fundort und -zeit**: Wann und wo Sie den Gegenstand gefunden haben, wird festgehalten.
# sent_id = 27
1	2.	2.	ADJ	ADJA	Degree=Pos|NumType=Ord	3	compound	_	start_char=3069|end_char=3071
2	**	**	PUNCT	$(	_	3	punct	_	start_char=3072|end_char=3074|SpaceAfter=No
3	Fundort	Fundort	NOUN	NN	Case=Nom|Gender=Neut|Number=Sing	20	nsubj:pass	_	start_char=3074|end_char=3081
4	und	und	CCONJ	KON	_	6	cc	_	start_char=3082|end_char=3085
5	-	-	PUNCT	$(	_	6	punct	_	start_char=3086|end_char=3087|SpaceAfter=No
6	zeit	zeit	NOUN	NN	Case=Nom|Gender=Fem|Number=Sing	3	conj	_	start_char=3087|end_char=3091|SpaceAfter=No
7	*	*	PUNCT	$(	_	3	punct	_	start_char=3091|end_char=3092|SpaceAfter=No
8	*	*	PUNCT	$(	_	3	appos	_	start_char=3092|end_char=3093|SpaceAfter=No
9	:	:	PUNCT	$.	_	16	punct	_	start_char=3093|end_char=3094
10	Wann	wann	ADV	PWAV	PronType=Int	16	advmod	_	start_char=3095|end_char=3099
11	und	und	CCONJ	KON	_	16	cc	_	start_char=3100|end_char=3103
12	wo	wo	ADV	PWAV	PronType=Int	16	advmod	_	start_char=3104|end_char=3106
13	Sie	sie	PRON	PPER	Case=Nom|Number=Plur|Person=3|PronType=Prs	16	nsubj	_	start_char=3107|end_char=3110
14	den	der	DET	ART	Case=Acc|Definite=Def|Gender=Masc|Number=Sing|PronType=Art	15	det	_	start_char=3111|end_char=3114
15	Gegenstand	Gegenstand	NOUN	NN	Case=Acc|Gender=Masc|Number=Sing	16	obj	_	start_char=3115|end_char=3125
16	gefunden	finden	VERB	VVPP	VerbForm=Part	3	acl	_	start_char=3126|end_char=3134
17	haben	haben	AUX	VAFIN	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	16	aux	_	start_char=3135|end_char=3140|SpaceAfter=No
18	,	,	PUNCT	$,	_	3	punct	_	start_char=3140|end_char=3141
19	wird	werden	AUX	VAFIN	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin|Voice=Pass	20	aux:pass	_	start_char=3142|end_char=3146
20	festgehalten	festhalten	VERB	VVPP	VerbForm=Part	0	root	_	start_char=3147|end_char=3159|SpaceAfter=No
21	.	.	PUNCT	$.	_	20	punct	_	start_char=3159|end_char=3160|SpacesAfter=\s\s\s

# text = 3. **Besitzer meldet sich nicht**: Sie können den Gegenstand **behalten**. 4. **Belohnung**:
# sent_id = 28
1	3.	3.	ADJ	ADJA	Degree=Pos|NumType=Ord	3	compound	_	start_char=3163|end_char=3165
2	**	**	PUNCT	$(	_	1	punct	_	start_char=3166|end_char=3168|SpaceAfter=No
3	Besitzer	Besitzer	NOUN	NN	Case=Nom|Gender=Masc|Number=Sing	4	nsubj	_	start_char=3168|end_char=3176
4	meldet	melden	VERB	VVFIN	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	start_char=3177|end_char=3183
5	sich	sich	PRON	PRF	Case=Acc|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	start_char=3184|end_char=3188
6	nicht	nicht	PART	PTKNEG	Polarity=Neg	4	advmod	_	start_char=3189|end_char=3194|SpaceAfter=No
7	*	*	PUNCT	$(	_	4	advmod	_	start_char=3194|end_char=3195|SpaceAfter=No
8	*	*	PUNCT	$(	_	4	compound:prt	_	start_char=3195|end_char=3196|SpaceAfter=No
9	:	:	PUNCT	$.	_	14	punct	_	start_char=3196|end_char=3197
10	Sie	sie	PRON	PPER	Case=Nom|Number=Plur|Person=3|PronType=Prs	14	nsubj	_	start_char=3198|end_char=3201
11	können	können	AUX	VMFIN	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	14	aux	_	start_char=3202|end_char=3208
12	den	der	DET	ART	Case=Acc|Definite=Def|Gender=Masc|Number=Sing|PronType=Art	13	det	_	start_char=3209|end_char=3212
13	Gegenstand	Gegenstand	NOUN	NN	Case=Acc|Gender=Masc|Number=Sing	14	obj	_	start_char=3213|end_char=3223
14	**behalten	**behalten	VERB	VVIMP	VerbForm=Inf	4	parataxis	_	start_char=3224|end_char=3234|SpaceAfter=No
15	*	*	PUNCT	$(	_	14	parataxis	_	start_char=3234|end_char=3235|SpaceAfter=No
16	*.	*.	PUNCT	$(	_	17	punct	_	start_char=3235|end_char=3237|SpacesAfter=\s\s\s
17	4.	4.	ADJ	ADJA	Degree=Pos|NumType=Ord	14	appos	_	start_char=3240|end_char=3242
18	*	*	SYM	XY	_	20	compound	_	start_char=3243|end_char=3244|SpaceAfter=No
19	*	*	SYM	XY	_	20	compound	_	start_char=3244|end_char=3245|SpaceAfter=No
20	Belohnung	Belohnung	NOUN	NN	Case=Nom|Gender=Fem|Number=Sing	14	appos	_	start_char=3245|end_char=3254|SpaceAfter=No
21	*	*	PUNCT	$(	_	20	punct	_	start_char=3254|end_char=3255|SpaceAfter=No
22	*	*	PUNCT	$(	_	14	dep	_	start_char=3255|end_char=3256|SpaceAfter=No
23	:	:	PUNCT	$.	_	4	punct	_	start_char=3256|end_char=3257

# text = Sie können eine **Belohnung** für das Finden bekommen.
# sent_id = 29
1	Sie	sie	PRON	PPER	Case=Nom|Number=Plur|Person=3|PronType=Prs	10	nsubj	_	start_char=3258|end_char=3261
2	können	können	AUX	VMFIN	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	10	aux	_	start_char=3262|end_char=3268
3	eine	ein	DET	ART	Case=Acc|Definite=Ind|Gender=Fem|NumType=Card|Number=Sing|PronType=Art	5	det	_	start_char=3269|end_char=3273
4	**	**	PUNCT	$(	_	5	punct	_	start_char=3274|end_char=3276|SpaceAfter=No
5	Belohnung	Belohnung	NOUN	NN	Case=Acc|Gender=Fem|Number=Sing	10	obj	_	start_char=3276|end_char=3285|SpaceAfter=No
6	**	**	PUNCT	$(	_	5	punct	_	start_char=3285|end_char=3287
7	für	für	ADP	APPR	_	9	case	_	start_char=3288|end_char=3291
8	das	der	DET	ART	Case=Acc|Definite=Def|Gender=Neut|Number=Sing|PronType=Art	9	det	_	start_char=3292|end_char=3295
9	Finden	finden	NOUN	NN	Case=Acc|Gender=Neut|Number=Sing	10	obl	_	start_char=3296|end_char=3302
10	bekommen	bekommen	VERB	VVINF	VerbForm=Inf	0	root	_	start_char=3303|end_char=3311|SpaceAfter=No
11	.	.	PUNCT	$.	_	10	punct	_	start_char=3311|end_char=3312|SpacesAfter=\s\s\s\s

# text = **Aufbewahrung und Verkauf** - Der Gegenstand wird **6 Monate lang** aufbewahrt.
# sent_id = 30
1	**	**	PUNCT	$(	_	2	punct	_	start_char=3316|end_char=3318|SpaceAfter=No
2	Aufbewahrung	Aufbewahrung	NOUN	NN	Case=Nom|Gender=Fem|Number=Sing	16	nsubj:pass	_	start_char=3318|end_char=3330
3	und	und	CCONJ	KON	_	4	cc	_	start_char=3331|end_char=3334
4	Verkauf	Verkauf	NOUN	NN	Case=Nom|Gender=Masc|Number=Sing	2	conj	_	start_char=3335|end_char=3342|SpaceAfter=No
5	*	*	PUNCT	$(	_	2	punct	_	start_char=3342|end_char=3343|SpaceAfter=No
6	*	*	PUNCT	$(	_	2	appos	_	start_char=3343|end_char=3344|SpacesAfter=\s\s\s
7	-	-	PUNCT	$(	_	2	punct	_	start_char=3347|end_char=3348
8	Der	der	DET	ART	Case=Nom|Definite=Def|Gender=Masc|Number=Sing|PronType=Art	9	det	_	start_char=3349|end_char=3352
9	Gegenstand	Gegenstand	NOUN	NN	Case=Nom|Gender=Masc|Number=Sing	16	nsubj:pass	_	start_char=3353|end_char=3363
10	wird	werden	AUX	VAFIN	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin|Voice=Pass	16	aux:pass	_	start_char=3364|end_char=3368
11	*	*	PUNCT	$(	_	12	advmod	_	start_char=3369|end_char=3370|SpaceAfter=No
12	*6	*6	NUM	CARD	NumType=Card	13	nummod	_	start_char=3370|end_char=3372
13	Monate	Monat	NOUN	NN	Case=Acc|Gender=Masc|Number=Plur	14	nmod	_	start_char=3373|end_char=3379
14	lang	lang	ADJ	ADJD	Degree=Pos	16	advmod	_	start_char=3380|end_char=3384|SpaceAfter=No
15	**	**	PUNCT	$(	_	14	punct	_	start_char=3384|end_char=3386
16	aufbewahrt	aufbewahren	VERB	VVPP	VerbForm=Part	0	root	_	start_char=3387|end_char=3397|SpaceAfter=No
17	.	.	PUNCT	$.	_	16	punct	_	start_char=3397|end_char=3398|SpacesAfter=\s\s\s

# text = - Wenn der Besitzer nicht kommt: - **Sie als Finder** können den Gegenstand behalten.
# sent_id = 31
1	-	-	PUNCT	$(	_	6	punct	_	start_char=3401|end_char=3402
2	Wenn	wenn	SCONJ	KOUS	_	6	mark	_	start_char=3403|end_char=3407
3	der	der	DET	ART	Case=Nom|Definite=Def|Gender=Masc|Number=Sing|PronType=Art	4	det	_	start_char=3408|end_char=3411
4	Besitzer	Besitzer	NOUN	NN	Case=Nom|Gender=Masc|Number=Sing	6	nsubj	_	start_char=3412|end_char=3420
5	nicht	nicht	PART	PTKNEG	Polarity=Neg	6	advmod	_	start_char=3421|end_char=3426
6	kommt	kommen	VERB	VVFIN	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	18	advcl	_	start_char=3427|end_char=3432|SpaceAfter=No
7	:	:	PUNCT	$.	_	18	punct	_	start_char=3432|end_char=3433|SpacesAfter=\s\s\s\s\s
8	-	-	PUNCT	$(	_	18	punct	_	start_char=3438|end_char=3439
9	**	**	PUNCT	$(	_	18	punct	_	start_char=3440|end_char=3442|SpaceAfter=No
10	Sie	sie	PRON	PPER	Case=Nom|Number=Plur|Person=2|Polite=Form|PronType=Prs	18	nsubj	_	start_char=3442|end_char=3445
11	als	als	ADP	KOKOM	_	12	case	_	start_char=3446|end_char=3449
12	Finder	Finder	NOUN	NN	Case=Nom|Gender=Masc|Number=Sing	18	obl	_	start_char=3450|end_char=3456|SpaceAfter=No
13	*	*	PUNCT	$(	_	12	punct	_	start_char=3456|end_char=3457|SpaceAfter=No
14	*	*	PUNCT	$(	_	12	punct	_	start_char=3457|end_char=3458
15	können	können	AUX	VMFIN	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	18	aux	_	start_char=3459|end_char=3465
16	den	der	DET	ART	Case=Acc|Definite=Def|Gender=Masc|Number=Sing|PronType=Art	17	det	_	start_char=3466|end_char=3469
17	Gegenstand	Gegenstand	NOUN	NN	Case=Acc|Gender=Masc|Number=Sing	18	obj	_	start_char=3470|end_char=3480
18	behalten	behalten	VERB	VVINF	VerbForm=Inf	0	root	_	start_char=3481|end_char=3489|SpaceAfter=No
19	.	.	PUNCT	$.	_	18	punct	_	start_char=3489|end_char=3490|SpacesAfter=\s\s\s\s\s

# text = - **Stadt/Gemeinde** wird Eigentümer, wenn der Fund in öffentlichen Orten (z. B. Bus, Bahnhof) gefunden wurde.
# sent_id = 32
1	-	-	PUNCT	$(	_	3	punct	_	start_char=3495|end_char=3496
2	**	**	PUNCT	$(	_	3	punct	_	start_char=3497|end_char=3499|SpaceAfter=No
3	Stadt/Gemeinde	Stadt/Gemeinde	NOUN	NN	Case=Nom|Gender=Fem|Number=Sing	6	nsubj	_	start_char=3499|end_char=3513|SpaceAfter=No
4	*	*	PUNCT	$(	_	3	appos	_	start_char=3513|end_char=3514|SpaceAfter=No
5	*	*	PUNCT	$(	_	3	punct	_	start_char=3514|end_char=3515
6	wird	werden	VERB	VAFIN	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	start_char=3516|end_char=3520
7	Eigentümer	Eigentümer	NOUN	NN	Case=Nom|Gender=Masc|Number=Sing	6	xcomp	_	start_char=3521|end_char=3531|SpaceAfter=No
8	,	,	PUNCT	$,	_	22	punct	_	start_char=3531|end_char=3532
9	wenn	wenn	SCONJ	KOUS	_	22	mark	_	start_char=3533|end_char=3537
10	der	der	DET	ART	Case=Nom|Definite=Def|Gender=Masc|Number=Sing|PronType=Art	11	det	_	start_char=3538|end_char=3541
11	Fund	Fund	NOUN	NN	Case=Nom|Gender=Masc|Number=Sing	22	nsubj:pass	_	start_char=3542|end_char=3546
12	in	in	ADP	APPR	_	14	case	_	start_char=3547|end_char=3549
13	öffentlichen	öffentlich	ADJ	ADJA	Case=Dat|Degree=Pos|Gender=Masc|Number=Plur	14	amod	_	start_char=3550|end_char=3562
14	Orten	Ort|Orten	NOUN	NN	Case=Dat|Gender=Masc|Number=Plur	22	obl	_	start_char=3563|end_char=3568
15	(	(	PUNCT	$(	_	18	punct	_	start_char=3569|end_char=3570|SpaceAfter=No
16	z.	z.	X	APPRART	_	17	case	_	start_char=3570|end_char=3572
17	B.	B.	X	NN	Case=Dat|Gender=Neut|Number=Sing	18	nmod	_	start_char=3573|end_char=3575
18	Bus	Bus	NOUN	NN	Case=Nom|Gender=Masc|Number=Sing	14	appos	_	start_char=3576|end_char=3579|SpaceAfter=No
19	,	,	PUNCT	$,	_	20	punct	_	start_char=3579|end_char=3580
20	Bahnhof	Bahnhof	NOUN	NN	Case=Nom|Gender=Masc|Number=Sing	18	conj	_	start_char=3581|end_char=3588|SpaceAfter=No
21	)	)	PUNCT	$(	_	18	punct	_	start_char=3588|end_char=3589
22	gefunden	finden	VERB	VVPP	VerbForm=Part	7	advcl	_	start_char=3590|end_char=3598
23	wurde	werden	AUX	VAFIN	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin|Voice=Pass	22	aux:pass	_	start_char=3599|end_char=3604|SpaceAfter=No
24	.	.	PUNCT	$.	_	6	punct	_	start_char=3604|end_char=3605|SpacesAfter=\s\s\s\s\s

# text = - Die Stadt **verkauft** den Gegenstand dann (z. B. auf einer Auktion).
# sent_id = 33
1	-	-	PUNCT	$(	_	2	punct	_	start_char=3610|end_char=3611
2	Die	der	DET	ART	Case=Nom|Definite=Def|Gender=Fem|Number=Sing|PronType=Art	3	det	_	start_char=3612|end_char=3615
3	Stadt	Stadt	NOUN	NN	Case=Nom|Gender=Fem|Number=Sing	4	nsubj	_	start_char=3616|end_char=3621
4	**verkauft	**verkaufen	VERB	VVFIN	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	start_char=3622|end_char=3632|SpaceAfter=No
5	*	*	PUNCT	$(	_	4	advmod	_	start_char=3632|end_char=3633|SpaceAfter=No
6	*	*	PUNCT	$(	_	4	advmod	_	start_char=3633|end_char=3634
7	den	der	DET	ART	Case=Acc|Definite=Def|Gender=Masc|Number=Sing|PronType=Art	8	det	_	start_char=3635|end_char=3638
8	Gegenstand	Gegenstand	NOUN	NN	Case=Acc|Gender=Masc|Number=Sing	4	obj	_	start_char=3639|end_char=3649
9	dann	dann	ADV	ADV	_	4	advmod	_	start_char=3650|end_char=3654
10	(	(	PUNCT	$(	_	15	punct	_	start_char=3655|end_char=3656|SpaceAfter=No
11	z.	z.	X	APPRART	_	12	case	_	start_char=3656|end_char=3658
12	B.	B.	X	NN	Case=Dat|Gender=Neut|Number=Sing	15	nmod	_	start_char=3659|end_char=3661
13	auf	auf	ADP	APPR	_	15	case	_	start_char=3662|end_char=3665
14	einer	ein	DET	ART	Case=Dat|Definite=Ind|Gender=Fem|NumType=Card|Number=Sing|PronType=Art	15	det	_	start_char=3666|end_char=3671
15	Auktion	Auktion	NOUN	NN	Case=Dat|Gender=Fem|Number=Sing	4	obl	_	start_char=3672|end_char=3679|SpaceAfter=No
16	)	)	PUNCT	$(	_	15	punct	_	start_char=3679|end_char=3680|SpaceAfter=No
17	.	.	PUNCT	$.	_	4	punct	_	start_char=3680|end_char=3681|SpacesAfter=\s\s\s

# text = - **Geld aus dem Verkauf**: Gehört der Stadt.
# sent_id = 34
1	-	-	PUNCT	$(	_	3	punct	_	start_char=3684|end_char=3685
2	**	**	PUNCT	$(	_	3	punct	_	start_char=3686|end_char=3688|SpaceAfter=No
3	Geld	Geld	NOUN	NN	Case=Nom|Gender=Neut|Number=Sing	0	root	_	start_char=3688|end_char=3692
4	aus	aus	ADP	APPR	_	6	case	_	start_char=3693|end_char=3696
5	dem	der	DET	ART	Case=Dat|Definite=Def|Gender=Masc|Number=Sing|PronType=Art	6	det	_	start_char=3697|end_char=3700
6	Verkauf	Verkauf	NOUN	NN	Case=Dat|Gender=Masc|Number=Sing	3	nmod	_	start_char=3701|end_char=3708|SpaceAfter=No
7	*	*	PUNCT	$(	_	8	punct	_	start_char=3708|end_char=3709|SpaceAfter=No
8	*	*	PUNCT	$(	_	6	appos	_	start_char=3709|end_char=3710|SpaceAfter=No
9	:	:	PUNCT	$.	_	10	punct	_	start_char=3710|end_char=3711
10	Gehört	Gehört	NOUN	NN	Case=Nom|Number=Sing	3	appos	_	start_char=3712|end_char=3718
11	der	der	DET	ART	Case=Gen|Definite=Def|Gender=Fem|Number=Sing|PronType=Art	12	det	_	start_char=3719|end_char=3722
12	Stadt	Stadt	NOUN	NN	Case=Gen|Gender=Fem|Number=Sing	10	nmod	_	start_char=3723|end_char=3728|SpaceAfter=No
13	.	.	PUNCT	$.	_	3	punct	_	start_char=3728|end_char=3729|SpacesAfter=\s\s\s\s

# text = **Was mit Tieren?** - Wenn Sie ein Tier finden: - Melden Sie es der Stadt/Gemeinde.
# sent_id = 35
1	**	**	PUNCT	$(	_	15	punct	_	start_char=3733|end_char=3735|SpaceAfter=No
2	Was	was	PRON	PWS	Case=Nom|Gender=Neut|Number=Sing|PronType=Int,Rel	15	nsubj	_	start_char=3735|end_char=3738
3	mit	mit	ADP	APPR	_	4	case	_	start_char=3739|end_char=3742
4	Tieren	Tier	NOUN	NN	Case=Dat|Gender=Neut|Number=Plur	2	nmod	_	start_char=3743|end_char=3749|SpaceAfter=No
5	?	?	PUNCT	$.	_	4	punct	_	start_char=3749|end_char=3750|SpaceAfter=No
6	**	**	PUNCT	$(	_	12	punct	_	start_char=3750|end_char=3752|SpacesAfter=\s\s\s
7	-	-	PUNCT	$(	_	12	punct	_	start_char=3755|end_char=3756
8	Wenn	wenn	SCONJ	KOUS	_	12	mark	_	start_char=3757|end_char=3761
9	Sie	sie	PRON	PPER	Case=Nom|Number=Plur|Person=2|Polite=Form|PronType=Prs	12	nsubj	_	start_char=3762|end_char=3765
10	ein	ein	DET	ART	Case=Acc|Definite=Ind|Gender=Neut|NumType=Card|Number=Sing|PronType=Art	11	det	_	start_char=3766|end_char=3769
11	Tier	Tier	NOUN	NN	Case=Acc|Gender=Neut|Number=Sing	12	obj	_	start_char=3770|end_char=3774
12	finden	finden	VERB	VVINF	VerbForm=Inf	15	advcl	_	start_char=3775|end_char=3781|SpaceAfter=No
13	:	:	PUNCT	$.	_	15	punct	_	start_char=3781|end_char=3782|SpacesAfter=\s\s\s\s\s
14	-	-	PUNCT	$(	_	15	punct	_	start_char=3787|end_char=3788
15	Melden	Melde	VERB	VVFIN	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	start_char=3789|end_char=3795
16	Sie	sie	PRON	PPER	Case=Nom|Number=Plur|Person=2|Polite=Form|PronType=Prs	15	nsubj	_	start_char=3796|end_char=3799
17	es	es	PRON	PPER	Case=Acc|Gender=Neut|Number=Sing|Person=3|PronType=Prs	15	obj	_	start_char=3800|end_char=3802
18	der	der	DET	ART	Case=Dat|Definite=Def|Gender=Fem|Number=Sing|PronType=Art	19	det	_	start_char=3803|end_char=3806
19	Stadt/Gemeinde	Stadt/Gemeinde	NOUN	NN	Case=Dat|Gender=Fem|Number=Sing	15	obl:arg	_	start_char=3807|end_char=3821|SpaceAfter=No
20	.	.	PUNCT	$.	_	15	punct	_	start_char=3821|end_char=3822|SpacesAfter=\s\s\s\s\s

# text = - Oder bringen Sie es direkt ins **Tierheim**.
# sent_id = 36
1	-	-	PUNCT	$(	_	2	punct	_	start_char=3827|end_char=3828
2	Oder	Oder	ADV	ADV	_	3	advmod	_	start_char=3829|end_char=3833
3	bringen	bringen	VERB	VVFIN	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	start_char=3834|end_char=3841
4	Sie	sie	PRON	PPER	Case=Nom|Number=Plur|Person=2|Polite=Form|PronType=Prs	3	nsubj	_	start_char=3842|end_char=3845
5	es	es	PRON	PPER	Case=Acc|Gender=Neut|Number=Sing|Person=3|PronType=Prs	3	obj	_	start_char=3846|end_char=3848
6	direkt	direkt	ADJ	ADJD	Degree=Pos	3	advmod	_	start_char=3849|end_char=3855
7-8	ins	_	_	_	_	_	_	_	start_char=3856|end_char=3859
7	in	in	ADP	APPR	_	11	case	_	_
8	das	der	DET	ART	Case=Acc|Definite=Def|Gender=Neut|Number=Sing|PronType=Art	11	det	_	_
9	*	*	PUNCT	$(	_	11	compound	_	start_char=3860|end_char=3861|SpaceAfter=No
10	*	*	PUNCT	$(	_	11	punct	_	start_char=3861|end_char=3862|SpaceAfter=No
11	Tierheim	Tierheim	NOUN	NN	Case=Acc|Gender=Neut|Number=Sing	3	obl	_	start_char=3862|end_char=3870|SpaceAfter=No
12	**	**	PUNCT	$(	_	3	punct	_	start_char=3870|end_char=3872|SpaceAfter=No
13	.	.	PUNCT	$.	_	3	punct	_	start_char=3872|end_char=3873|SpacesAfter=\s\s\s

# text = - Das Tierheim meldet den Fund dann für Sie. - **Wichtig**: Ohne Meldung übernimmt die Stadt nicht die Kosten.
# sent_id = 37
1	-	-	PUNCT	$(	_	2	punct	_	start_char=3876|end_char=3877
2	Das	der	DET	ART	Case=Nom|Definite=Def|Gender=Neut|Number=Sing|PronType=Art	3	det	_	start_char=3878|end_char=3881
3	Tierheim	Tierheim	NOUN	NN	Case=Nom|Gender=Neut|Number=Sing	4	nsubj	_	start_char=3882|end_char=3890
4	meldet	melden	VERB	VVFIN	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	start_char=3891|end_char=3897
5	den	der	DET	ART	Case=Acc|Definite=Def|Gender=Masc|Number=Sing|PronType=Art	6	det	_	start_char=3898|end_char=3901
6	Fund	Fund	NOUN	NN	Case=Acc|Gender=Masc|Number=Sing	8	nsubj	_	start_char=3902|end_char=3906
7	dann	dann	ADV	ADV	_	4	advmod	_	start_char=3907|end_char=3911
8	für	für	ADP	APPR	_	9	case	_	start_char=3912|end_char=3915
9	Sie.	Sie.	NOUN	NN	Case=Acc|Gender=Neut|Number=Sing	4	obl	_	start_char=3916|end_char=3920|SpacesAfter=\s\s\s
10	-	-	PUNCT	$(	_	12	punct	_	start_char=3923|end_char=3924
11	**	**	PUNCT	$(	_	12	punct	_	start_char=3925|end_char=3927|SpaceAfter=No
12	Wichtig	wichtig	ADJ	ADJD	Degree=Pos	4	parataxis	_	start_char=3927|end_char=3934|SpaceAfter=No
13	*	*	PUNCT	$(	_	12	punct	_	start_char=3934|end_char=3935|SpaceAfter=No
14	*	*	PUNCT	$(	_	12	punct	_	start_char=3935|end_char=3936|SpaceAfter=No
15	:	:	PUNCT	$.	_	18	punct	_	start_char=3936|end_char=3937
16	Ohne	ohne	ADP	APPR	_	17	case	_	start_char=3938|end_char=3942
17	Meldung	Meldung	NOUN	NN	Case=Acc|Gender=Fem|Number=Sing	18	obl	_	start_char=3943|end_char=3950
18	übernimmt	übernehmen	VERB	VVFIN	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	parataxis	_	start_char=3951|end_char=3960
19	die	der	DET	ART	Case=Nom|Definite=Def|Gender=Fem|Number=Sing|PronType=Art	20	det	_	start_char=3961|end_char=3964
20	Stadt	Stadt	NOUN	NN	Case=Nom|Gender=Fem|Number=Sing	18	nsubj	_	start_char=3965|end_char=3970
21	nicht	nicht	PART	PTKNEG	Polarity=Neg	18	advmod	_	start_char=3971|end_char=3976
22	die	der	DET	ART	Case=Acc|Definite=Def|Number=Plur|PronType=Art	23	det	_	start_char=3977|end_char=3980
23	Kosten	Kosten	NOUN	NN	Case=Acc|Number=Plur	18	obj	_	start_char=3981|end_char=3987|SpaceAfter=No
24	.	.	PUNCT	$.	_	4	punct	_	start_char=3987|end_char=3988|SpacesAfter=\s\s\s\s

# text = **Online-Service der Stadt Braunschweig** - **Suche**: Verlorene Gegenstände online finden.
# sent_id = 38
1	**	**	PUNCT	$(	_	4	punct	_	start_char=3992|end_char=3994|SpaceAfter=No
2	Online	Online	NOUN	NN	Case=Nom|Gender=Masc|Number=Sing	4	compound	_	start_char=3994|end_char=4000|SpaceAfter=No
3	-	-	PUNCT	$(	_	2	punct	_	start_char=4000|end_char=4001|SpaceAfter=No
4	Service	Service	NOUN	NN	Case=Nom|Gender=Masc|Number=Sing	19	dep	_	start_char=4001|end_char=4008
5	der	der	DET	ART	Case=Gen|Definite=Def|Gender=Fem|Number=Sing|PronType=Art	6	det	_	start_char=4009|end_char=4012
6	Stadt	Stadt	NOUN	NN	Case=Gen|Gender=Fem|Number=Sing	4	nmod	_	start_char=4013|end_char=4018
7	Braunschweig	Braunschweig	PROPN	NE	Case=Gen|Gender=Neut|Number=Sing	6	appos	_	start_char=4019|end_char=4031|SpaceAfter=No
8	*	*	PUNCT	$(	_	12	punct	_	start_char=4031|end_char=4032|SpaceAfter=No
9	*	*	PUNCT	$(	_	12	appos	_	start_char=4032|end_char=4033|SpacesAfter=\s\s\s
10	-	-	PUNCT	$(	_	12	punct	_	start_char=4036|end_char=4037
11	**	**	PUNCT	$(	_	12	punct	_	start_char=4038|end_char=4040|SpaceAfter=No
12	Suche	Suche	NOUN	NN	Case=Nom|Gender=Fem|Number=Sing	4	appos	_	start_char=4040|end_char=4045|SpaceAfter=No
13	*	*	PUNCT	$(	_	12	punct	_	start_char=4045|end_char=4046|SpaceAfter=No
14	*	*	PUNCT	$(	_	12	appos	_	start_char=4046|end_char=4047|SpaceAfter=No
15	:	:	PUNCT	$.	_	17	punct	_	start_char=4047|end_char=4048
16	Verlorene	verloren	ADJ	ADJA	Case=Nom|Degree=Pos|Gender=Neut|Number=Plur	17	amod	_	start_char=4049|end_char=4058
17	Gegenstände	Gegenstand	NOUN	NN	Case=Nom|Gender=Neut|Number=Plur	19	nsubj:pass	_	start_char=4059|end_char=4070
18	online	online	ADJ	ADJD	Degree=Pos	19	advmod	_	start_char=4071|end_char=4077
19	finden	finden	VERB	VVINF	VerbForm=Inf	0	root	_	start_char=4078|end_char=4084|SpaceAfter=No
20	.	.	PUNCT	$.	_	19	punct	_	start_char=4084|end_char=4085|SpacesAfter=\s\s\s

# text = - **Liste**: Gefundene Gegenstände ansehen.
# sent_id = 39
1	-	-	PUNCT	$(	_	10	punct	_	start_char=4088|end_char=4089
2	*	*	PUNCT	$(	_	10	punct	_	start_char=4090|end_char=4091|SpaceAfter=No
3	*	*	SYM	XY	_	4	dep	_	start_char=4091|end_char=4092|SpaceAfter=No
4	Liste	Liste	NOUN	NN	Case=Nom|Gender=Fem|Number=Sing	10	dep	_	start_char=4092|end_char=4097|SpaceAfter=No
5	*	*	SYM	XY	_	4	appos	_	start_char=4097|end_char=4098|SpaceAfter=No
6	*	*	SYM	XY	_	4	appos	_	start_char=4098|end_char=4099|SpaceAfter=No
7	:	:	PUNCT	$.	_	10	punct	_	start_char=4099|end_char=4100
8	Gefundene	gefunden	ADJ	ADJA	Case=Nom|Degree=Pos|Gender=Masc|Number=Plur	9	amod	_	start_char=4101|end_char=4110
9	Gegenstände	Gegenstand	NOUN	NN	Case=Nom|Gender=Masc|Number=Plur	10	obj	_	start_char=4111|end_char=4122
10	ansehen	ansehen	VERB	VVFIN	VerbForm=Inf	0	root	_	start_char=4123|end_char=4130|SpaceAfter=No
11	.	.	PUNCT	$.	_	10	punct	_	start_char=4130|end_char=4131|SpacesAfter=\s\s\s

# text = - **Kontakt**: Schreiben Sie eine E-Mail.
# sent_id = 40
1	-	-	PUNCT	$(	_	8	punct	_	start_char=4134|end_char=4135
2	*	*	SYM	$(	_	8	cc	_	start_char=4136|end_char=4137|SpaceAfter=No
3	*	*	SYM	XY	_	4	cc	_	start_char=4137|end_char=4138|SpaceAfter=No
4	Kontakt	Kontakt	NOUN	NN	Case=Nom|Gender=Masc|Number=Sing	8	obj	_	start_char=4138|end_char=4145|SpaceAfter=No
5	*	*	SYM	$(	_	8	cc	_	start_char=4145|end_char=4146|SpaceAfter=No
6	*	*	PUNCT	$(	_	8	advmod	_	start_char=4146|end_char=4147|SpaceAfter=No
7	:	:	PUNCT	$.	_	8	punct	_	start_char=4147|end_char=4148
8	Schreiben	Schreiben	VERB	VVFIN	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	start_char=4149|end_char=4158
9	Sie	sie	PRON	PPER	Case=Nom|Number=Plur|Person=2|Polite=Form|PronType=Prs	8	nsubj	_	start_char=4159|end_char=4162
10	eine	ein	DET	ART	Case=Acc|Definite=Ind|Gender=Fem|NumType=Card|Number=Sing|PronType=Art	12	det	_	start_char=4163|end_char=4167
11	E-	e-	ADJ	ADJA	Case=Acc|Degree=Pos|Gender=Fem|Number=Sing	12	amod	_	start_char=4168|end_char=4170|SpaceAfter=No
12	Mail	Mail	NOUN	NN	Case=Acc|Gender=Fem|Number=Sing	8	obj	_	start_char=4170|end_char=4174|SpaceAfter=No
13	.	.	PUNCT	$.	_	8	punct	_	start_char=4174|end_char=4175|SpacesAfter=\s\s\s\s

# text = **Wichtig zu wissen** - Gegenstände, die **6 Monate nicht abgeholt** werden, werden verkauft.
# sent_id = 41
1	**	**	PUNCT	$(	_	2	punct	_	start_char=4179|end_char=4181|SpaceAfter=No
2	Wichtig	wichtig	ADJ	ADJD	Degree=Pos	4	xcomp	_	start_char=4181|end_char=4188
3	zu	zu	PART	PTKZU	_	4	mark	_	start_char=4189|end_char=4191
4	wissen	wissen	VERB	VVINF	VerbForm=Inf	20	csubj:pass	_	start_char=4192|end_char=4198|SpaceAfter=No
5	*	*	PUNCT	$(	_	8	punct	_	start_char=4198|end_char=4199|SpaceAfter=No
6	*	*	PUNCT	$(	_	8	compound	_	start_char=4199|end_char=4200|SpacesAfter=\s\s\s
7	-	-	PUNCT	$(	_	6	punct	_	start_char=4203|end_char=4204
8	Gegenstände	Gegenstand	NOUN	NN	Case=Nom|Gender=Masc|Number=Plur	4	appos	_	start_char=4205|end_char=4216|SpaceAfter=No
9	,	,	PUNCT	$,	_	15	punct	_	start_char=4216|end_char=4217
10	die	der	PRON	PRELS	Case=Nom|Number=Plur|PronType=Dem,Rel	15	nsubj:pass	_	start_char=4218|end_char=4221
11	*	*	PUNCT	$(	_	12	advmod	_	start_char=4222|end_char=4223|SpaceAfter=No
12	*6	*6	NUM	CARD	NumType=Card	13	nummod	_	start_char=4223|end_char=4225
13	Monate	Monat	NOUN	NN	Case=Acc|Gender=Masc|Number=Plur	15	obl	_	start_char=4226|end_char=4232
14	nicht	nicht	PART	PTKNEG	Polarity=Neg	15	advmod	_	start_char=4233|end_char=4238
15	abgeholt	abholen	VERB	VVPP	VerbForm=Part	8	acl	_	start_char=4239|end_char=4247|SpaceAfter=No
16	**	**	PUNCT	$(	_	15	aux:pass	_	start_char=4247|end_char=4249
17	werden	werden	AUX	VAFIN	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin|Voice=Pass	15	aux:pass	_	start_char=4250|end_char=4256|SpaceAfter=No
18	,	,	PUNCT	$,	_	8	punct	_	start_char=4256|end_char=4257
19	werden	werden	AUX	VAFIN	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin|Voice=Pass	20	aux:pass	_	start_char=4258|end_char=4264
20	verkauft	verkaufen	VERB	VVPP	VerbForm=Part	0	root	_	start_char=4265|end_char=4273|SpaceAfter=No
21	.	.	PUNCT	$.	_	20	punct	_	start_char=4273|end_char=4274|SpacesAfter=\s\s\s

# text = - **Keine Garantie**:
# sent_id = 42
1	-	-	PUNCT	$(	_	5	punct	_	start_char=4277|end_char=4278
2	*	*	PUNCT	$(	_	5	punct	_	start_char=4279|end_char=4280|SpaceAfter=No
3	*	*	SYM	$(	_	5	cc	_	start_char=4280|end_char=4281|SpaceAfter=No
4	Keine	kein	DET	PIAT	Case=Nom|Gender=Fem|Number=Sing|PronType=Neg	5	det	_	start_char=4281|end_char=4286
5	Garantie	Garantie	NOUN	NN	Case=Nom|Gender=Fem|Number=Sing	0	root	_	start_char=4287|end_char=4295|SpaceAfter=No
6	*	*	PUNCT	$(	_	5	dep	_	start_char=4295|end_char=4296|SpaceAfter=No
7	*	*	PUNCT	$(	_	5	dep	_	start_char=4296|end_char=4297|SpaceAfter=No
8	:	:	PUNCT	$.	_	7	punct	_	start_char=4297|end_char=4298

# text = Die Stadt haftet nicht für Schäden oder den Wert der Gegenstände.
# sent_id = 43
1	Die	der	DET	ART	Case=Nom|Definite=Def|Gender=Fem|Number=Sing|PronType=Art	2	det	_	start_char=4299|end_char=4302
2	Stadt	Stadt	NOUN	NN	Case=Nom|Gender=Fem|Number=Sing	3	nsubj	_	start_char=4303|end_char=4308
3	haftet	haften	VERB	VVFIN	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	start_char=4309|end_char=4315
4	nicht	nicht	PART	PTKNEG	Polarity=Neg	3	advmod	_	start_char=4316|end_char=4321
5	für	für	ADP	APPR	_	6	case	_	start_char=4322|end_char=4325
6	Schäden	Schaden	NOUN	NN	Case=Acc|Gender=Masc|Number=Plur	3	obl	_	start_char=4326|end_char=4333
7	oder	oder	CCONJ	KON	_	9	cc	_	start_char=4334|end_char=4338
8	den	der	DET	ART	Case=Acc|Definite=Def|Gender=Masc|Number=Sing|PronType=Art	9	det	_	start_char=4339|end_char=4342
9	Wert	Wert	NOUN	NN	Case=Acc|Gender=Masc|Number=Sing	6	conj	_	start_char=4343|end_char=4347
10	der	der	DET	ART	Case=Gen|Definite=Def|Number=Plur|PronType=Art	11	det	_	start_char=4348|end_char=4351
11	Gegenstände	Gegenstand	NOUN	NN	Case=Gen|Gender=Masc|Number=Plur	9	nmod	_	start_char=4352|end_char=4363|SpaceAfter=No
12	.	.	PUNCT	$.	_	3	punct	_	start_char=4363|end_char=4364|SpacesAfter=\s\s\s\s

# text = ________________________________________ *Einfache Sprache für alle: Für Menschen mit Lernschwierigkeiten oder Anfänger in Deutsch.* --- **Erklärungen zu schwierigen Wörtern** - **Fundbüro**: Ein Büro, wo man verlorene Gegenstände abgibt oder sucht.
# sent_id = 44
1	________________________________________	________________________________________	PUNCT	$(	_	4	punct	_	start_char=4368|end_char=4408|SpacesAfter=\s\s\s
2	*	*	PUNCT	$(	_	4	punct	_	start_char=4411|end_char=4412|SpaceAfter=No
3	Einfache	einfach	ADJ	ADJA	Case=Nom|Degree=Pos|Gender=Fem|Number=Sing	4	amod	_	start_char=4412|end_char=4420
4	Sprache	Sprache	NOUN	NN	Case=Nom|Gender=Fem|Number=Sing	0	root	_	start_char=4421|end_char=4428
5	für	für	ADP	APPR	_	6	case	_	start_char=4429|end_char=4432
6	alle	alle	DET	PIS	Case=Acc|Number=Plur|PronType=Tot	4	nmod	_	start_char=4433|end_char=4437|SpaceAfter=No
7	:	:	PUNCT	$.	_	9	punct	_	start_char=4437|end_char=4438
8	Für	für	ADP	APPR	_	9	case	_	start_char=4439|end_char=4442
9	Menschen	Mensch	NOUN	NN	Case=Acc|Gender=Masc|Number=Plur	4	nmod	_	start_char=4443|end_char=4451
10	mit	mit	ADP	APPR	_	11	case	_	start_char=4452|end_char=4455
11	Lernschwierigkeiten	Lernschwierigkeit	NOUN	NN	Case=Dat|Gender=Fem|Number=Plur	9	nmod	_	start_char=4456|end_char=4475
12	oder	oder	CCONJ	KON	_	13	cc	_	start_char=4476|end_char=4480
13	Anfänger	Anfänger	NOUN	NN	Case=Dat|Gender=Masc|Number=Sing	11	conj	_	start_char=4481|end_char=4489
14	in	in	ADP	APPR	_	15	case	_	start_char=4490|end_char=4492
15	Deutsch.	Deutsch.	NOUN	NN	Case=Dat|Gender=Neut|Number=Sing	9	nmod	_	start_char=4493|end_char=4501|SpaceAfter=No
16	*	*	PUNCT	$(	_	20	punct	_	start_char=4501|end_char=4502|SpacesAfter=\s\s\s\s
17	-	-	PUNCT	$(	_	20	punct	_	start_char=4506|end_char=4507|SpaceAfter=No
18	--	--	PUNCT	$(	_	20	punct	_	start_char=4507|end_char=4509|SpacesAfter=\s\s
19	**	**	PUNCT	$(	_	20	punct	_	start_char=4511|end_char=4513|SpaceAfter=No
20	Erklärungen	Erklärung	NOUN	NN	Case=Nom|Gender=Fem|Number=Plur	4	appos	_	start_char=4513|end_char=4524
21	zu	zu	ADP	APPR	_	23	case	_	start_char=4525|end_char=4527
22	schwierigen	schwierig	ADJ	ADJA	Case=Dat|Degree=Pos|Gender=Neut|Number=Plur	23	amod	_	start_char=4528|end_char=4539
23	Wörtern	Wort	NOUN	NN	Case=Dat|Gender=Neut|Number=Plur	20	nmod	_	start_char=4540|end_char=4547|SpaceAfter=No
24	*	*	PUNCT	$(	_	25	punct	_	start_char=4547|end_char=4548|SpaceAfter=No
25	*	*	PUNCT	$(	_	29	advmod	_	start_char=4548|end_char=4549|SpacesAfter=\s\s\s
26	-	-	PUNCT	$(	_	29	punct	_	start_char=4552|end_char=4553
27	*	*	SYM	XY	_	29	compound	_	start_char=4554|end_char=4555|SpaceAfter=No
28	*	*	PUNCT	$(	_	29	punct	_	start_char=4555|end_char=4556|SpaceAfter=No
29	Fundbüro	Fundbüro	NOUN	NN	Case=Nom|Gender=Neut|Number=Sing	23	appos	_	start_char=4556|end_char=4564|SpaceAfter=No
30	*	*	PUNCT	$(	_	29	punct	_	start_char=4564|end_char=4565|SpaceAfter=No
31	*	*	PUNCT	$(	_	29	punct	_	start_char=4565|end_char=4566|SpaceAfter=No
32	:	:	PUNCT	$.	_	34	punct	_	start_char=4566|end_char=4567
33	Ein	ein	DET	ART	Case=Nom|Definite=Ind|Gender=Neut|NumType=Card|Number=Sing|PronType=Art	34	det	_	start_char=4568|end_char=4571
34	Büro	Büro	NOUN	NN	Case=Nom|Gender=Neut|Number=Sing	4	appos	_	start_char=4572|end_char=4576|SpaceAfter=No
35	,	,	PUNCT	$,	_	40	punct	_	start_char=4576|end_char=4577
36	wo	wo	ADV	PWAV	PronType=Int	40	advmod	_	start_char=4578|end_char=4580
37	man	man	PRON	PIS	Case=Nom|Number=Sing|PronType=Ind	40	nsubj	_	start_char=4581|end_char=4584
38	verlorene	verloren	ADJ	ADJA	Case=Acc|Degree=Pos|Gender=Neut|Number=Plur	39	amod	_	start_char=4585|end_char=4594
39	Gegenstände	Gegenstand	NOUN	NN	Case=Acc|Gender=Neut|Number=Plur	40	obj	_	start_char=4595|end_char=4606
40	abgibt	abgeben	VERB	VVFIN	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	34	acl	_	start_char=4607|end_char=4613
41	oder	oder	CCONJ	KON	_	42	cc	_	start_char=4614|end_char=4618
42	sucht	suchen	VERB	VVFIN	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	40	conj	_	start_char=4619|end_char=4624|SpaceAfter=No
43	.	.	PUNCT	$.	_	4	punct	_	start_char=4624|end_char=4625|SpacesAfter=\s\s\s

# text = - **Belohnung**: Geld oder Dank für eine gute Tat. - **Versteigerung/Auktion**: Ein Verkauf, bei dem die Höchstbietenden den Gegenstand bekommen.
# sent_id = 45
1	-	-	PUNCT	$(	_	3	punct	_	start_char=4628|end_char=4629
2	**	**	PUNCT	$(	_	3	punct	_	start_char=4630|end_char=4632|SpaceAfter=No
3	Belohnung	Belohnung	NOUN	NN	Case=Nom|Gender=Fem|Number=Sing	0	root	_	start_char=4632|end_char=4641|SpaceAfter=No
4	*	*	PUNCT	$(	_	7	dep	_	start_char=4641|end_char=4642|SpaceAfter=No
5	*	*	PUNCT	$(	_	7	dep	_	start_char=4642|end_char=4643|SpaceAfter=No
6	:	:	PUNCT	$.	_	7	punct	_	start_char=4643|end_char=4644
7	Geld	Geld	NOUN	NN	Case=Nom|Gender=Neut|Number=Sing	3	appos	_	start_char=4645|end_char=4649
8	oder	oder	CCONJ	KON	_	9	cc	_	start_char=4650|end_char=4654
9	Dank	Dank	NOUN	NN	Case=Nom|Gender=Masc|Number=Sing	7	conj	_	start_char=4655|end_char=4659
10	für	für	ADP	APPR	_	13	case	_	start_char=4660|end_char=4663
11	eine	ein	DET	ART	Case=Acc|Definite=Ind|Gender=Fem|NumType=Card|Number=Sing|PronType=Art	13	det	_	start_char=4664|end_char=4668
12	gute	gut	ADJ	ADJA	Case=Acc|Degree=Pos|Gender=Fem|Number=Sing	13	amod	_	start_char=4669|end_char=4673
13	Tat.	Tat.	NOUN	NN	Case=Acc|Gender=Fem|Number=Sing	9	nmod	_	start_char=4674|end_char=4678|SpacesAfter=\s\s\s
14	-	-	PUNCT	$(	_	15	punct	_	start_char=4681|end_char=4682
15	*	*	SYM	XY	_	7	conj	_	start_char=4683|end_char=4684|SpaceAfter=No
16	*	*	SYM	XY	_	18	compound	_	start_char=4684|end_char=4685|SpaceAfter=No
17	Versteigerung/	Versteigerung/	NOUN	NN	Case=Nom|Gender=Fem|Number=Sing	18	compound	_	start_char=4685|end_char=4699|SpaceAfter=No
18	Auktion	Auktion	NOUN	NN	Case=Nom|Gender=Fem|Number=Sing	7	conj	_	start_char=4699|end_char=4706|SpaceAfter=No
19	*	*	PUNCT	$(	_	18	punct	_	start_char=4706|end_char=4707|SpaceAfter=No
20	*	*	PUNCT	$(	_	18	appos	_	start_char=4707|end_char=4708|SpaceAfter=No
21	:	:	PUNCT	$.	_	23	punct	_	start_char=4708|end_char=4709
22	Ein	ein	DET	ART	Case=Nom|Definite=Ind|Gender=Masc|NumType=Card|Number=Sing|PronType=Art	23	det	_	start_char=4710|end_char=4713
23	Verkauf	Verkauf	NOUN	NN	Case=Nom|Gender=Masc|Number=Sing	7	appos	_	start_char=4714|end_char=4721|SpaceAfter=No
24	,	,	PUNCT	$,	_	31	punct	_	start_char=4721|end_char=4722
25	bei	bei	ADP	APPR	_	26	case	_	start_char=4723|end_char=4726
26	dem	der	PRON	PRELS	Case=Dat|Gender=Masc|Number=Sing|PronType=Dem,Rel	31	obl	_	start_char=4727|end_char=4730
27	die	der	DET	ART	Case=Nom|Definite=Def|Number=Plur|PronType=Art	28	det	_	start_char=4731|end_char=4734
28	Höchstbietenden	Höchstbietende	NOUN	NN	Case=Nom|Gender=Masc|Number=Plur	31	nsubj	_	start_char=4735|end_char=4750
29	den	der	DET	ART	Case=Acc|Definite=Def|Gender=Masc|Number=Sing|PronType=Art	30	det	_	start_char=4751|end_char=4754
30	Gegenstand	Gegenstand	NOUN	NN	Case=Acc|Gender=Masc|Number=Sing	31	obj	_	start_char=4755|end_char=4765
31	bekommen	bekommen	VERB	VVPP	VerbForm=Part	23	acl	_	start_char=4766|end_char=4774|SpaceAfter=No
32	.	.	PUNCT	$.	_	3	punct	_	start_char=4774|end_char=4775|SpacesAfter=\s\s\s

# text = - **Garantie**: Versprechen, dass etwas sicher ist.
# sent_id = 46
1	-	-	PUNCT	$(	_	8	punct	_	start_char=4778|end_char=4779
2	*	*	PUNCT	$(	_	8	punct	_	start_char=4780|end_char=4781|SpaceAfter=No
3	*	*	PUNCT	$(	_	4	punct	_	start_char=4781|end_char=4782|SpaceAfter=No
4	Garantie	Garantie	NOUN	NN	Case=Nom|Gender=Fem|Number=Sing	0	root	_	start_char=4782|end_char=4790|SpaceAfter=No
5	*	*	PUNCT	$(	_	4	punct	_	start_char=4790|end_char=4791|SpaceAfter=No
6	*	*	PUNCT	$(	_	8	dep	_	start_char=4791|end_char=4792|SpaceAfter=No
7	:	:	PUNCT	$.	_	8	punct	_	start_char=4792|end_char=4793
8	Versprechen	Versprechen	NOUN	NN	Case=Nom|Gender=Fem|Number=Sing	4	parataxis	_	start_char=4794|end_char=4805|SpaceAfter=No
9	,	,	PUNCT	$,	_	12	punct	_	start_char=4805|end_char=4806
10	dass	dass	SCONJ	KOUS	_	12	mark	_	start_char=4807|end_char=4811
11	etwas	etwas	PRON	PIS	Gender=Neut|Number=Sing|PronType=Ind	12	nsubj	_	start_char=4812|end_char=4817
12	sicher	sicher	ADJ	ADJD	Degree=Pos	8	ccomp	_	start_char=4818|end_char=4824
13	ist	sein	AUX	VAFIN	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	12	cop	_	start_char=4825|end_char=4828|SpaceAfter=No
14	.	.	PUNCT	$.	_	8	punct	_	start_char=4828|end_char=4829|SpacesAfter=\s\s\s

# text = - **Haftung**: Verantwortung für Schäden oder Kosten.
# sent_id = 47
1	-	-	PUNCT	$(	_	3	punct	_	start_char=4832|end_char=4833
2	**	**	PUNCT	$(	_	3	punct	_	start_char=4834|end_char=4836|SpaceAfter=No
3	Haftung	Haftung	NOUN	NN	Case=Nom|Gender=Fem|Number=Sing	0	root	_	start_char=4836|end_char=4843|SpaceAfter=No
4	**	**	PUNCT	$(	_	6	punct	_	start_char=4843|end_char=4845|SpaceAfter=No
5	:	:	PUNCT	$.	_	6	punct	_	start_char=4845|end_char=4846
6	Verantwortung	Verantwortung	NOUN	NN	Case=Nom|Gender=Fem|Number=Sing	3	appos	_	start_char=4847|end_char=4860
7	für	für	ADP	APPR	_	8	case	_	start_char=4861|end_char=4864
8	Schäden	Schaden	NOUN	NN	Case=Acc|Gender=Masc|Number=Plur	6	nmod	_	start_char=4865|end_char=4872
9	oder	oder	CCONJ	KON	_	10	cc	_	start_char=4873|end_char=4877
10	Kosten	Kosten	NOUN	NN	Case=Acc|Number=Plur	8	conj	_	start_char=4878|end_char=4884|SpaceAfter=No
11	.	.	PUNCT	$.	_	3	punct	_	start_char=4884|end_char=4885|SpaceAfter=No

