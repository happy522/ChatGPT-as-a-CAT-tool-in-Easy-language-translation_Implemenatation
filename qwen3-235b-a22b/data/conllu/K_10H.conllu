# text = <think> Okay, I'm supposed to reformulate the text according to the linguistic approach described, focusing on three levels: text level (removing unnecessary information), sentence level (removing subordinate clauses and using simple syntactic structures), and word level (adding explanations for difficult words).
# sent_id = 0
1	<think>	<think>	X	FM	Foreign=Yes	0	root	_	start_char=0|end_char=7
2	Okay	Okay	X	FM	Foreign=Yes	1	flat	_	start_char=8|end_char=12|SpaceAfter=No
3	,	,	PUNCT	$,	_	4	punct	_	start_char=12|end_char=13
4	I'm	I'm	X	FM	Foreign=Yes	1	appos	_	start_char=14|end_char=17
5	supposed	supposed	X	FM	Foreign=Yes	4	flat	_	start_char=18|end_char=26
6	to	to	X	FM	Foreign=Yes	4	flat	_	start_char=27|end_char=29
7	reformulate	reformulate	X	FM	Foreign=Yes	4	flat	_	start_char=30|end_char=41
8	the	the	DET	FM	Definite=Def|Foreign=Yes|PronType=Art	4	flat	_	start_char=42|end_char=45
9	text	Text	X	FM	Foreign=Yes	4	flat	_	start_char=46|end_char=50
10	according	according	X	FM	Foreign=Yes	4	flat	_	start_char=51|end_char=60
11	to	to	X	FM	Foreign=Yes	4	flat	_	start_char=61|end_char=63
12	the	the	DET	FM	Definite=Def|Foreign=Yes|PronType=Art	4	flat	_	start_char=64|end_char=67
13	linguistic	linguistic	X	FM	Foreign=Yes	4	flat	_	start_char=68|end_char=78
14	approach	approach	X	FM	Foreign=Yes	4	flat	_	start_char=79|end_char=87
15	described	described	X	FM	Foreign=Yes	4	flat	_	start_char=88|end_char=97|SpaceAfter=No
16	,	,	PUNCT	$,	_	4	punct	_	start_char=97|end_char=98
17	focusing	focusing	X	FM	Foreign=Yes	4	flat	_	start_char=99|end_char=107
18	on	on	X	FM	Foreign=Yes	4	flat	_	start_char=108|end_char=110
19	three	three	X	FM	Foreign=Yes	4	flat	_	start_char=111|end_char=116
20	levels	levels	X	FM	Foreign=Yes	4	flat	_	start_char=117|end_char=123|SpaceAfter=No
21	:	:	PUNCT	$.	_	25	punct	_	start_char=123|end_char=124
22	text	Text	X	FM	Foreign=Yes	4	flat	_	start_char=125|end_char=129
23	level	level	X	FM	Foreign=Yes	4	flat	_	start_char=130|end_char=135
24	(	(	PUNCT	$(	_	25	punct	_	start_char=136|end_char=137|SpaceAfter=No
25	removing	removing	X	FM	Foreign=Yes	33	flat	_	start_char=137|end_char=145
26	unnecessary	unnecessary	X	FM	Foreign=Yes	33	flat	_	start_char=146|end_char=157
27	information	information	X	FM	Foreign=Yes	25	flat	_	start_char=158|end_char=169|SpaceAfter=No
28	)	)	PUNCT	$(	_	33	punct	_	start_char=169|end_char=170|SpaceAfter=No
29	,	,	PUNCT	$,	_	33	punct	_	start_char=170|end_char=171
30	sentence	sentence	X	FM	Foreign=Yes	25	flat	_	start_char=172|end_char=180
31	level	level	X	FM	Foreign=Yes	25	flat	_	start_char=181|end_char=186
32	(	(	PUNCT	$(	_	33	punct	_	start_char=187|end_char=188|SpaceAfter=No
33	removing	removing	X	FM	Foreign=Yes	4	flat	_	start_char=188|end_char=196
34	subordinate	subordinate	X	FM	Foreign=Yes	33	flat	_	start_char=197|end_char=208
35	clauses	clauses	X	FM	Foreign=Yes	33	flat	_	start_char=209|end_char=216
36	and	and	X	FM	Foreign=Yes	33	flat	_	start_char=217|end_char=220
37	using	using	X	FM	Foreign=Yes	33	flat	_	start_char=221|end_char=226
38	simple	simpeln	X	FM	Foreign=Yes	33	flat	_	start_char=227|end_char=233
39	syntactic	syntactic	X	FM	Foreign=Yes	33	flat	_	start_char=234|end_char=243
40	structures	structures	X	FM	Foreign=Yes	33	flat	_	start_char=244|end_char=254|SpaceAfter=No
41	)	)	PUNCT	$(	_	33	punct	_	start_char=254|end_char=255|SpaceAfter=No
42	,	,	PUNCT	$,	_	47	punct	_	start_char=255|end_char=256
43	and	and	X	FM	Foreign=Yes	33	flat	_	start_char=257|end_char=260
44	word	word	X	FM	Foreign=Yes	33	flat	_	start_char=261|end_char=265
45	level	level	X	FM	Foreign=Yes	33	flat	_	start_char=266|end_char=271
46	(	(	PUNCT	$(	_	47	punct	_	start_char=272|end_char=273|SpaceAfter=No
47	adding	adding	X	FM	Foreign=Yes	33	appos	_	start_char=273|end_char=279
48	explanations	explanations	X	FM	Foreign=Yes	47	flat	_	start_char=280|end_char=292
49	for	for	X	FM	Foreign=Yes	47	flat	_	start_char=293|end_char=296
50	difficult	difficult	X	FM	Foreign=Yes	47	flat	_	start_char=297|end_char=306
51	words	words	X	FM	Foreign=Yes	47	flat	_	start_char=307|end_char=312|SpaceAfter=No
52	)	)	PUNCT	$(	_	47	punct	_	start_char=312|end_char=313|SpaceAfter=No
53	.	.	PUNCT	$.	_	34	punct	_	start_char=313|end_char=314|SpacesAfter=\s\s

# text = Let me analyze the original text first to understand its content and structure: The text appears to be about how to obtain a death certificate in Germany.
# sent_id = 1
1	Let	let	X	FM	Foreign=Yes	0	root	_	start_char=316|end_char=319
2	me	me	X	FM	Foreign=Yes	1	flat	_	start_char=320|end_char=322
3	analyze	analyze	X	FM	Foreign=Yes	1	flat	_	start_char=323|end_char=330
4	the	the	DET	FM	Definite=Def|Foreign=Yes|PronType=Art	1	flat	_	start_char=331|end_char=334
5	original	original	X	FM	Foreign=Yes	1	flat	_	start_char=335|end_char=343
6	text	Text	X	FM	Foreign=Yes	1	flat	_	start_char=344|end_char=348
7	first	first	X	FM	Foreign=Yes	1	flat	_	start_char=349|end_char=354
8	to	to	X	FM	Foreign=Yes	1	flat	_	start_char=355|end_char=357
9	understand	understand	X	FM	Foreign=Yes	1	flat	_	start_char=358|end_char=368
10	its	its	X	FM	Foreign=Yes	1	flat	_	start_char=369|end_char=372
11	content	content	X	FM	Foreign=Yes	1	flat	_	start_char=373|end_char=380
12	and	and	CCONJ	FM	Foreign=Yes	1	flat	_	start_char=381|end_char=384
13	structure	structure	X	FM	Foreign=Yes	1	flat	_	start_char=385|end_char=394|SpaceAfter=No
14	:	:	PUNCT	$.	_	1	punct	_	start_char=394|end_char=395|SpacesAfter=\s\s
15	The	the	DET	FM	Definite=Def|Foreign=Yes|PronType=Art	1	flat	_	start_char=397|end_char=400
16	text	Text	X	FM	Foreign=Yes	1	flat	_	start_char=401|end_char=405
17	appears	appears	X	FM	Foreign=Yes	1	flat	_	start_char=406|end_char=413
18	to	to	X	FM	Foreign=Yes	1	flat	_	start_char=414|end_char=416
19	be	be	X	FM	Foreign=Yes	1	flat	_	start_char=417|end_char=419
20	about	about	X	FM	Foreign=Yes	1	flat	_	start_char=420|end_char=425
21	how	how	X	FM	Foreign=Yes	1	flat	_	start_char=426|end_char=429
22	to	to	X	FM	Foreign=Yes	1	flat	_	start_char=430|end_char=432
23	obtain	obtain	X	FM	Foreign=Yes	1	flat	_	start_char=433|end_char=439
24	a	a	X	FM	Foreign=Yes	1	flat	_	start_char=440|end_char=441
25	death	death	X	FM	Foreign=Yes	1	flat	_	start_char=442|end_char=447
26	certificate	certificate	X	FM	Foreign=Yes	1	flat	_	start_char=448|end_char=459
27	in	in	ADP	FM	Foreign=Yes	28	case	_	start_char=460|end_char=462
28	Germany	Germany	X	FM	Foreign=Yes	1	flat	_	start_char=463|end_char=470|SpaceAfter=No
29	.	.	PUNCT	$.	_	1	punct	_	start_char=470|end_char=471

# text = It covers: - Important information about death certificates - The procedure for obtaining one - Which office is responsible - Who can apply - Required documents - Costs - Timeframe requirements - Processing time - Relevant laws - What to do if the application is rejected Now I'll reformulate the text according to the three levels: **Text level (removing unnecessary information):** I should remove any redundant or non-essential information while preserving the core content about death certificate applications.
# sent_id = 2
1	It	it	PRON	FM	Foreign=Yes|Person=2|PronType=Prs	0	root	_	start_char=472|end_char=474
2	covers	covers	X	FM	Foreign=Yes	1	flat	_	start_char=475|end_char=481|SpaceAfter=No
3	:	:	PUNCT	$.	_	5	punct	_	start_char=481|end_char=482
4	-	-	PUNCT	$(	_	5	punct	_	start_char=483|end_char=484
5	Important	Important	X	FM	Foreign=Yes	1	flat	_	start_char=485|end_char=494
6	information	information	X	FM	Foreign=Yes	5	flat	_	start_char=495|end_char=506
7	about	about	X	FM	Foreign=Yes	5	flat	_	start_char=507|end_char=512
8	death	death	X	FM	Foreign=Yes	5	flat	_	start_char=513|end_char=518
9	certificates	certificates	X	FM	Foreign=Yes	5	flat	_	start_char=519|end_char=531
10	-	-	PUNCT	$(	_	5	punct	_	start_char=532|end_char=533
11	The	the	DET	FM	Definite=Def|Foreign=Yes|PronType=Art	5	flat	_	start_char=534|end_char=537
12	procedure	procedure	X	FM	Foreign=Yes	5	flat	_	start_char=538|end_char=547
13	for	for	X	FM	Foreign=Yes	5	flat	_	start_char=548|end_char=551
14	obtaining	obtaining	X	FM	Foreign=Yes	5	flat	_	start_char=552|end_char=561
15	one	one	X	FM	Foreign=Yes	5	flat	_	start_char=562|end_char=565
16	-	-	PUNCT	$,	_	5	punct	_	start_char=566|end_char=567
17	Which	Which	X	FM	Foreign=Yes	5	flat	_	start_char=568|end_char=573
18	office	office	X	FM	Foreign=Yes	5	flat	_	start_char=574|end_char=580
19	is	is	X	FM	Foreign=Yes	5	flat	_	start_char=581|end_char=583
20	responsible	responsible	X	FM	Foreign=Yes	5	flat	_	start_char=584|end_char=595
21	-	-	PUNCT	$,	_	5	punct	_	start_char=596|end_char=597
22	Who	Who	X	FM	Foreign=Yes	5	flat	_	start_char=598|end_char=601
23	can	can	X	FM	Foreign=Yes	5	flat	_	start_char=602|end_char=605
24	apply	apply	X	FM	Foreign=Yes	5	flat	_	start_char=606|end_char=611
25	-	-	PUNCT	$,	_	5	punct	_	start_char=612|end_char=613
26	Required	Required	X	FM	Foreign=Yes	5	flat	_	start_char=614|end_char=622
27	documents	documents	X	FM	Foreign=Yes	5	flat	_	start_char=623|end_char=632
28	-	-	PUNCT	$(	_	5	punct	_	start_char=633|end_char=634
29	Costs	Costs	X	FM	Foreign=Yes	5	flat	_	start_char=635|end_char=640
30	-	-	PUNCT	$(	_	5	punct	_	start_char=641|end_char=642
31	Timeframe	Timeframe	X	FM	Foreign=Yes	5	flat	_	start_char=643|end_char=652
32	requirements	requirements	X	FM	Foreign=Yes	5	flat	_	start_char=653|end_char=665
33	-	-	PUNCT	$,	_	5	flat	_	start_char=666|end_char=667
34	Processing	Processing	X	FM	Foreign=Yes	5	flat	_	start_char=668|end_char=678
35	time	timen	X	FM	Foreign=Yes	5	flat	_	start_char=679|end_char=683
36	-	-	PUNCT	$,	_	5	punct	_	start_char=684|end_char=685
37	Relevant	Relevant	X	FM	Foreign=Yes	5	flat	_	start_char=686|end_char=694
38	laws	laws	X	FM	Foreign=Yes	5	flat	_	start_char=695|end_char=699
39	-	-	PUNCT	$,	_	5	punct	_	start_char=700|end_char=701
40	What	what	X	FM	Foreign=Yes	5	flat	_	start_char=702|end_char=706
41	to	to	X	FM	Foreign=Yes	5	flat	_	start_char=707|end_char=709
42	do	do	X	FM	Foreign=Yes	5	flat	_	start_char=710|end_char=712
43	if	if	X	FM	Foreign=Yes	5	flat	_	start_char=713|end_char=715
44	the	the	DET	FM	Definite=Def|Foreign=Yes|PronType=Art	5	flat	_	start_char=716|end_char=719
45	application	application	X	FM	Foreign=Yes	5	flat	_	start_char=720|end_char=731
46	is	is	X	FM	Foreign=Yes	5	flat	_	start_char=732|end_char=734
47	rejected	rejected	X	FM	Foreign=Yes	5	flat	_	start_char=735|end_char=743|SpacesAfter=\s\s
48	Now	Now	X	FM	Foreign=Yes	5	flat	_	start_char=745|end_char=748
49	I'll	I'll	X	FM	Foreign=Yes	5	flat	_	start_char=749|end_char=753
50	reformulate	reformulate	X	FM	Foreign=Yes	5	flat	_	start_char=754|end_char=765
51	the	the	DET	FM	Definite=Def|Foreign=Yes|PronType=Art	5	flat	_	start_char=766|end_char=769
52	text	Text	X	FM	Foreign=Yes	5	flat	_	start_char=770|end_char=774
53	according	according	X	FM	Foreign=Yes	5	flat	_	start_char=775|end_char=784
54	to	to	X	FM	Foreign=Yes	5	flat	_	start_char=785|end_char=787
55	the	the	DET	FM	Definite=Def|Foreign=Yes|PronType=Art	5	flat	_	start_char=788|end_char=791
56	three	three	X	FM	Foreign=Yes	5	flat	_	start_char=792|end_char=797
57	levels	levels	X	FM	Foreign=Yes	5	flat	_	start_char=798|end_char=804|SpaceAfter=No
58	:	:	PUNCT	$.	_	63	punct	_	start_char=804|end_char=805|SpacesAfter=\s\s
59	**	**	X	FM	Foreign=Yes	68	flat	_	start_char=807|end_char=809|SpaceAfter=No
60	Text	Text	X	FM	Foreign=Yes	68	flat	_	start_char=809|end_char=813
61	level	level	X	FM	Foreign=Yes	68	flat	_	start_char=814|end_char=819
62	(	(	PUNCT	$(	_	63	punct	_	start_char=820|end_char=821|SpaceAfter=No
63	removing	removing	X	FM	Foreign=Yes	68	flat	_	start_char=821|end_char=829
64	unnecessary	unnecessary	X	FM	Foreign=Yes	68	flat	_	start_char=830|end_char=841
65	information	information	X	FM	Foreign=Yes	68	flat	_	start_char=842|end_char=853|SpaceAfter=No
66	)	)	PUNCT	$(	_	63	punct	_	start_char=853|end_char=854|SpaceAfter=No
67	:	:	PUNCT	$.	_	68	punct	_	start_char=854|end_char=855|SpaceAfter=No
68	**	**	X	FM	Foreign=Yes	5	flat	_	start_char=855|end_char=857
69	I	I	X	FM	Foreign=Yes	68	flat	_	start_char=858|end_char=859
70	should	should	X	FM	Foreign=Yes	68	flat	_	start_char=860|end_char=866
71	remove	remove	X	FM	Foreign=Yes	68	flat	_	start_char=867|end_char=873
72	any	any	X	FM	Foreign=Yes	68	flat	_	start_char=874|end_char=877
73	redundant	redundant	X	FM	Foreign=Yes	68	flat	_	start_char=878|end_char=887
74	or	or	X	FM	Foreign=Yes	68	flat	_	start_char=888|end_char=890
75	non	non	X	FM	Foreign=Yes	68	flat	_	start_char=891|end_char=894|SpaceAfter=No
76	-	-	PUNCT	$,	_	68	punct	_	start_char=894|end_char=895|SpaceAfter=No
77	essential	essential	X	FM	Foreign=Yes	68	flat	_	start_char=895|end_char=904
78	information	information	X	FM	Foreign=Yes	68	flat	_	start_char=905|end_char=916
79	while	while	X	FM	Foreign=Yes	68	flat	_	start_char=917|end_char=922
80	preserving	preserving	X	FM	Foreign=Yes	68	flat	_	start_char=923|end_char=933
81	the	the	DET	FM	Definite=Def|Foreign=Yes|PronType=Art	68	flat	_	start_char=934|end_char=937
82	core	core	X	FM	Foreign=Yes	68	flat	_	start_char=938|end_char=942
83	content	content	X	FM	Foreign=Yes	68	flat	_	start_char=943|end_char=950
84	about	about	X	FM	Foreign=Yes	68	flat	_	start_char=951|end_char=956
85	death	death	X	FM	Foreign=Yes	68	flat	_	start_char=957|end_char=962
86	certificate	certificate	X	FM	Foreign=Yes	68	flat	_	start_char=963|end_char=974
87	applications	applications	X	FM	Foreign=Yes	68	flat	_	start_char=975|end_char=987|SpaceAfter=No
88	.	.	PUNCT	$.	_	68	punct	_	start_char=987|end_char=988|SpacesAfter=\s\s

# text = **Sentence level (removing subordinate clauses and using simple syntactic structures):** I'll convert complex sentences into simpler ones without subordinate clauses.
# sent_id = 3
1	**	**	X	FM	Foreign=Yes	0	root	_	start_char=990|end_char=992|SpaceAfter=No
2	Sentence	Sentence	X	FM	Foreign=Yes	1	flat	_	start_char=992|end_char=1000
3	level	level	X	FM	Foreign=Yes	2	flat	_	start_char=1001|end_char=1006
4	(	(	PUNCT	$(	_	5	punct	_	start_char=1007|end_char=1008|SpaceAfter=No
5	removing	removing	X	FM	Foreign=Yes	1	appos	_	start_char=1008|end_char=1016
6	subordinate	subordinate	X	FM	Foreign=Yes	5	flat	_	start_char=1017|end_char=1028
7	clauses	clauses	X	FM	Foreign=Yes	5	flat	_	start_char=1029|end_char=1036
8	and	and	X	FM	Foreign=Yes	5	flat	_	start_char=1037|end_char=1040
9	using	using	X	FM	Foreign=Yes	5	flat	_	start_char=1041|end_char=1046
10	simple	simpeln	X	FM	Foreign=Yes	5	flat	_	start_char=1047|end_char=1053
11	syntactic	syntactic	X	FM	Foreign=Yes	5	flat	_	start_char=1054|end_char=1063
12	structures	structures	X	FM	Foreign=Yes	5	flat	_	start_char=1064|end_char=1074|SpaceAfter=No
13	)	)	PUNCT	$(	_	5	punct	_	start_char=1074|end_char=1075|SpaceAfter=No
14	:	:	PUNCT	$.	_	17	punct	_	start_char=1075|end_char=1076|SpaceAfter=No
15	*	*	X	FM	Foreign=Yes	12	parataxis	_	start_char=1076|end_char=1077|SpaceAfter=No
16	*	*	X	FM	Foreign=Yes	15	parataxis	_	start_char=1077|end_char=1078
17	I'll	I'll	X	FM	Foreign=Yes	15	flat	_	start_char=1079|end_char=1083
18	convert	convert	X	FM	Foreign=Yes	15	flat	_	start_char=1084|end_char=1091
19	complex	complex	X	FM	Foreign=Yes	15	flat	_	start_char=1092|end_char=1099
20	sentences	sentences	X	FM	Foreign=Yes	17	flat	_	start_char=1100|end_char=1109
21	into	into	X	FM	Foreign=Yes	17	flat	_	start_char=1110|end_char=1114
22	simpler	simpel	X	FM	Foreign=Yes	17	flat	_	start_char=1115|end_char=1122
23	ones	ones	X	FM	Foreign=Yes	17	flat	_	start_char=1123|end_char=1127
24	without	without	X	FM	Foreign=Yes	17	flat	_	start_char=1128|end_char=1135
25	subordinate	subordinate	X	FM	Foreign=Yes	17	flat	_	start_char=1136|end_char=1147
26	clauses	clauses	X	FM	Foreign=Yes	17	flat	_	start_char=1148|end_char=1155|SpaceAfter=No
27	.	.	PUNCT	$.	_	15	punct	_	start_char=1155|end_char=1156|SpacesAfter=\s\s

# text = **Word level (adding explanations for difficult words):** I'll add explanations for any complex terms that might be difficult to understand.
# sent_id = 4
1	**	**	X	FM	Foreign=Yes	2	advmod	_	start_char=1158|end_char=1160|SpaceAfter=No
2	Word	Word	X	FM	Foreign=Yes	0	root	_	start_char=1160|end_char=1164
3	level	level	X	FM	Foreign=Yes	2	flat	_	start_char=1165|end_char=1170
4	(	(	PUNCT	$(	_	5	punct	_	start_char=1171|end_char=1172|SpaceAfter=No
5	adding	adding	X	FM	Foreign=Yes	2	appos	_	start_char=1172|end_char=1178
6	explanations	explanations	X	FM	Foreign=Yes	5	flat	_	start_char=1179|end_char=1191
7	for	for	X	FM	Foreign=Yes	5	flat	_	start_char=1192|end_char=1195
8	difficult	difficult	X	FM	Foreign=Yes	5	flat	_	start_char=1196|end_char=1205
9	words	words	X	FM	Foreign=Yes	5	flat	_	start_char=1206|end_char=1211|SpaceAfter=No
10	)	)	PUNCT	$(	_	5	punct	_	start_char=1211|end_char=1212|SpaceAfter=No
11	:	:	PUNCT	$.	_	14	punct	_	start_char=1212|end_char=1213|SpaceAfter=No
12	*	*	X	FM	Foreign=Yes	2	parataxis	_	start_char=1213|end_char=1214|SpaceAfter=No
13	*	*	X	FM	Foreign=Yes	12	flat	_	start_char=1214|end_char=1215
14	I'll	I'll	X	FM	Foreign=Yes	12	flat	_	start_char=1216|end_char=1220
15	add	add	X	FM	Foreign=Yes	12	flat	_	start_char=1221|end_char=1224
16	explanations	explanations	X	FM	Foreign=Yes	14	flat	_	start_char=1225|end_char=1237
17	for	for	X	FM	Foreign=Yes	14	flat	_	start_char=1238|end_char=1241
18	any	any	X	FM	Foreign=Yes	14	flat	_	start_char=1242|end_char=1245
19	complex	complex	X	FM	Foreign=Yes	14	flat	_	start_char=1246|end_char=1253
20	terms	terms	X	FM	Foreign=Yes	14	flat	_	start_char=1254|end_char=1259
21	that	that	X	FM	Foreign=Yes	14	flat	_	start_char=1260|end_char=1264
22	might	might	X	FM	Foreign=Yes	14	flat	_	start_char=1265|end_char=1270
23	be	be	X	FM	Foreign=Yes	14	flat	_	start_char=1271|end_char=1273
24	difficult	difficult	X	FM	Foreign=Yes	14	flat	_	start_char=1274|end_char=1283
25	to	to	X	FM	Foreign=Yes	14	flat	_	start_char=1284|end_char=1286
26	understand	understand	X	FM	Foreign=Yes	14	flat	_	start_char=1287|end_char=1297|SpaceAfter=No
27	.	.	PUNCT	$.	_	12	punct	_	start_char=1297|end_char=1298|SpacesAfter=\s\s

# text = Let me reformulate the text accordingly: I'll start by identifying and removing unnecessary information at the text level.
# sent_id = 5
1	Let	let	X	FM	Foreign=Yes	0	root	_	start_char=1300|end_char=1303
2	me	me	X	FM	Foreign=Yes	1	flat	_	start_char=1304|end_char=1306
3	reformulate	reformulate	X	FM	Foreign=Yes	1	flat	_	start_char=1307|end_char=1318
4	the	the	DET	FM	Definite=Def|Foreign=Yes|PronType=Art	1	flat	_	start_char=1319|end_char=1322
5	text	Text	X	FM	Foreign=Yes	1	flat	_	start_char=1323|end_char=1327
6	accordingly	accordingly	X	FM	Foreign=Yes	1	flat	_	start_char=1328|end_char=1339|SpaceAfter=No
7	:	:	PUNCT	$.	_	1	punct	_	start_char=1339|end_char=1340|SpacesAfter=\s\s
8	I'll	I'll	X	FM	Foreign=Yes	1	flat	_	start_char=1342|end_char=1346
9	start	Start	X	FM	Foreign=Yes	1	flat	_	start_char=1347|end_char=1352
10	by	by	X	FM	Foreign=Yes	8	flat	_	start_char=1353|end_char=1355
11	identifying	identifying	X	FM	Foreign=Yes	8	flat	_	start_char=1356|end_char=1367
12	and	and	CCONJ	FM	Foreign=Yes	8	flat	_	start_char=1368|end_char=1371
13	removing	removing	X	FM	Foreign=Yes	8	flat	_	start_char=1372|end_char=1380
14	unnecessary	unnecessary	X	FM	Foreign=Yes	8	flat	_	start_char=1381|end_char=1392
15	information	information	X	FM	Foreign=Yes	8	flat	_	start_char=1393|end_char=1404
16	at	at	X	FM	Foreign=Yes	8	flat	_	start_char=1405|end_char=1407
17	the	the	DET	FM	Definite=Def|Foreign=Yes|PronType=Art	8	flat	_	start_char=1408|end_char=1411
18	text	Text	X	FM	Foreign=Yes	8	flat	_	start_char=1412|end_char=1416
19	level	level	X	FM	Foreign=Yes	8	flat	_	start_char=1417|end_char=1422|SpaceAfter=No
20	.	.	PUNCT	$.	_	1	punct	_	start_char=1422|end_char=1423

# text = Then I'll simplify sentence structures, and finally I'll add explanations for difficult words.
# sent_id = 6
1	Then	Then	X	FM	Foreign=Yes	0	root	_	start_char=1424|end_char=1428
2	I'll	I'll	X	FM	Foreign=Yes	1	flat	_	start_char=1429|end_char=1433
3	simplify	simplify	X	FM	Foreign=Yes	1	flat	_	start_char=1434|end_char=1442
4	sentence	sentence	X	FM	Foreign=Yes	1	flat	_	start_char=1443|end_char=1451
5	structures	structures	X	FM	Foreign=Yes	1	flat	_	start_char=1452|end_char=1462|SpaceAfter=No
6	,	,	PUNCT	$,	_	1	punct	_	start_char=1462|end_char=1463
7	and	and	CCONJ	FM	Foreign=Yes	1	flat	_	start_char=1464|end_char=1467
8	finally	finally	X	FM	Foreign=Yes	1	flat	_	start_char=1468|end_char=1475
9	I'll	I'll	X	FM	Foreign=Yes	1	flat	_	start_char=1476|end_char=1480
10	add	add	X	FM	Foreign=Yes	1	flat	_	start_char=1481|end_char=1484
11	explanations	explanations	X	FM	Foreign=Yes	1	flat	_	start_char=1485|end_char=1497
12	for	for	X	FM	Foreign=Yes	1	flat	_	start_char=1498|end_char=1501
13	difficult	difficult	X	FM	Foreign=Yes	1	flat	_	start_char=1502|end_char=1511
14	words	words	X	FM	Foreign=Yes	1	flat	_	start_char=1512|end_char=1517|SpaceAfter=No
15	.	.	PUNCT	$.	_	1	punct	_	start_char=1517|end_char=1518|SpacesAfter=\s\s

# text = For difficult words that might need explanation: - "Sterbeurkunde" - death certificate - "Beantragen" - to apply for - "Zuständig" - responsible - "Personalausweis" - ID card - "Sterberegister" - register of deaths - "Abgelehnt" - rejected - "Gesetz" - law - "Verständnis" - understanding - "Rückfragen" - follow-up questions - "Ahnenforschung" - genealogy/researching family history Now I'll reformulate the text with these considerations in mind: Let me create the reformulated version: On text level: I'll remove redundant information and keep only the essential content about how to obtain a death certificate.
# sent_id = 7
1	For	For	PROPN	FM	Foreign=Yes	47	nsubj	_	start_char=1520|end_char=1523
2	difficult	difficult	PROPN	FM	Foreign=Yes	1	flat	_	start_char=1524|end_char=1533
3	words	words	PROPN	FM	Foreign=Yes	1	flat	_	start_char=1534|end_char=1539
4	that	that	X	FM	Foreign=Yes	1	flat	_	start_char=1540|end_char=1544
5	might	might	PROPN	FM	Foreign=Yes	1	flat	_	start_char=1545|end_char=1550
6	need	need	PROPN	FM	Foreign=Yes	11	flat	_	start_char=1551|end_char=1555
7	explanation	Explanation	NOUN	FM	Foreign=Yes	11	flat	_	start_char=1556|end_char=1567|SpaceAfter=No
8	:	:	PUNCT	$.	_	11	punct	_	start_char=1567|end_char=1568
9	-	-	PUNCT	$(	_	11	punct	_	start_char=1569|end_char=1570
10	"	"	PUNCT	$(	_	11	punct	_	start_char=1571|end_char=1572|SpaceAfter=No
11	Sterbeurkunde	Sterbeurkunde	NOUN	NN	Case=Nom|Gender=Fem|Number=Sing	1	appos	_	start_char=1572|end_char=1585|SpaceAfter=No
12	"	"	PUNCT	$(	_	11	punct	_	start_char=1585|end_char=1586
13	-	-	PUNCT	$(	_	11	punct	_	start_char=1587|end_char=1588
14	death	death	PROPN	FM	Foreign=Yes	11	flat	_	start_char=1589|end_char=1594
15	certificate	certificate	PROPN	FM	Foreign=Yes	11	flat	_	start_char=1595|end_char=1606
16	-	-	PUNCT	$(	_	18	punct	_	start_char=1607|end_char=1608
17	"	"	PUNCT	$(	_	18	punct	_	start_char=1609|end_char=1610|SpaceAfter=No
18	Beantragen	Beantragen	NOUN	NN	Number=Sing	11	appos	_	start_char=1610|end_char=1620|SpaceAfter=No
19	"	"	PUNCT	$(	_	18	punct	_	start_char=1620|end_char=1621
20	-	-	PUNCT	$(	_	18	punct	_	start_char=1622|end_char=1623
21	to	to	PROPN	FM	Foreign=Yes	18	flat	_	start_char=1624|end_char=1626
22	apply	apply	PROPN	FM	Foreign=Yes	18	flat	_	start_char=1627|end_char=1632
23	for	for	PROPN	FM	Foreign=Yes	18	flat	_	start_char=1633|end_char=1636
24	-	-	PUNCT	$(	_	18	punct	_	start_char=1637|end_char=1638
25	"	"	PUNCT	$(	_	26	punct	_	start_char=1639|end_char=1640|SpaceAfter=No
26	Zuständig	zuständig	ADJ	ADJD	Degree=Pos	32	amod	_	start_char=1640|end_char=1649|SpaceAfter=No
27	"	"	PUNCT	$(	_	26	punct	_	start_char=1649|end_char=1650
28	-	-	PUNCT	$(	_	26	punct	_	start_char=1651|end_char=1652
29	responsible	responsibel	ADJ	ADJA	Degree=Pos|Foreign=Yes	32	amod	_	start_char=1653|end_char=1664
30	-	-	PUNCT	$(	_	32	punct	_	start_char=1665|end_char=1666
31	"	"	PUNCT	$(	_	32	punct	_	start_char=1667|end_char=1668|SpaceAfter=No
32	Personalausweis	Personalausweis	NOUN	NN	Case=Nom|Gender=Masc|Number=Sing	18	appos	_	start_char=1668|end_char=1683|SpaceAfter=No
33	"	"	PUNCT	$(	_	32	punct	_	start_char=1683|end_char=1684
34	-	-	PUNCT	$(	_	32	punct	_	start_char=1685|end_char=1686
35	ID	ID	PROPN	FM	Foreign=Yes	32	flat	_	start_char=1687|end_char=1689
36	card	card	PROPN	FM	Foreign=Yes	32	flat	_	start_char=1690|end_char=1694
37	-	-	PUNCT	$(	_	39	punct	_	start_char=1695|end_char=1696
38	"	"	PUNCT	$(	_	39	punct	_	start_char=1697|end_char=1698|SpaceAfter=No
39	Sterberegister	Sterberegister	NOUN	NN	Case=Nom|Gender=Neut|Number=Sing	32	appos	_	start_char=1698|end_char=1712|SpaceAfter=No
40	"	"	PUNCT	$(	_	39	punct	_	start_char=1712|end_char=1713
41	-	-	PUNCT	$(	_	39	punct	_	start_char=1714|end_char=1715
42	register	register	PROPN	FM	Foreign=Yes	39	flat	_	start_char=1716|end_char=1724
43	of	of	PROPN	FM	Foreign=Yes	39	flat	_	start_char=1725|end_char=1727
44	deaths	deaths	PROPN	FM	Foreign=Yes	39	flat	_	start_char=1728|end_char=1734
45	-	-	PUNCT	$(	_	47	punct	_	start_char=1735|end_char=1736
46	"	"	PUNCT	$(	_	47	punct	_	start_char=1737|end_char=1738|SpaceAfter=No
47	Abgelehnt	ablehnen	VERB	VVPP	VerbForm=Part	0	root	_	start_char=1738|end_char=1747|SpaceAfter=No
48	"	"	PUNCT	$(	_	47	punct	_	start_char=1747|end_char=1748
49	-	-	PUNCT	$(	_	53	punct	_	start_char=1749|end_char=1750
50	rejected	rejected	PROPN	FM	Foreign=Yes	53	compound	_	start_char=1751|end_char=1759
51	-	-	PUNCT	$(	_	53	punct	_	start_char=1760|end_char=1761
52	"	"	PUNCT	$(	_	53	punct	_	start_char=1762|end_char=1763|SpaceAfter=No
53	Gesetz	Gesetz	NOUN	NN	Case=Nom|Gender=Neut|Number=Sing	47	obj	_	start_char=1763|end_char=1769|SpaceAfter=No
54	"	"	PUNCT	$(	_	53	punct	_	start_char=1769|end_char=1770
55	-	-	PUNCT	$(	_	53	punct	_	start_char=1771|end_char=1772
56	law	law	PROPN	FM	Foreign=Yes	53	flat	_	start_char=1773|end_char=1776
57	-	-	PUNCT	$(	_	56	punct	_	start_char=1777|end_char=1778
58	"	"	PUNCT	$(	_	59	punct	_	start_char=1779|end_char=1780|SpaceAfter=No
59	Verständnis	Verständnis	NOUN	NN	Case=Acc|Gender=Neut|Number=Sing	53	compound	_	start_char=1780|end_char=1791|SpaceAfter=No
60	"	"	PUNCT	$(	_	59	punct	_	start_char=1791|end_char=1792
61	-	-	PUNCT	$(	_	65	punct	_	start_char=1793|end_char=1794
62	understanding	understanding	NOUN	FM	Foreign=Yes	65	compound	_	start_char=1795|end_char=1808
63	-	-	PUNCT	$(	_	62	punct	_	start_char=1809|end_char=1810
64	"	"	PUNCT	$(	_	65	punct	_	start_char=1811|end_char=1812|SpaceAfter=No
65	Rückfragen	Rückfrage	NOUN	NN	Case=Acc|Gender=Fem|Number=Plur	53	appos	_	start_char=1812|end_char=1822|SpaceAfter=No
66	"	"	PUNCT	$(	_	65	punct	_	start_char=1822|end_char=1823
67	-	-	PUNCT	$(	_	68	punct	_	start_char=1824|end_char=1825
68	follow	follow	X	FM	Foreign=Yes	65	conj	_	start_char=1826|end_char=1832|SpaceAfter=No
69	-	-	PUNCT	$(	_	68	punct	_	start_char=1832|end_char=1833|SpaceAfter=No
70	up	up	X	FM	Foreign=Yes	68	flat	_	start_char=1833|end_char=1835
71	questions	questions	X	FM	Foreign=Yes	68	flat	_	start_char=1836|end_char=1845
72	-	-	PUNCT	$(	_	74	punct	_	start_char=1846|end_char=1847
73	"	"	PUNCT	$(	_	74	punct	_	start_char=1848|end_char=1849|SpaceAfter=No
74	Ahnenforschung	Ahnenforschung	NOUN	NN	Case=Nom|Gender=Fem|Number=Sing	65	appos	_	start_char=1849|end_char=1863|SpaceAfter=No
75	"	"	PUNCT	$(	_	74	punct	_	start_char=1863|end_char=1864
76	-	-	PUNCT	$(	_	77	punct	_	start_char=1865|end_char=1866
77	genealogy/researching	genealogy/researching	X	FM	Foreign=Yes	74	flat	_	start_char=1867|end_char=1888
78	family	family	X	FM	Foreign=Yes	74	flat	_	start_char=1889|end_char=1895
79	history	history	X	FM	Foreign=Yes	74	flat	_	start_char=1896|end_char=1903|SpacesAfter=\s\s
80	Now	Now	X	FM	Foreign=Yes	74	flat	_	start_char=1905|end_char=1908
81	I'll	I'll	X	FM	Foreign=Yes	74	flat	_	start_char=1909|end_char=1913
82	reformulate	reformulate	X	FM	Foreign=Yes	77	flat	_	start_char=1914|end_char=1925
83	the	the	DET	FM	Definite=Def|Foreign=Yes|PronType=Art	77	flat	_	start_char=1926|end_char=1929
84	text	Text	X	FM	Foreign=Yes	77	flat	_	start_char=1930|end_char=1934
85	with	with	X	FM	Foreign=Yes	77	flat	_	start_char=1935|end_char=1939
86	these	these	X	FM	Foreign=Yes	74	flat	_	start_char=1940|end_char=1945
87	considerations	considerations	X	FM	Foreign=Yes	74	flat	_	start_char=1946|end_char=1960
88	in	in	X	FM	Foreign=Yes	74	flat	_	start_char=1961|end_char=1963
89	mind	mind	X	FM	Foreign=Yes	74	flat	_	start_char=1964|end_char=1968|SpaceAfter=No
90	:	:	PUNCT	$.	_	91	punct	_	start_char=1968|end_char=1969|SpacesAfter=\s\s
91	Let	let	X	FM	Foreign=Yes	74	flat	_	start_char=1971|end_char=1974
92	me	me	X	FM	Foreign=Yes	74	flat	_	start_char=1975|end_char=1977
93	create	create	X	FM	Foreign=Yes	74	flat	_	start_char=1978|end_char=1984
94	the	the	DET	FM	Definite=Def|Foreign=Yes|PronType=Art	74	flat	_	start_char=1985|end_char=1988
95	reformulated	reformulated	X	FM	Foreign=Yes	74	flat	_	start_char=1989|end_char=2001
96	version	version	X	FM	Foreign=Yes	74	flat	_	start_char=2002|end_char=2009|SpaceAfter=No
97	:	:	PUNCT	$.	_	98	punct	_	start_char=2009|end_char=2010|SpacesAfter=\s\s
98	On	On	X	FM	Foreign=Yes	74	flat	_	start_char=2012|end_char=2014
99	text	Text	X	FM	Foreign=Yes	74	flat	_	start_char=2015|end_char=2019
100	level	level	X	FM	Foreign=Yes	74	flat	_	start_char=2020|end_char=2025|SpaceAfter=No
101	:	:	PUNCT	$.	_	102	punct	_	start_char=2025|end_char=2026
102	I'll	I'll	X	FM	Foreign=Yes	74	flat	_	start_char=2027|end_char=2031
103	remove	remove	X	FM	Foreign=Yes	74	flat	_	start_char=2032|end_char=2038
104	redundant	redundant	X	FM	Foreign=Yes	74	flat	_	start_char=2039|end_char=2048
105	information	information	X	FM	Foreign=Yes	74	flat	_	start_char=2049|end_char=2060
106	and	and	X	FM	Foreign=Yes	74	flat	_	start_char=2061|end_char=2064
107	keep	keep	X	FM	Foreign=Yes	74	flat	_	start_char=2065|end_char=2069
108	only	only	X	FM	Foreign=Yes	74	flat	_	start_char=2070|end_char=2074
109	the	the	DET	FM	Definite=Def|Foreign=Yes|PronType=Art	74	flat	_	start_char=2075|end_char=2078
110	essential	essential	X	FM	Foreign=Yes	74	flat	_	start_char=2079|end_char=2088
111	content	content	X	FM	Foreign=Yes	74	flat	_	start_char=2089|end_char=2096
112	about	about	X	FM	Foreign=Yes	74	flat	_	start_char=2097|end_char=2102
113	how	how	X	FM	Foreign=Yes	74	flat	_	start_char=2103|end_char=2106
114	to	to	X	FM	Foreign=Yes	74	flat	_	start_char=2107|end_char=2109
115	obtain	obtain	X	FM	Foreign=Yes	74	flat	_	start_char=2110|end_char=2116
116	a	a	X	FM	Foreign=Yes	74	flat	_	start_char=2117|end_char=2118
117	death	death	X	FM	Foreign=Yes	74	flat	_	start_char=2119|end_char=2124
118	certificate	certificate	X	FM	Foreign=Yes	74	flat	_	start_char=2125|end_char=2136|SpaceAfter=No
119	.	.	PUNCT	$.	_	102	punct	_	start_char=2136|end_char=2137|SpacesAfter=\s\s

# text = On sentence level: I'll break down complex sentences into simple ones without subordinate clauses.
# sent_id = 8
1	On	On	X	FM	Foreign=Yes	0	root	_	start_char=2139|end_char=2141
2	sentence	sentence	X	FM	Foreign=Yes	1	flat	_	start_char=2142|end_char=2150
3	level	level	X	FM	Foreign=Yes	1	flat	_	start_char=2151|end_char=2156|SpaceAfter=No
4	:	:	PUNCT	$.	_	5	punct	_	start_char=2156|end_char=2157
5	I'll	I'll	X	FM	Foreign=Yes	1	appos	_	start_char=2158|end_char=2162
6	break	break	X	FM	Foreign=Yes	5	flat	_	start_char=2163|end_char=2168
7	down	down	X	FM	Foreign=Yes	5	flat	_	start_char=2169|end_char=2173
8	complex	complex	X	FM	Foreign=Yes	5	flat	_	start_char=2174|end_char=2181
9	sentences	sentences	X	FM	Foreign=Yes	5	flat	_	start_char=2182|end_char=2191
10	into	into	X	FM	Foreign=Yes	5	flat	_	start_char=2192|end_char=2196
11	simple	simpeln	X	FM	Foreign=Yes	5	flat	_	start_char=2197|end_char=2203
12	ones	ones	X	FM	Foreign=Yes	5	flat	_	start_char=2204|end_char=2208
13	without	without	X	FM	Foreign=Yes	5	flat	_	start_char=2209|end_char=2216
14	subordinate	subordinate	X	FM	Foreign=Yes	5	flat	_	start_char=2217|end_char=2228
15	clauses	clauses	X	FM	Foreign=Yes	5	flat	_	start_char=2229|end_char=2236|SpaceAfter=No
16	.	.	PUNCT	$.	_	5	punct	_	start_char=2236|end_char=2237|SpacesAfter=\s\s

# text = On word level: I'll add explanations for difficult words in parentheses.
# sent_id = 9
1	On	On	X	FM	Foreign=Yes	0	root	_	start_char=2239|end_char=2241
2	word	word	X	FM	Foreign=Yes	1	flat	_	start_char=2242|end_char=2246
3	level	level	X	FM	Foreign=Yes	1	flat	_	start_char=2247|end_char=2252|SpaceAfter=No
4	:	:	PUNCT	$.	_	5	punct	_	start_char=2252|end_char=2253
5	I'll	I'll	X	FM	Foreign=Yes	1	appos	_	start_char=2254|end_char=2258
6	add	add	X	FM	Foreign=Yes	5	flat	_	start_char=2259|end_char=2262
7	explanations	explanations	X	FM	Foreign=Yes	5	flat	_	start_char=2263|end_char=2275
8	for	for	X	FM	Foreign=Yes	5	flat	_	start_char=2276|end_char=2279
9	difficult	difficult	X	FM	Foreign=Yes	5	flat	_	start_char=2280|end_char=2289
10	words	words	X	FM	Foreign=Yes	5	flat	_	start_char=2290|end_char=2295
11	in	in	ADP	FM	Foreign=Yes	5	flat	_	start_char=2296|end_char=2298
12	parentheses	parentheses	X	FM	Foreign=Yes	5	flat	_	start_char=2299|end_char=2310|SpaceAfter=No
13	.	.	PUNCT	$.	_	1	punct	_	start_char=2310|end_char=2311|SpacesAfter=\s\s

# text = Here's my reformulated version: I'll now provide the reformulated text according to these linguistic principles.
# sent_id = 10
1	Here's	Here's	X	FM	Foreign=Yes	0	root	_	start_char=2313|end_char=2319
2	my	my	X	FM	Foreign=Yes	1	flat	_	start_char=2320|end_char=2322
3	reformulated	reformulated	X	FM	Foreign=Yes	1	flat	_	start_char=2323|end_char=2335
4	version	version	X	FM	Foreign=Yes	1	flat	_	start_char=2336|end_char=2343|SpaceAfter=No
5	:	:	PUNCT	$.	_	6	punct	_	start_char=2343|end_char=2344|SpacesAfter=\s\s
6	I'll	I'll	X	FM	Foreign=Yes	1	appos	_	start_char=2346|end_char=2350
7	now	now	X	FM	Foreign=Yes	6	flat	_	start_char=2351|end_char=2354
8	provide	provide	X	FM	Foreign=Yes	6	flat	_	start_char=2355|end_char=2362
9	the	the	DET	FM	Definite=Def|Foreign=Yes|PronType=Art	6	flat	_	start_char=2363|end_char=2366
10	reformulated	reformulated	X	FM	Foreign=Yes	6	flat	_	start_char=2367|end_char=2379
11	text	Text	X	FM	Foreign=Yes	6	flat	_	start_char=2380|end_char=2384
12	according	according	X	FM	Foreign=Yes	6	flat	_	start_char=2385|end_char=2394
13	to	to	X	FM	Foreign=Yes	6	flat	_	start_char=2395|end_char=2397
14	these	these	X	FM	Foreign=Yes	6	flat	_	start_char=2398|end_char=2403
15	linguistic	linguistic	X	FM	Foreign=Yes	6	flat	_	start_char=2404|end_char=2414
16	principles	principles	X	FM	Foreign=Yes	6	flat	_	start_char=2415|end_char=2425|SpaceAfter=No
17	.	.	PUNCT	$.	_	1	punct	_	start_char=2425|end_char=2426

# text = </think> **So bekommt man eine Sterbeurkunde** **Was ist eine Sterbeurkunde?**
# sent_id = 11
1	</think>	</think>	X	XY	_	4	dep	_	start_char=2427|end_char=2435|SpacesAfter=\s\s
2	**	**	PUNCT	$(	_	1	punct	_	start_char=2437|end_char=2439|SpaceAfter=No
3	So	so	ADV	ADV	_	4	advmod	_	start_char=2439|end_char=2441
4	bekommt	bekommen	VERB	VVFIN	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	start_char=2442|end_char=2449
5	man	man	PRON	PIS	Case=Nom|Number=Sing|PronType=Ind	4	nsubj	_	start_char=2450|end_char=2453
6	eine	ein	DET	ART	Case=Acc|Definite=Ind|Gender=Fem|NumType=Card|Number=Sing|PronType=Art	7	det	_	start_char=2454|end_char=2458
7	Sterbeurkunde	Sterbeurkunde	NOUN	NN	Case=Acc|Gender=Fem|Number=Sing	4	obj	_	start_char=2459|end_char=2472|SpaceAfter=No
8	*	*	PUNCT	$(	_	14	punct	_	start_char=2472|end_char=2473|SpaceAfter=No
9	*	*	PUNCT	$(	_	14	punct	_	start_char=2473|end_char=2474|SpacesAfter=\s\s
10	**	**	PUNCT	$(	_	14	punct	_	start_char=2476|end_char=2478|SpaceAfter=No
11	Was	was	PRON	PWS	Case=Nom|Gender=Neut|Number=Sing|PronType=Int,Rel	14	nsubj	_	start_char=2478|end_char=2481
12	ist	sein	AUX	VAFIN	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	14	cop	_	start_char=2482|end_char=2485
13	eine	ein	DET	ART	Case=Nom|Definite=Ind|Gender=Fem|NumType=Card|Number=Sing|PronType=Art	14	det	_	start_char=2486|end_char=2490
14	Sterbeurkunde	Sterbeurkunde	NOUN	NN	Case=Nom|Gender=Fem|Number=Sing	4	parataxis	_	start_char=2491|end_char=2504|SpaceAfter=No
15	?	?	PUNCT	$.	_	14	punct	_	start_char=2504|end_char=2505|SpaceAfter=No
16	*	*	PUNCT	$(	_	14	dep	_	start_char=2505|end_char=2506|SpaceAfter=No
17	*	*	PUNCT	$(	_	14	punct	_	start_char=2506|end_char=2507|SpacesAfter=\s\s\s

# text = Eine Sterbeurkunde braucht man, wenn jemand gestorben ist.
# sent_id = 12
1	Eine	ein	DET	ART	Case=Acc|Definite=Ind|Gender=Fem|NumType=Card|Number=Sing|PronType=Art	2	det	_	start_char=2510|end_char=2514
2	Sterbeurkunde	Sterbeurkunde	NOUN	NN	Case=Acc|Gender=Fem|Number=Sing	3	obj	_	start_char=2515|end_char=2528
3	braucht	brauchen	VERB	VVFIN	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	start_char=2529|end_char=2536
4	man	man	PRON	PIS	Case=Nom|Number=Sing|PronType=Ind	3	nsubj	_	start_char=2537|end_char=2540|SpaceAfter=No
5	,	,	PUNCT	$,	_	8	punct	_	start_char=2540|end_char=2541
6	wenn	wenn	SCONJ	KOUS	_	8	mark	_	start_char=2542|end_char=2546
7	jemand	jemand	PRON	PIS	Case=Nom|Number=Sing|PronType=Ind	8	nsubj	_	start_char=2547|end_char=2553
8	gestorben	sterben	VERB	VVPP	VerbForm=Part	3	advcl	_	start_char=2554|end_char=2563
9	ist	sein	AUX	VAFIN	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	8	aux	_	start_char=2564|end_char=2567|SpaceAfter=No
10	.	.	PUNCT	$.	_	3	punct	_	start_char=2567|end_char=2568

# text = Man braucht sie für viele offizielle Dinge.
# sent_id = 13
1	Man	man	PRON	PIS	Case=Nom|Number=Sing|PronType=Ind	2	nsubj	_	start_char=2569|end_char=2572
2	braucht	brauchen	VERB	VVFIN	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	start_char=2573|end_char=2580
3	sie	sie	PRON	PPER	Case=Acc|Gender=Fem|Number=Plur|Person=3|PronType=Prs	2	obj	_	start_char=2581|end_char=2584
4	für	für	ADP	APPR	_	7	case	_	start_char=2585|end_char=2588
5	viele	viel	DET	PIAT	Case=Acc|Gender=Neut|Number=Plur|PronType=Ind	7	det	_	start_char=2589|end_char=2594
6	offizielle	offiziell	ADJ	ADJA	Case=Acc|Degree=Pos|Gender=Neut|Number=Plur	7	amod	_	start_char=2595|end_char=2605
7	Dinge	Ding	NOUN	NN	Case=Acc|Gender=Neut|Number=Plur	2	obl	_	start_char=2606|end_char=2611|SpaceAfter=No
8	.	.	PUNCT	$.	_	2	punct	_	start_char=2611|end_char=2612|SpacesAfter=\s\s\s

# text = Man kann sie beim Standesamt beantragen.
# sent_id = 14
1	Man	man	PRON	PIS	Case=Nom|Number=Sing|PronType=Ind	7	nsubj	_	start_char=2615|end_char=2618
2	kann	können	AUX	VMFIN	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	7	aux	_	start_char=2619|end_char=2623
3	sie	sie	PRON	PPER	Case=Acc|Number=Plur|Person=3|PronType=Prs	7	obj	_	start_char=2624|end_char=2627
4-5	beim	_	_	_	_	_	_	_	start_char=2628|end_char=2632
4	bei	bei	ADP	APPR	_	6	case	_	_
5	dem	der	DET	ART	Case=Dat|Definite=Def|Gender=Neut|Number=Sing|PronType=Art	6	det	_	_
6	Standesamt	Standesamt	NOUN	NN	Case=Dat|Gender=Neut|Number=Sing	7	obl	_	start_char=2633|end_char=2643
7	beantragen	beantragen	VERB	VVINF	VerbForm=Inf	0	root	_	start_char=2644|end_char=2654|SpaceAfter=No
8	.	.	PUNCT	$.	_	7	punct	_	start_char=2654|end_char=2655

# text = Das geht aber nur unter bestimmten Bedingungen.
# sent_id = 15
1	Das	der	PRON	PDS	Case=Nom|Gender=Neut|Number=Sing|PronType=Dem,Rel	2	nsubj	_	start_char=2656|end_char=2659
2	geht	gehen	VERB	VVFIN	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	start_char=2660|end_char=2664
3	aber	aber	ADV	ADV	_	2	advmod	_	start_char=2665|end_char=2669
4	nur	nur	ADV	ADV	_	2	advmod	_	start_char=2670|end_char=2673
5	unter	unter	ADP	APPR	_	7	case	_	start_char=2674|end_char=2679
6	bestimmten	bestimmt	ADJ	ADJA	Case=Dat|Degree=Pos|Gender=Fem|Number=Plur	7	amod	_	start_char=2680|end_char=2690
7	Bedingungen	Bedingung	NOUN	NN	Case=Dat|Gender=Fem|Number=Plur	2	obl	_	start_char=2691|end_char=2702|SpaceAfter=No
8	.	.	PUNCT	$.	_	2	punct	_	start_char=2702|end_char=2703|SpacesAfter=\s\s\s

# text = (Standesamt = eine Behörde, die Geburten, Ehen und Tode aufzeichnet) **So geht es weiter:** 1.
# sent_id = 16
1	(	(	PUNCT	$(	_	2	punct	_	start_char=2706|end_char=2707|SpaceAfter=No
2	Standesamt	Standesamt	NOUN	NN	Case=Nom|Gender=Neut|Number=Sing	17	nsubj	_	start_char=2707|end_char=2717
3	=	=	PUNCT	$(	_	5	punct	_	start_char=2718|end_char=2719
4	eine	ein	DET	ART	Case=Nom|Definite=Ind|Gender=Fem|NumType=Card|Number=Sing|PronType=Art	5	det	_	start_char=2720|end_char=2724
5	Behörde	Behörde	NOUN	NN	Case=Nom|Gender=Fem|Number=Sing	2	appos	_	start_char=2725|end_char=2732|SpaceAfter=No
6	,	,	PUNCT	$,	_	8	punct	_	start_char=2732|end_char=2733
7	die	der	DET	ART	Case=Nom|Definite=Def|Number=Plur|PronType=Art	8	det	_	start_char=2734|end_char=2737
8	Geburten	Geburt	NOUN	NN	Case=Acc|Gender=Fem|Number=Plur	13	obj	_	start_char=2738|end_char=2746|SpaceAfter=No
9	,	,	PUNCT	$,	_	10	punct	_	start_char=2746|end_char=2747
10	Ehen	Ehe	NOUN	NN	Case=Nom|Gender=Fem|Number=Plur	8	conj	_	start_char=2748|end_char=2752
11	und	und	CCONJ	KON	_	12	cc	_	start_char=2753|end_char=2756
12	Tode	Tod	NOUN	NN	Case=Acc|Gender=Masc|Number=Sing	8	conj	_	start_char=2757|end_char=2761
13	aufzeichnet	aufzeichnen	VERB	VVFIN	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	acl	_	start_char=2762|end_char=2773|SpaceAfter=No
14	)	)	PUNCT	$(	_	2	punct	_	start_char=2773|end_char=2774|SpacesAfter=\s\s
15	**	**	PUNCT	$(	_	2	punct	_	start_char=2776|end_char=2778|SpaceAfter=No
16	So	so	ADV	ADV	_	17	advmod	_	start_char=2778|end_char=2780
17	geht	gehen	VERB	VVFIN	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	start_char=2781|end_char=2785
18	es	es	PRON	PPER	Case=Nom|Gender=Neut|Number=Sing|Person=3|PronType=Prs	17	nsubj	_	start_char=2786|end_char=2788
19	weiter	weiter	ADV	PTKVZ	_	17	compound:prt	_	start_char=2789|end_char=2795|SpaceAfter=No
20	:	:	PUNCT	$.	_	21	punct	_	start_char=2795|end_char=2796|SpaceAfter=No
21	**	**	X	XY	_	17	dep	_	start_char=2796|end_char=2798|SpacesAfter=\s\s\s
22	1	1	NUM	CARD	NumType=Card	21	dep	_	start_char=2801|end_char=2802|SpaceAfter=No
23	.	.	PUNCT	$.	_	22	punct	_	start_char=2802|end_char=2803

# text = Man stellt einen Antrag beim richtigen Standesamt.
# sent_id = 17
1	Man	man	PRON	PIS	Case=Nom|Number=Sing|PronType=Ind	2	nsubj	_	start_char=2804|end_char=2807
2	stellt	stellen	VERB	VVFIN	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	start_char=2808|end_char=2814
3	einen	ein	DET	ART	Case=Acc|Definite=Ind|Gender=Masc|NumType=Card|Number=Sing|PronType=Art	4	det	_	start_char=2815|end_char=2820
4	Antrag	Antrag	NOUN	NN	Case=Acc|Gender=Masc|Number=Sing	2	obj	_	start_char=2821|end_char=2827
5-6	beim	_	_	_	_	_	_	_	start_char=2828|end_char=2832
5	bei	bei	ADP	APPR	_	8	case	_	_
6	dem	der	DET	ART	Case=Dat|Definite=Def|Gender=Neut|Number=Sing|PronType=Art	8	det	_	_
7	richtigen	richtig	ADJ	ADJA	Case=Dat|Degree=Pos|Gender=Neut|Number=Sing	8	amod	_	start_char=2833|end_char=2842
8	Standesamt	Standesamt	NOUN	NN	Case=Dat|Gender=Neut|Number=Sing	4	nmod	_	start_char=2843|end_char=2853|SpaceAfter=No
9	.	.	PUNCT	$.	_	2	punct	_	start_char=2853|end_char=2854|SpacesAfter=\s\s\s\s\s\s

# text = (richtig = in der Stadt oder Gemeinde, wo der Mensch gestorben ist)
# sent_id = 18
1	(	(	PUNCT	$(	_	2	punct	_	start_char=2860|end_char=2861|SpaceAfter=No
2	richtig	richtig	ADJ	ADJD	Degree=Pos	0	root	_	start_char=2861|end_char=2868
3	=	=	PUNCT	$(	_	6	punct	_	start_char=2869|end_char=2870
4	in	in	ADP	APPR	_	6	case	_	start_char=2871|end_char=2873
5	der	der	DET	ART	Case=Dat|Definite=Def|Gender=Fem|Number=Sing|PronType=Art	6	det	_	start_char=2874|end_char=2877
6	Stadt	Stadt	NOUN	NN	Case=Dat|Gender=Fem|Number=Sing	2	nmod	_	start_char=2878|end_char=2883
7	oder	oder	CCONJ	KON	_	8	cc	_	start_char=2884|end_char=2888
8	Gemeinde	Gemeinde	NOUN	NN	Case=Dat|Gender=Fem|Number=Sing	6	conj	_	start_char=2889|end_char=2897|SpaceAfter=No
9	,	,	PUNCT	$,	_	13	punct	_	start_char=2897|end_char=2898
10	wo	wo	ADV	PWAV	PronType=Int	13	advmod	_	start_char=2899|end_char=2901
11	der	der	DET	ART	Case=Nom|Definite=Def|Gender=Masc|Number=Sing|PronType=Art	12	det	_	start_char=2902|end_char=2905
12	Mensch	Mensch	NOUN	NN	Case=Nom|Gender=Masc|Number=Sing	13	nsubj	_	start_char=2906|end_char=2912
13	gestorben	sterben	VERB	VVPP	VerbForm=Part	6	acl	_	start_char=2913|end_char=2922
14	ist	sein	AUX	VAFIN	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	13	aux:pass	_	start_char=2923|end_char=2926|SpaceAfter=No
15	)	)	PUNCT	$(	_	2	punct	_	start_char=2926|end_char=2927|SpacesAfter=\s\s\s\s\s\s

# text = Man muss auch die nötigen Papiere mitgeben.
# sent_id = 19
1	Man	man	PRON	PIS	Case=Nom|Number=Sing|PronType=Ind	7	nsubj	_	start_char=2933|end_char=2936
2	muss	müssen	AUX	VMFIN	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	7	aux	_	start_char=2937|end_char=2941
3	auch	auch	ADV	ADV	_	7	advmod	_	start_char=2942|end_char=2946
4	die	der	DET	ART	Case=Acc|Definite=Def|Number=Plur|PronType=Art	6	det	_	start_char=2947|end_char=2950
5	nötigen	nötig	ADJ	ADJA	Case=Acc|Degree=Pos|Gender=Neut|Number=Plur	6	amod	_	start_char=2951|end_char=2958
6	Papiere	Papier	NOUN	NN	Case=Acc|Gender=Neut|Number=Plur	7	obj	_	start_char=2959|end_char=2966
7	mitgeben	mitgeben	VERB	VVINF	VerbForm=Inf	0	root	_	start_char=2967|end_char=2975|SpaceAfter=No
8	.	.	PUNCT	$.	_	7	punct	_	start_char=2975|end_char=2976|SpacesAfter=\s\s

# text = 2. Das Standesamt prüft alles.
# sent_id = 20
1	2.	2.	ADJ	ADJA	Degree=Pos|NumType=Ord	3	dep	_	start_char=2978|end_char=2980
2	Das	der	DET	ART	Case=Nom|Definite=Def|Gender=Neut|Number=Sing|PronType=Art	3	det	_	start_char=2981|end_char=2984
3	Standesamt	Standesamt	NOUN	NN	Case=Nom|Gender=Neut|Number=Sing	4	nsubj	_	start_char=2985|end_char=2995
4	prüft	prüfen	VERB	VVFIN	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	start_char=2996|end_char=3001
5	alles	alle	DET	PIS	Case=Acc|Gender=Neut|Number=Sing|PronType=Tot	4	obj	_	start_char=3002|end_char=3007|SpaceAfter=No
6	.	.	PUNCT	$.	_	4	punct	_	start_char=3007|end_char=3008|SpacesAfter=\s\s\s\s\s\s

# text = Wenn alles okay ist, gibt es die Sterbeurkunde.
# sent_id = 21
1	Wenn	wenn	SCONJ	KOUS	_	3	mark	_	start_char=3014|end_char=3018
2	alles	alle	DET	PIS	Case=Nom|Gender=Neut|Number=Sing|PronType=Tot	3	nsubj	_	start_char=3019|end_char=3024
3	okay	Okay	ADJ	ADJD	Degree=Pos	6	advcl	_	start_char=3025|end_char=3029
4	ist	sein	AUX	VAFIN	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	cop	_	start_char=3030|end_char=3033|SpaceAfter=No
5	,	,	PUNCT	$,	_	3	punct	_	start_char=3033|end_char=3034
6	gibt	geben	VERB	VVFIN	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	start_char=3035|end_char=3039
7	es	es	PRON	PPER	Case=Nom|Gender=Neut|Number=Sing|Person=3|PronType=Prs	6	expl	_	start_char=3040|end_char=3042
8	die	der	DET	ART	Case=Acc|Definite=Def|Gender=Fem|Number=Sing|PronType=Art	9	det	_	start_char=3043|end_char=3046
9	Sterbeurkunde	Sterbeurkunde	NOUN	NN	Case=Acc|Gender=Fem|Number=Sing	6	nsubj	_	start_char=3047|end_char=3060|SpaceAfter=No
10	.	.	PUNCT	$.	_	6	punct	_	start_char=3060|end_char=3061|SpacesAfter=\s\s

# text = 3. Man bekommt die Sterbeurkunde dann per Post.
# sent_id = 22
1	3.	3.	ADJ	ADJA	Degree=Pos|NumType=Ord	2	dep	_	start_char=3063|end_char=3065
2	Man	man	PRON	PIS	Case=Nom|Number=Sing|PronType=Ind	3	nsubj	_	start_char=3066|end_char=3069
3	bekommt	bekommen	VERB	VVFIN	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	start_char=3070|end_char=3077
4	die	der	DET	ART	Case=Acc|Definite=Def|Gender=Fem|Number=Sing|PronType=Art	5	det	_	start_char=3078|end_char=3081
5	Sterbeurkunde	Sterbeurkunde	NOUN	NN	Case=Acc|Gender=Fem|Number=Sing	3	obj	_	start_char=3082|end_char=3095
6	dann	dann	ADV	ADV	_	3	advmod	_	start_char=3096|end_char=3100
7	per	per	ADP	APPR	_	8	case	_	start_char=3101|end_char=3104
8	Post	Post	NOUN	NN	Case=Acc|Gender=Fem|Number=Sing	3	obl	_	start_char=3105|end_char=3109|SpaceAfter=No
9	.	.	PUNCT	$.	_	3	punct	_	start_char=3109|end_char=3110|SpacesAfter=\s\s\s\s\s\s

# text = Oder man holt sie selbst ab.
# sent_id = 23
1	Oder	Oder	CCONJ	KON	_	3	cc	_	start_char=3116|end_char=3120
2	man	man	PRON	PIS	Case=Nom|Number=Sing|PronType=Ind	3	nsubj	_	start_char=3121|end_char=3124
3	holt	holen	VERB	VVFIN	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	start_char=3125|end_char=3129
4	sie	sie	PRON	PPER	Case=Acc|Number=Plur|Person=3|PronType=Prs	3	obj	_	start_char=3130|end_char=3133
5	selbst	selbst	ADV	ADV	_	3	advmod	_	start_char=3134|end_char=3140
6	ab	ab	ADP	PTKVZ	_	3	compound:prt	_	start_char=3141|end_char=3143|SpaceAfter=No
7	.	.	PUNCT	$.	_	3	punct	_	start_char=3143|end_char=3144|SpacesAfter=\s\s

# text = 4. Die Kosten werden vorher oder danach per Rechnung gezahlt.
# sent_id = 24
1	4.	4.	ADJ	ADJA	Degree=Pos|NumType=Ord	2	dep	_	start_char=3146|end_char=3148
2	Die	der	DET	ART	Case=Nom|Definite=Def|Number=Plur|PronType=Art	3	det	_	start_char=3149|end_char=3152
3	Kosten	Kosten	NOUN	NN	Case=Nom|Number=Plur	10	nsubj:pass	_	start_char=3153|end_char=3159
4	werden	werden	AUX	VAFIN	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin|Voice=Pass	10	aux:pass	_	start_char=3160|end_char=3166
5	vorher	vorher	ADV	ADV	_	10	advmod	_	start_char=3167|end_char=3173
6	oder	oder	CCONJ	KON	_	7	cc	_	start_char=3174|end_char=3178
7	danach	danach	ADV	PAV	_	5	conj	_	start_char=3179|end_char=3185
8	per	per	ADP	APPR	_	9	case	_	start_char=3186|end_char=3189
9	Rechnung	Rechnung	NOUN	NN	Case=Acc|Gender=Fem|Number=Sing	10	obl	_	start_char=3190|end_char=3198
10	gezahlt	zahlen	VERB	VVPP	VerbForm=Part	0	root	_	start_char=3199|end_char=3206|SpaceAfter=No
11	.	.	PUNCT	$.	_	10	punct	_	start_char=3206|end_char=3207|SpacesAfter=\s\s\s\s\s\s

# text = Bei Abholung kann man auch vor Ort zahlen.
# sent_id = 25
1	Bei	bei	ADP	APPR	_	2	case	_	start_char=3213|end_char=3216
2	Abholung	Abholung	NOUN	NN	Case=Dat|Gender=Fem|Number=Sing	8	obl	_	start_char=3217|end_char=3225
3	kann	können	AUX	VMFIN	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	8	aux	_	start_char=3226|end_char=3230
4	man	man	PRON	PIS	Case=Nom|Number=Sing|PronType=Ind	8	nsubj	_	start_char=3231|end_char=3234
5	auch	auch	ADV	ADV	_	8	advmod	_	start_char=3235|end_char=3239
6	vor	vor	ADP	APPR	_	7	case	_	start_char=3240|end_char=3243
7	Ort	Ort	NOUN	NN	Case=Dat|Gender=Masc|Number=Sing	8	obl	_	start_char=3244|end_char=3247
8	zahlen	zahlen	VERB	VVINF	VerbForm=Inf	0	root	_	start_char=3248|end_char=3254|SpaceAfter=No
9	.	.	PUNCT	$.	_	8	punct	_	start_char=3254|end_char=3255|SpacesAfter=\s\s

# text = **Wer darf eine Sterbeurkunde beantragen?**
# sent_id = 26
1	**	**	PUNCT	$(	_	2	punct	_	start_char=3257|end_char=3259|SpaceAfter=No
2	Wer	wer	PRON	PWS	Case=Nom|Number=Sing|PronType=Int,Rel	6	nsubj	_	start_char=3259|end_char=3262
3	darf	dürfen	AUX	VMFIN	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	6	aux	_	start_char=3263|end_char=3267
4	eine	ein	DET	ART	Case=Acc|Definite=Ind|Gender=Fem|NumType=Card|Number=Sing|PronType=Art	5	det	_	start_char=3268|end_char=3272
5	Sterbeurkunde	Sterbeurkunde	NOUN	NN	Case=Acc|Gender=Fem|Number=Sing	6	obj	_	start_char=3273|end_char=3286
6	beantragen	beantragen	VERB	VVINF	VerbForm=Inf	0	root	_	start_char=3287|end_char=3297|SpaceAfter=No
7	?	?	PUNCT	$.	_	6	punct	_	start_char=3297|end_char=3298|SpaceAfter=No
8	*	*	PUNCT	$(	_	6	punct	_	start_char=3298|end_char=3299|SpaceAfter=No
9	*	*	PUNCT	$(	_	6	punct	_	start_char=3299|end_char=3300|SpacesAfter=\s\s\s

# text = Nur bestimmte Personen dürfen das: - Ehepartner oder Lebenspartner - Eltern, Großeltern, Kinder, Enkel - Geschwister, wenn sie erklären können, warum sie die Urkunde brauchen - Andere Personen mit einem wichtigen Grund - Bestattungsunternehmen, wenn sie von der Familie beauftragt wurden (Eltern, Großeltern, Kinder, Enkel = die Familie;
# sent_id = 27
1	Nur	nur	ADV	ADV	_	2	advmod	_	start_char=3303|end_char=3306
2	bestimmte	bestimmt	ADJ	ADJA	Case=Nom|Degree=Pos|Gender=Fem|Number=Plur	3	amod	_	start_char=3307|end_char=3316
3	Personen	Person	NOUN	NN	Case=Nom|Gender=Fem|Number=Plur	5	nsubj	_	start_char=3317|end_char=3325
4	dürfen	dürfen	AUX	VMFIN	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	5	cop	_	start_char=3326|end_char=3332
5	das	der	PRON	PDS	Case=Acc|Gender=Neut|Number=Sing|PronType=Dem,Rel	0	root	_	start_char=3333|end_char=3336|SpaceAfter=No
6	:	:	PUNCT	$.	_	8	punct	_	start_char=3336|end_char=3337|SpacesAfter=\s\s\s
7	-	-	PUNCT	$(	_	8	punct	_	start_char=3340|end_char=3341
8	Ehepartner	Ehepartner	NOUN	NN	Case=Nom|Gender=Masc|Number=Plur	5	appos	_	start_char=3342|end_char=3352
9	oder	oder	CCONJ	KON	_	12	cc	_	start_char=3353|end_char=3357
10	Lebenspartner	Lebenspartner	NOUN	NN	Case=Nom|Gender=Masc|Number=Plur	12	compound	_	start_char=3358|end_char=3371|SpacesAfter=\s\s\s
11	-	-	PUNCT	$(	_	10	punct	_	start_char=3374|end_char=3375
12	Eltern	Eltern	NOUN	NN	Case=Nom|Number=Plur	8	conj	_	start_char=3376|end_char=3382|SpaceAfter=No
13	,	,	PUNCT	$,	_	14	punct	_	start_char=3382|end_char=3383
14	Großeltern	Großeltern	NOUN	NN	Case=Nom|Gender=Masc|Number=Plur	8	conj	_	start_char=3384|end_char=3394|SpaceAfter=No
15	,	,	PUNCT	$,	_	16	punct	_	start_char=3394|end_char=3395
16	Kinder	Kind	NOUN	NN	Case=Nom|Gender=Neut|Number=Plur	8	conj	_	start_char=3396|end_char=3402|SpaceAfter=No
17	,	,	PUNCT	$,	_	20	punct	_	start_char=3402|end_char=3403
18	Enkel	Enkel	NOUN	NN	Case=Nom|Gender=Masc|Number=Plur	20	compound	_	start_char=3404|end_char=3409|SpacesAfter=\s\s\s
19	-	-	PUNCT	$(	_	18	punct	_	start_char=3412|end_char=3413
20	Geschwister	Geschwister	NOUN	NN	Case=Nom|Gender=Neut|Number=Plur	8	conj	_	start_char=3414|end_char=3425|SpaceAfter=No
21	,	,	PUNCT	$,	_	24	punct	_	start_char=3425|end_char=3426
22	wenn	wenn	SCONJ	KOUS	_	24	mark	_	start_char=3427|end_char=3431
23	sie	sie	PRON	PPER	Case=Nom|Number=Plur|Person=3|PronType=Prs	24	nsubj	_	start_char=3432|end_char=3435
24	erklären	erklären	VERB	VVINF	VerbForm=Inf	8	advcl	_	start_char=3436|end_char=3444
25	können	können	AUX	VMFIN	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	24	aux	_	start_char=3445|end_char=3451|SpaceAfter=No
26	,	,	PUNCT	$,	_	31	punct	_	start_char=3451|end_char=3452
27	warum	warum	ADV	PWAV	PronType=Int	31	advmod	_	start_char=3453|end_char=3458
28	sie	sie	PRON	PPER	Case=Nom|Number=Plur|Person=3|PronType=Prs	31	nsubj	_	start_char=3459|end_char=3462
29	die	der	DET	ART	Case=Acc|Definite=Def|Gender=Fem|Number=Sing|PronType=Art	30	det	_	start_char=3463|end_char=3466
30	Urkunde	Urkunde	NOUN	NN	Case=Acc|Gender=Fem|Number=Sing	31	obj	_	start_char=3467|end_char=3474
31	brauchen	brauchen	VERB	VVFIN	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	24	ccomp	_	start_char=3475|end_char=3483|SpacesAfter=\s\s\s
32	-	-	PUNCT	$(	_	34	punct	_	start_char=3486|end_char=3487
33	Andere	anderer	DET	ADJA	Case=Nom|Gender=Fem|Number=Plur|PronType=Ind	34	det	_	start_char=3488|end_char=3494
34	Personen	Person	NOUN	NN	Case=Nom|Gender=Fem|Number=Plur	8	conj	_	start_char=3495|end_char=3503
35	mit	mit	ADP	APPR	_	40	case	_	start_char=3504|end_char=3507
36	einem	ein	DET	ART	Case=Dat|Definite=Ind|Gender=Masc|NumType=Card|Number=Sing|PronType=Art	40	det	_	start_char=3508|end_char=3513
37	wichtigen	wichtig	ADJ	ADJA	Case=Dat|Degree=Pos|Gender=Masc|Number=Sing	40	amod	_	start_char=3514|end_char=3523
38	Grund	Grund	NOUN	NN	Case=Dat|Gender=Masc|Number=Sing	40	compound	_	start_char=3524|end_char=3529|SpacesAfter=\s\s\s
39	-	-	PUNCT	$(	_	38	punct	_	start_char=3532|end_char=3533
40	Bestattungsunternehmen	Bestattungsunternehmen	NOUN	NN	Case=Dat|Gender=Neut|Number=Sing	34	nmod	_	start_char=3534|end_char=3556|SpaceAfter=No
41	,	,	PUNCT	$,	_	47	punct	_	start_char=3556|end_char=3557
42	wenn	wenn	SCONJ	KOUS	_	47	mark	_	start_char=3558|end_char=3562
43	sie	sie	PRON	PPER	Case=Nom|Number=Plur|Person=3|PronType=Prs	47	nsubj:pass	_	start_char=3563|end_char=3566
44	von	von	ADP	APPR	_	46	case	_	start_char=3567|end_char=3570
45	der	der	DET	ART	Case=Dat|Definite=Def|Gender=Fem|Number=Sing|PronType=Art	46	det	_	start_char=3571|end_char=3574
46	Familie	Familie	NOUN	NN	Case=Dat|Gender=Fem|Number=Sing	47	obl:agent	_	start_char=3575|end_char=3582
47	beauftragt	beauftragen	VERB	VVPP	VerbForm=Part	5	advcl	_	start_char=3583|end_char=3593
48	wurden	werden	AUX	VAFIN	Mood=Ind|Number=Plur|Person=3|Tense=Past|VerbForm=Fin|Voice=Pass	47	aux:pass	_	start_char=3594|end_char=3600|SpacesAfter=\s\s\s
49	(	(	PUNCT	$(	_	50	punct	_	start_char=3603|end_char=3604|SpaceAfter=No
50	Eltern	Eltern	NOUN	NN	Case=Nom|Number=Plur	47	appos	_	start_char=3604|end_char=3610|SpaceAfter=No
51	,	,	PUNCT	$,	_	52	punct	_	start_char=3610|end_char=3611
52	Großeltern	Großeltern	NOUN	NN	Case=Nom|Gender=Masc|Number=Plur	50	conj	_	start_char=3612|end_char=3622|SpaceAfter=No
53	,	,	PUNCT	$,	_	54	punct	_	start_char=3622|end_char=3623
54	Kinder	Kind	NOUN	NN	Case=Nom|Gender=Neut|Number=Plur	50	conj	_	start_char=3624|end_char=3630|SpaceAfter=No
55	,	,	PUNCT	$,	_	56	punct	_	start_char=3630|end_char=3631
56	Enkel	Enkel	NOUN	NN	Case=Nom|Gender=Masc|Number=Plur	50	conj	_	start_char=3632|end_char=3637
57	=	=	SYM	KOKOM	_	59	cc	_	start_char=3638|end_char=3639
58	die	der	DET	ART	Case=Nom|Definite=Def|Gender=Fem|Number=Sing|PronType=Art	59	det	_	start_char=3640|end_char=3643
59	Familie	Familie	NOUN	NN	Case=Nom|Gender=Fem|Number=Sing	50	conj	_	start_char=3644|end_char=3651|SpaceAfter=No
60	;	;	PUNCT	$.	_	5	punct	_	start_char=3651|end_char=3652

# text = Bestattungsunternehmen = Firma, die bei der Beerdigung hilft)
# sent_id = 28
1	Bestattungsunternehmen	Bestattungsunternehmen	NOUN	NN	Case=Nom|Gender=Neut|Number=Plur	0	root	_	start_char=3653|end_char=3675
2	=	=	PUNCT	$(	_	3	punct	_	start_char=3676|end_char=3677
3	Firma	Firma	NOUN	NN	Case=Nom|Gender=Fem|Number=Sing	1	appos	_	start_char=3678|end_char=3683|SpaceAfter=No
4	,	,	PUNCT	$,	_	9	punct	_	start_char=3683|end_char=3684
5	die	der	PRON	PRELS	Case=Nom|Gender=Fem|Number=Sing|PronType=Dem,Rel	9	nsubj	_	start_char=3685|end_char=3688
6	bei	bei	ADP	APPR	_	8	case	_	start_char=3689|end_char=3692
7	der	der	DET	ART	Case=Dat|Definite=Def|Gender=Fem|Number=Sing|PronType=Art	8	det	_	start_char=3693|end_char=3696
8	Beerdigung	Beerdigung	NOUN	NN	Case=Dat|Gender=Fem|Number=Sing	9	obl	_	start_char=3697|end_char=3707
9	hilft	helfen	VERB	VVFIN	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	1	acl	_	start_char=3708|end_char=3713|SpaceAfter=No
10	)	)	PUNCT	$(	_	1	punct	_	start_char=3713|end_char=3714|SpacesAfter=\s\s

# text = Der Antragsteller muss mindestens 16 Jahre alt sein.
# sent_id = 29
1	Der	der	DET	ART	Case=Nom|Definite=Def|Gender=Masc|Number=Sing|PronType=Art	2	det	_	start_char=3716|end_char=3719
2	Antragsteller	Antragsteller	NOUN	NN	Case=Nom|Gender=Masc|Number=Sing	7	nsubj	_	start_char=3720|end_char=3733
3	muss	müssen	AUX	VMFIN	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	7	aux	_	start_char=3734|end_char=3738
4	mindestens	mindestens	ADV	ADV	_	5	advmod	_	start_char=3739|end_char=3749
5	16	16	NUM	CARD	NumType=Card	6	nummod	_	start_char=3750|end_char=3752
6	Jahre	Jahr	NOUN	NN	Case=Acc|Gender=Neut|Number=Plur	7	nmod	_	start_char=3753|end_char=3758
7	alt	alt	ADJ	ADJD	Degree=Pos	0	root	_	start_char=3759|end_char=3762
8	sein	sein	AUX	VAINF	VerbForm=Inf	7	cop	_	start_char=3763|end_char=3767|SpaceAfter=No
9	.	.	PUNCT	$.	_	7	punct	_	start_char=3767|end_char=3768|SpacesAfter=\s\s

# text = **Welche Papiere braucht man?**
# sent_id = 30
1	**	**	PUNCT	$(	_	2	punct	_	start_char=3770|end_char=3772|SpaceAfter=No
2	Welche	welcher	DET	PWAT	Case=Acc|Gender=Neut|Number=Plur|PronType=Int,Rel	3	det	_	start_char=3772|end_char=3778
3	Papiere	Papier	NOUN	NN	Case=Acc|Gender=Neut|Number=Plur	4	obj	_	start_char=3779|end_char=3786
4	braucht	brauchen	VERB	VVFIN	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	start_char=3787|end_char=3794
5	man	man	PRON	PIS	Case=Nom|Number=Sing|PronType=Ind	4	nsubj	_	start_char=3795|end_char=3798|SpaceAfter=No
6	?	?	PUNCT	$.	_	4	punct	_	start_char=3798|end_char=3799|SpaceAfter=No
7	*	*	PUNCT	$(	_	4	punct	_	start_char=3799|end_char=3800|SpaceAfter=No
8	*	*	PUNCT	$(	_	4	punct	_	start_char=3800|end_char=3801|SpacesAfter=\s\s\s

# text = Man braucht einen Personalausweis oder einen anderen Ausweis.
# sent_id = 31
1	Man	man	PRON	PIS	Case=Nom|Number=Sing|PronType=Ind	2	nsubj	_	start_char=3804|end_char=3807
2	braucht	brauchen	VERB	VVFIN	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	start_char=3808|end_char=3815
3	einen	ein	DET	ART	Case=Acc|Definite=Ind|Gender=Masc|NumType=Card|Number=Sing|PronType=Art	4	det	_	start_char=3816|end_char=3821
4	Personalausweis	Personalausweis	NOUN	NN	Case=Acc|Gender=Masc|Number=Sing	2	obj	_	start_char=3822|end_char=3837
5	oder	oder	CCONJ	KON	_	8	cc	_	start_char=3838|end_char=3842
6	einen	ein	DET	ART	Case=Acc|Definite=Ind|Gender=Masc|NumType=Card|Number=Sing|PronType=Art	8	det	_	start_char=3843|end_char=3848
7	anderen	anderer	DET	ADJA	Case=Acc|Gender=Masc|Number=Sing|PronType=Ind	8	det	_	start_char=3849|end_char=3856
8	Ausweis	Ausweis	NOUN	NN	Case=Acc|Gender=Masc|Number=Sing	4	conj	_	start_char=3857|end_char=3864|SpaceAfter=No
9	.	.	PUNCT	$.	_	2	punct	_	start_char=3864|end_char=3865|SpacesAfter=\s\s\s

# text = (Personalausweis = offizieller Ausweis mit Foto und Daten) **Wie viel kostet es?** - 15 Euro für die erste Sterbeurkunde - 7,50 Euro für jede weitere, wenn man sie gleich mitbestellt **Wann kann man eine Sterbeurkunde beantragen?**
# sent_id = 32
1	(	(	PUNCT	$(	_	2	punct	_	start_char=3868|end_char=3869|SpaceAfter=No
2	Personalausweis	Personalausweis	NOUN	NN	Case=Nom|Gender=Masc|Number=Sing	0	root	_	start_char=3869|end_char=3884
3	=	=	PUNCT	$(	_	5	punct	_	start_char=3885|end_char=3886
4	offizieller	offiziell	ADJ	ADJA	Case=Nom|Degree=Pos|Gender=Masc|Number=Sing	5	amod	_	start_char=3887|end_char=3898
5	Ausweis	Ausweis	NOUN	NN	Case=Nom|Gender=Masc|Number=Sing	2	appos	_	start_char=3899|end_char=3906
6	mit	mit	ADP	APPR	_	7	case	_	start_char=3907|end_char=3910
7	Foto	Foto	NOUN	NN	Case=Dat|Gender=Neut|Number=Sing	5	nmod	_	start_char=3911|end_char=3915
8	und	und	CCONJ	KON	_	9	cc	_	start_char=3916|end_char=3919
9	Daten	Datum	NOUN	NN	Case=Dat|Gender=Neut|Number=Plur	7	conj	_	start_char=3920|end_char=3925|SpaceAfter=No
10	)	)	PUNCT	$(	_	5	punct	_	start_char=3925|end_char=3926|SpacesAfter=\s\s
11	**	**	PUNCT	$(	_	14	punct	_	start_char=3928|end_char=3930|SpaceAfter=No
12	Wie	wie	ADV	PWAV	PronType=Int	14	advmod	_	start_char=3930|end_char=3933
13	viel	viel	DET	PIS	PronType=Ind	14	nsubj	_	start_char=3934|end_char=3938
14	kostet	kosten	VERB	VVFIN	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	parataxis	_	start_char=3939|end_char=3945
15	es	es	PRON	PPER	Case=Nom|Gender=Neut|Number=Sing|Person=3|PronType=Prs	14	nsubj	_	start_char=3946|end_char=3948|SpaceAfter=No
16	?	?	PUNCT	$.	_	14	punct	_	start_char=3948|end_char=3949|SpaceAfter=No
17	**	**	PUNCT	$(	_	20	punct	_	start_char=3949|end_char=3951|SpacesAfter=\s\s\s
18	-	-	PUNCT	$(	_	20	punct	_	start_char=3954|end_char=3955
19	15	15	NUM	CARD	NumType=Card	20	nummod	_	start_char=3956|end_char=3958
20	Euro	Euro	PROPN	NN	Case=Nom|Gender=Neut|Number=Plur	14	nsubj	_	start_char=3959|end_char=3963
21	für	für	ADP	APPR	_	24	case	_	start_char=3964|end_char=3967
22	die	der	DET	ART	Case=Acc|Definite=Def|Gender=Fem|Number=Sing|PronType=Art	24	det	_	start_char=3968|end_char=3971
23	erste	erst	ADJ	ADJA	Case=Acc|Degree=Pos|Gender=Fem|NumType=Ord|Number=Sing	24	amod	_	start_char=3972|end_char=3977
24	Sterbeurkunde	Sterbeurkunde	NOUN	NN	Case=Acc|Gender=Fem|Number=Sing	20	nmod	_	start_char=3978|end_char=3991|SpacesAfter=\s\s\s
25	-	-	PUNCT	$(	_	27	punct	_	start_char=3994|end_char=3995
26	7,50	7,50	NUM	CARD	NumType=Card	27	nummod	_	start_char=3996|end_char=4000
27	Euro	Euro	PROPN	NN	Case=Nom|Gender=Masc|Number=Plur	20	conj	_	start_char=4001|end_char=4005
28	für	für	ADP	APPR	_	30	case	_	start_char=4006|end_char=4009
29	jede	jeder	DET	PIAT	Case=Acc|Gender=Fem|Number=Sing|PronType=Tot	30	det	_	start_char=4010|end_char=4014
30	weitere	weit	ADJ	ADJA	Case=Acc|Degree=Cmp|Gender=Fem|Number=Sing	27	nmod	_	start_char=4015|end_char=4022|SpaceAfter=No
31	,	,	PUNCT	$,	_	36	punct	_	start_char=4022|end_char=4023
32	wenn	wenn	SCONJ	KOUS	_	36	mark	_	start_char=4024|end_char=4028
33	man	man	PRON	PIS	Case=Nom|Number=Sing|PronType=Ind	36	nsubj	_	start_char=4029|end_char=4032
34	sie	sie	PRON	PPER	Case=Acc|Number=Plur|Person=3|PronType=Prs	36	obj	_	start_char=4033|end_char=4036
35	gleich	gleich	ADV	ADV	_	36	advmod	_	start_char=4037|end_char=4043
36	mitbestellt	mitbestellen	VERB	VVPP	VerbForm=Part	30	advcl	_	start_char=4044|end_char=4055|SpacesAfter=\s\s
37	**	**	PUNCT	$(	_	43	punct	_	start_char=4057|end_char=4059|SpaceAfter=No
38	Wann	wann	ADV	ADV	_	43	advmod	_	start_char=4059|end_char=4063
39	kann	können	AUX	VMFIN	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	43	aux	_	start_char=4064|end_char=4068
40	man	man	PRON	PIS	Case=Nom|Number=Sing|PronType=Ind	43	nsubj	_	start_char=4069|end_char=4072
41	eine	ein	DET	ART	Case=Acc|Definite=Ind|Gender=Fem|NumType=Card|Number=Sing|PronType=Art	42	det	_	start_char=4073|end_char=4077
42	Sterbeurkunde	Sterbeurkunde	NOUN	NN	Case=Acc|Gender=Fem|Number=Sing	43	obj	_	start_char=4078|end_char=4091
43	beantragen	beantragen	VERB	VVINF	VerbForm=Inf	36	conj	_	start_char=4092|end_char=4102|SpaceAfter=No
44	?	?	PUNCT	$.	_	43	punct	_	start_char=4102|end_char=4103|SpaceAfter=No
45	*	*	PUNCT	$(	_	43	punct	_	start_char=4103|end_char=4104|SpaceAfter=No
46	*	*	PUNCT	$(	_	2	punct	_	start_char=4104|end_char=4105|SpacesAfter=\s\s\s

# text = Man kann sie nur beantragen, wenn der Tod noch nicht länger als 30 Jahre her ist.
# sent_id = 33
1	Man	man	PRON	PIS	Case=Nom|Number=Sing|PronType=Ind	5	nsubj	_	start_char=4108|end_char=4111
2	kann	können	AUX	VMFIN	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	start_char=4112|end_char=4116
3	sie	sie	PRON	PPER	Case=Acc|Number=Plur|Person=3|PronType=Prs	5	obj	_	start_char=4117|end_char=4120
4	nur	nur	ADV	ADV	_	5	advmod	_	start_char=4121|end_char=4124
5	beantragen	beantragen	VERB	VVINF	VerbForm=Inf	0	root	_	start_char=4125|end_char=4135|SpaceAfter=No
6	,	,	PUNCT	$,	_	17	punct	_	start_char=4135|end_char=4136
7	wenn	wenn	SCONJ	KOUS	_	12	mark	_	start_char=4137|end_char=4141
8	der	der	DET	ART	Case=Nom|Definite=Def|Gender=Masc|Number=Sing|PronType=Art	9	det	_	start_char=4142|end_char=4145
9	Tod	Tod	NOUN	NN	Case=Nom|Gender=Masc|Number=Sing	17	nsubj	_	start_char=4146|end_char=4149
10	noch	noch	ADV	ADV	_	11	advmod	_	start_char=4150|end_char=4154
11	nicht	nicht	PART	PTKNEG	Polarity=Neg	12	advmod	_	start_char=4155|end_char=4160
12	länger	lang	ADJ	ADJD	Degree=Cmp	5	advcl	_	start_char=4161|end_char=4167
13	als	als	ADP	KOKOM	_	15	case	_	start_char=4168|end_char=4171
14	30	30	NUM	CARD	NumType=Card	15	nummod	_	start_char=4172|end_char=4174
15	Jahre	Jahr	NOUN	NN	Case=Acc|Gender=Neut|Number=Plur	12	nmod	_	start_char=4175|end_char=4180
16	her	her	ADV	ADV	_	12	mark	_	start_char=4181|end_char=4184
17	ist	sein	AUX	VAFIN	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	12	cop	_	start_char=4185|end_char=4188|SpaceAfter=No
18	.	.	PUNCT	$.	_	5	punct	_	start_char=4188|end_char=4189|SpacesAfter=\s\s

# text = **Wie lange dauert es?**
# sent_id = 34
1	**	**	PUNCT	$(	_	4	punct	_	start_char=4191|end_char=4193|SpaceAfter=No
2	Wie	wie	ADV	PWAV	PronType=Int	3	advmod	_	start_char=4193|end_char=4196
3	lange	lange	ADV	ADV	_	4	advmod	_	start_char=4197|end_char=4202
4	dauert	dauern	VERB	VVFIN	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	start_char=4203|end_char=4209
5	es	es	PRON	PPER	Case=Nom|Gender=Neut|Number=Sing|Person=3|PronType=Prs	4	nsubj	_	start_char=4210|end_char=4212|SpaceAfter=No
6	?	?	PUNCT	$.	_	4	punct	_	start_char=4212|end_char=4213|SpaceAfter=No
7	*	*	X	XY	_	4	dep	_	start_char=4213|end_char=4214|SpaceAfter=No
8	*	*	PUNCT	$(	_	4	punct	_	start_char=4214|end_char=4215|SpacesAfter=\s\s\s

# text = Im Durchschnitt braucht das Standesamt 2 Wochen.
# sent_id = 35
1-2	Im	_	_	_	_	_	_	_	start_char=4218|end_char=4220
1	In	in	ADP	APPR	_	3	case	_	_
2	dem	der	DET	ART	Case=Dat|Definite=Def|Gender=Masc|Number=Sing|PronType=Art	3	det	_	_
3	Durchschnitt	Durchschnitt	NOUN	NN	Case=Dat|Gender=Masc|Number=Sing	4	obl	_	start_char=4221|end_char=4233
4	braucht	brauchen	VERB	VVFIN	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	start_char=4234|end_char=4241
5	das	der	DET	ART	Case=Nom|Definite=Def|Gender=Neut|Number=Sing|PronType=Art	6	det	_	start_char=4242|end_char=4245
6	Standesamt	Standesamt	NOUN	NN	Case=Nom|Gender=Neut|Number=Sing	4	nsubj	_	start_char=4246|end_char=4256
7	2	2	NUM	CARD	NumType=Card	8	nummod	_	start_char=4257|end_char=4258
8	Wochen	Woche	NOUN	NN	Case=Acc|Gender=Fem|Number=Plur	4	obj	_	start_char=4259|end_char=4265|SpaceAfter=No
9	.	.	PUNCT	$.	_	4	punct	_	start_char=4265|end_char=4266|SpacesAfter=\s\s\s

# text = Die Post braucht manchmal auch bis zu 2 Wochen.
# sent_id = 36
1	Die	der	DET	ART	Case=Nom|Definite=Def|Gender=Fem|Number=Sing|PronType=Art	2	det	_	start_char=4269|end_char=4272
2	Post	Post	NOUN	NN	Case=Nom|Gender=Fem|Number=Sing	3	nsubj	_	start_char=4273|end_char=4277
3	braucht	brauchen	VERB	VVFIN	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	start_char=4278|end_char=4285
4	manchmal	manchmal	ADV	ADV	_	3	advmod	_	start_char=4286|end_char=4294
5	auch	auch	ADV	ADV	_	3	advmod	_	start_char=4295|end_char=4299
6	bis	bis	ADP	ADV	_	9	case	_	start_char=4300|end_char=4303
7	zu	zu	ADP	ADV	_	9	case	_	start_char=4304|end_char=4306
8	2	2	NUM	CARD	NumType=Card	9	nummod	_	start_char=4307|end_char=4308
9	Wochen	Woche	NOUN	NN	Case=Acc|Gender=Fem|Number=Plur	3	obl	_	start_char=4309|end_char=4315|SpaceAfter=No
10	.	.	PUNCT	$.	_	3	punct	_	start_char=4315|end_char=4316|SpacesAfter=\s\s\s

# text = Bitte haben Sie Verständnis dafür.
# sent_id = 37
1	Bitte	bitten	ADV	ADV	_	2	advmod	_	start_char=4319|end_char=4324
2	haben	haben	VERB	VAFIN	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	start_char=4325|end_char=4330
3	Sie	sie	PRON	PPER	Case=Nom|Number=Plur|Person=2|Polite=Form|PronType=Prs	2	nsubj	_	start_char=4331|end_char=4334
4	Verständnis	Verständnis	NOUN	NN	Case=Acc|Gender=Neut|Number=Sing	2	obj	_	start_char=4335|end_char=4346
5	dafür	dafür	ADV	PAV	PronType=Dem	2	advmod	_	start_char=4347|end_char=4352|SpaceAfter=No
6	.	.	PUNCT	$.	_	2	punct	_	start_char=4352|end_char=4353|SpacesAfter=\s\s\s

# text = In dieser Zeit bitten wir, keine Rückfragen zu stellen.
# sent_id = 38
1	In	in	ADP	APPR	_	3	case	_	start_char=4356|end_char=4358
2	dieser	dieser	DET	PDAT	Case=Dat|Gender=Fem|Number=Sing|PronType=Dem	3	det	_	start_char=4359|end_char=4365
3	Zeit	Zeit	NOUN	NN	Case=Dat|Gender=Fem|Number=Sing	4	obl	_	start_char=4366|end_char=4370
4	bitten	bitten	VERB	VVFIN	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	0	root	_	start_char=4371|end_char=4377
5	wir	wir	PRON	PPER	Case=Nom|Number=Plur|Person=1|PronType=Prs	4	nsubj	_	start_char=4378|end_char=4381|SpaceAfter=No
6	,	,	PUNCT	$,	_	10	punct	_	start_char=4381|end_char=4382
7	keine	kein	DET	PIAT	Case=Acc|Gender=Fem|Number=Plur|PronType=Neg	8	det	_	start_char=4383|end_char=4388
8	Rückfragen	Rückfrage	NOUN	NN	Case=Acc|Gender=Fem|Number=Plur	10	obj	_	start_char=4389|end_char=4399
9	zu	zu	PART	PTKZU	_	10	mark	_	start_char=4400|end_char=4402
10	stellen	stellen	VERB	VVINF	VerbForm=Inf	4	xcomp	_	start_char=4403|end_char=4410|SpaceAfter=No
11	.	.	PUNCT	$.	_	4	punct	_	start_char=4410|end_char=4411|SpacesAfter=\s\s\s

# text = (Rückfrage = eine Frage, um etwas zu klären)
# sent_id = 39
1	(	(	PUNCT	$(	_	2	punct	_	start_char=4414|end_char=4415|SpaceAfter=No
2	Rückfrage	Rückfrage	NOUN	NN	Case=Nom|Gender=Fem|Number=Sing	0	root	_	start_char=4415|end_char=4424
3	=	=	PUNCT	$(	_	5	punct	_	start_char=4425|end_char=4426
4	eine	ein	DET	ART	Case=Nom|Definite=Ind|Gender=Fem|NumType=Card|Number=Sing|PronType=Art	5	det	_	start_char=4427|end_char=4431
5	Frage	Frage	NOUN	NN	Case=Nom|Gender=Fem|Number=Sing	2	parataxis	_	start_char=4432|end_char=4437|SpaceAfter=No
6	,	,	PUNCT	$,	_	10	punct	_	start_char=4437|end_char=4438
7	um	um	ADP	KOUI	_	10	mark	_	start_char=4439|end_char=4441
8	etwas	etwas	PRON	PIS	Gender=Neut|Number=Sing|PronType=Ind	10	obj	_	start_char=4442|end_char=4447
9	zu	zu	PART	PTKZU	_	10	mark	_	start_char=4448|end_char=4450
10	klären	klären	VERB	VVINF	VerbForm=Inf	2	advcl	_	start_char=4451|end_char=4457|SpaceAfter=No
11	)	)	PUNCT	$(	_	2	punct	_	start_char=4457|end_char=4458|SpacesAfter=\s\s

# text = Bei Anfragen zur Ahnenforschung kann es länger dauern.
# sent_id = 40
1	Bei	bei	ADP	APPR	_	2	case	_	start_char=4460|end_char=4463
2	Anfragen	Anfrage	NOUN	NN	Case=Dat|Gender=Fem|Number=Plur	9	obl	_	start_char=4464|end_char=4472
3-4	zur	_	_	_	_	_	_	_	start_char=4473|end_char=4476
3	zu	zu	ADP	APPR	_	5	case	_	_
4	der	der	DET	ART	Case=Dat|Definite=Def|Gender=Fem|Number=Sing|PronType=Art	5	det	_	_
5	Ahnenforschung	Ahnenforschung	NOUN	NN	Case=Dat|Gender=Fem|Number=Sing	2	nmod	_	start_char=4477|end_char=4491
6	kann	können	AUX	VMFIN	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	9	aux	_	start_char=4492|end_char=4496
7	es	es	PRON	PPER	Case=Nom|Gender=Neut|Number=Sing|Person=3|PronType=Prs	9	nsubj	_	start_char=4497|end_char=4499
8	länger	lang	ADJ	ADJD	Degree=Cmp	9	advmod	_	start_char=4500|end_char=4506
9	dauern	dauern	VERB	VVINF	VerbForm=Inf	0	root	_	start_char=4507|end_char=4513|SpaceAfter=No
10	.	.	PUNCT	$.	_	9	punct	_	start_char=4513|end_char=4514|SpacesAfter=\s\s\s

# text = Ahnenforschung = herausfinden, wer die Vorfahren waren Manchmal bis zu 3 oder 4 Wochen.
# sent_id = 41
1	Ahnenforschung	Ahnenforschung	NOUN	NN	Case=Nom|Gender=Fem|Number=Sing	3	dep	_	start_char=4517|end_char=4531
2	=	=	PUNCT	$(	_	3	punct	_	start_char=4532|end_char=4533
3	herausfinden	herausfinden	VERB	VVINF	VerbForm=Inf	0	root	_	start_char=4534|end_char=4546|SpaceAfter=No
4	,	,	PUNCT	$,	_	7	punct	_	start_char=4546|end_char=4547
5	wer	wer	PRON	PWS	Case=Nom|Number=Sing|PronType=Int,Rel	7	nsubj	_	start_char=4548|end_char=4551
6	die	der	DET	ART	Case=Nom|Definite=Def|Number=Plur|PronType=Art	7	det	_	start_char=4552|end_char=4555
7	Vorfahren	Vorfahr|Vorfahren	NOUN	NN	Case=Nom|Gender=Neut|Number=Plur	3	ccomp	_	start_char=4556|end_char=4565
8	waren	sein	AUX	VAFIN	Mood=Ind|Number=Plur|Person=3|Tense=Past|VerbForm=Fin	7	cop	_	start_char=4566|end_char=4571|SpacesAfter=\s\s\s
9	Manchmal	manchmal	ADV	ADV	_	15	advmod	_	start_char=4574|end_char=4582
10	bis	bis	ADP	ADV	_	15	case	_	start_char=4583|end_char=4586
11	zu	zu	ADP	ADV	_	15	case	_	start_char=4587|end_char=4589
12	3	3	NUM	CARD	NumType=Card	15	nummod	_	start_char=4590|end_char=4591
13	oder	oder	CCONJ	KON	_	14	cc	_	start_char=4592|end_char=4596
14	4	4	NUM	CARD	NumType=Card	12	conj	_	start_char=4597|end_char=4598
15	Wochen	Woche	NOUN	NN	Case=Acc|Gender=Fem|Number=Plur	7	nmod	_	start_char=4599|end_char=4605|SpaceAfter=No
16	.	.	PUNCT	$.	_	3	punct	_	start_char=4605|end_char=4606|SpacesAfter=\s\s\s

# text = Auch dafür bitten wir um Verständnis.
# sent_id = 42
1	Auch	auch	ADV	ADV	_	2	advmod	_	start_char=4609|end_char=4613
2	dafür	dafür	ADV	PAV	PronType=Dem	3	advmod	_	start_char=4614|end_char=4619
3	bitten	bitten	VERB	VVFIN	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	0	root	_	start_char=4620|end_char=4626
4	wir	wir	PRON	PPER	Case=Nom|Number=Plur|Person=1|PronType=Prs	3	nsubj	_	start_char=4627|end_char=4630
5	um	um	ADP	APPR	_	6	case	_	start_char=4631|end_char=4633
6	Verständnis	Verständnis	NOUN	NN	Case=Acc|Gender=Neut|Number=Sing	3	obl	_	start_char=4634|end_char=4645|SpaceAfter=No
7	.	.	PUNCT	$.	_	3	punct	_	start_char=4645|end_char=4646|SpacesAfter=\s\s

# text = **Welche Gesetze gelten?**
# sent_id = 43
1	**	**	PUNCT	$(	_	2	punct	_	start_char=4648|end_char=4650|SpaceAfter=No
2	Welche	welcher	DET	PWAT	Case=Nom|Gender=Neut|Number=Plur|PronType=Int,Rel	3	det	_	start_char=4650|end_char=4656
3	Gesetze	Gesetz	NOUN	NN	Case=Nom|Gender=Neut|Number=Plur	4	nsubj	_	start_char=4657|end_char=4664
4	gelten	gelten	VERB	VVINF	Number=Plur|VerbForm=Inf	0	root	_	start_char=4665|end_char=4671|SpaceAfter=No
5	?	?	PUNCT	$.	_	4	punct	_	start_char=4671|end_char=4672|SpaceAfter=No
6	*	*	SYM	$(	_	4	punct	_	start_char=4672|end_char=4673|SpaceAfter=No
7	*	*	PUNCT	$(	_	4	punct	_	start_char=4673|end_char=4674|SpacesAfter=\s\s\s

# text = Es gelten bestimmte Gesetze.
# sent_id = 44
1	Es	es	PRON	PPER	Gender=Neut|Number=Sing|Person=3|PronType=Prs	2	expl	_	start_char=4677|end_char=4679
2	gelten	gelten	VERB	VVFIN	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	start_char=4680|end_char=4686
3	bestimmte	bestimmt	ADJ	ADJA	Case=Nom|Degree=Pos|Gender=Neut|Number=Plur	4	amod	_	start_char=4687|end_char=4696
4	Gesetze	Gesetz	NOUN	NN	Case=Nom|Gender=Neut|Number=Plur	2	nsubj	_	start_char=4697|end_char=4704|SpaceAfter=No
5	.	.	PUNCT	$.	_	2	punct	_	start_char=4704|end_char=4705|SpacesAfter=\s\s\s

# text = Gesetz = eine Regel, die vom Staat festgelegt wird - § 55 Personenstandsgesetz (PStG) - § 60 Personenstandsgesetz (PStG) - § 62 Personenstandsgesetz (PStG) **Was tun, wenn der Antrag abgelehnt wird?**
# sent_id = 45
1	Gesetz	Gesetz	NOUN	NN	Case=Nom|Gender=Neut|Number=Sing	0	root	_	start_char=4708|end_char=4714
2	=	=	PUNCT	$(	_	4	punct	_	start_char=4715|end_char=4716
3	eine	ein	DET	ART	Case=Nom|Definite=Ind|Gender=Fem|NumType=Card|Number=Sing|PronType=Art	4	det	_	start_char=4717|end_char=4721
4	Regel	Regel	NOUN	NN	Case=Nom|Gender=Fem|Number=Sing	1	appos	_	start_char=4722|end_char=4727|SpaceAfter=No
5	,	,	PUNCT	$,	_	10	punct	_	start_char=4727|end_char=4728
6	die	der	PRON	PRELS	Case=Nom|Gender=Fem|Number=Sing|PronType=Dem,Rel	10	nsubj:pass	_	start_char=4729|end_char=4732
7-8	vom	_	_	_	_	_	_	_	start_char=4733|end_char=4736
7	von	von	ADP	APPR	_	9	case	_	_
8	dem	der	DET	ART	Case=Dat|Definite=Def|Gender=Masc|Number=Sing|PronType=Art	9	det	_	_
9	Staat	Staat	NOUN	NN	Case=Dat|Gender=Masc|Number=Sing	10	obl:agent	_	start_char=4737|end_char=4742
10	festgelegt	festlegen	VERB	VVPP	VerbForm=Part	4	acl	_	start_char=4743|end_char=4753
11	wird	werden	AUX	VAFIN	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin|Voice=Pass	10	aux:pass	_	start_char=4754|end_char=4758|SpacesAfter=\s\s\s
12	-	-	PUNCT	$(	_	10	punct	_	start_char=4761|end_char=4762
13	§	§	NOUN	NN	Case=Nom|Gender=Masc|Number=Sing	15	compound	_	start_char=4763|end_char=4764
14	55	55	NUM	CARD	NumType=Card	13	appos	_	start_char=4765|end_char=4767
15	Personenstandsgesetz	Personenstandsgesetz	NOUN	NN	Case=Nom|Gender=Neut|Number=Plur	1	appos	_	start_char=4768|end_char=4788
16	(	(	PUNCT	$(	_	17	punct	_	start_char=4789|end_char=4790|SpaceAfter=No
17	PStG	PStG	PROPN	NE	Case=Nom|Gender=Fem|Number=Sing	15	appos	_	start_char=4790|end_char=4794|SpaceAfter=No
18	)	)	PUNCT	$(	_	17	punct	_	start_char=4794|end_char=4795|SpacesAfter=\s\s\s
19	-	-	PUNCT	$(	_	20	punct	_	start_char=4798|end_char=4799
20	§	§	NOUN	NN	Case=Nom|Gender=Masc|Number=Sing	15	conj	_	start_char=4800|end_char=4801
21	60	60	NUM	CARD	NumType=Card	20	appos	_	start_char=4802|end_char=4804
22	Personenstandsgesetz	Personenstandsgesetz	PROPN	NN	Case=Nom|Gender=Neut|Number=Sing	15	appos	_	start_char=4805|end_char=4825
23	(	(	PUNCT	$(	_	24	punct	_	start_char=4826|end_char=4827|SpaceAfter=No
24	PStG	PStG	PROPN	NE	Case=Nom|Gender=Fem|Number=Sing	22	appos	_	start_char=4827|end_char=4831|SpaceAfter=No
25	)	)	PUNCT	$(	_	24	punct	_	start_char=4831|end_char=4832|SpacesAfter=\s\s\s
26	-	-	PUNCT	$(	_	27	punct	_	start_char=4835|end_char=4836
27	§	§	NOUN	NN	Case=Nom|Gender=Masc|Number=Sing	22	appos	_	start_char=4837|end_char=4838
28	62	62	NUM	CARD	NumType=Card	27	appos	_	start_char=4839|end_char=4841
29	Personenstandsgesetz	Personenstandsgesetz	PROPN	NN	Case=Nom|Gender=Neut|Number=Sing	27	appos	_	start_char=4842|end_char=4862
30	(	(	PUNCT	$(	_	31	punct	_	start_char=4863|end_char=4864|SpaceAfter=No
31	PStG	PStG	PROPN	NE	Case=Nom|Gender=Fem|Number=Sing	29	appos	_	start_char=4864|end_char=4868|SpaceAfter=No
32	)	)	PUNCT	$(	_	31	punct	_	start_char=4868|end_char=4869|SpacesAfter=\s\s
33	**	**	PUNCT	$(	_	35	punct	_	start_char=4871|end_char=4873|SpaceAfter=No
34	Was	was	PRON	PWS	Case=Acc|Gender=Neut|Number=Sing|PronType=Int,Rel	35	nsubj	_	start_char=4873|end_char=4876
35	tun	tun	VERB	VVINF	VerbForm=Inf	4	parataxis	_	start_char=4877|end_char=4880|SpaceAfter=No
36	,	,	PUNCT	$,	_	40	punct	_	start_char=4880|end_char=4881
37	wenn	wenn	SCONJ	KOUS	_	40	mark	_	start_char=4882|end_char=4886
38	der	der	DET	ART	Case=Nom|Definite=Def|Gender=Masc|Number=Sing|PronType=Art	39	det	_	start_char=4887|end_char=4890
39	Antrag	Antrag	NOUN	NN	Case=Nom|Gender=Masc|Number=Sing	40	nsubj:pass	_	start_char=4891|end_char=4897
40	abgelehnt	ablehnen	VERB	VVPP	VerbForm=Part	35	advcl	_	start_char=4898|end_char=4907
41	wird	werden	AUX	VAFIN	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin|Voice=Pass	40	aux:pass	_	start_char=4908|end_char=4912|SpaceAfter=No
42	?	?	PUNCT	$.	_	4	punct	_	start_char=4912|end_char=4913|SpaceAfter=No
43	*	*	SYM	$(	_	40	punct	_	start_char=4913|end_char=4914|SpaceAfter=No
44	*	*	PUNCT	$(	_	4	punct	_	start_char=4914|end_char=4915|SpacesAfter=\s\s\s

# text = Wenn das Standesamt den Antrag ablehnt, kann man vor Gericht gehen.
# sent_id = 46
1	Wenn	wenn	SCONJ	KOUS	_	6	mark	_	start_char=4918|end_char=4922
2	das	der	DET	ART	Case=Nom|Definite=Def|Gender=Neut|Number=Sing|PronType=Art	3	det	_	start_char=4923|end_char=4926
3	Standesamt	Standesamt	NOUN	NN	Case=Nom|Gender=Neut|Number=Sing	6	nsubj	_	start_char=4927|end_char=4937
4	den	der	DET	ART	Case=Acc|Definite=Def|Gender=Masc|Number=Sing|PronType=Art	5	det	_	start_char=4938|end_char=4941
5	Antrag	Antrag	NOUN	NN	Case=Acc|Gender=Masc|Number=Sing	6	obj	_	start_char=4942|end_char=4948
6	ablehnt	ablehnen	VERB	VVFIN	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	12	advcl	_	start_char=4949|end_char=4956|SpaceAfter=No
7	,	,	PUNCT	$,	_	6	punct	_	start_char=4956|end_char=4957
8	kann	können	AUX	VMFIN	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	12	aux	_	start_char=4958|end_char=4962
9	man	man	PRON	PIS	Case=Nom|Number=Sing|PronType=Ind	12	nsubj	_	start_char=4963|end_char=4966
10	vor	vor	ADP	APPR	_	11	case	_	start_char=4967|end_char=4970
11	Gericht	Gericht	NOUN	NN	Case=Dat|Gender=Neut|Number=Sing	12	obl	_	start_char=4971|end_char=4978
12	gehen	gehen	VERB	VVINF	VerbForm=Inf	0	root	_	start_char=4979|end_char=4984|SpaceAfter=No
13	.	.	PUNCT	$.	_	12	punct	_	start_char=4984|end_char=4985|SpacesAfter=\s\s\s

# text = (Gericht = eine Stelle, die bei Streitfragen entscheidet)
# sent_id = 47
1	(	(	PUNCT	$(	_	2	punct	_	start_char=4988|end_char=4989|SpaceAfter=No
2	Gericht	Gericht	NOUN	NN	Case=Nom|Gender=Neut|Number=Sing	0	root	_	start_char=4989|end_char=4996
3	=	=	PUNCT	$(	_	5	punct	_	start_char=4997|end_char=4998
4	eine	ein	DET	ART	Case=Nom|Definite=Ind|Gender=Fem|NumType=Card|Number=Sing|PronType=Art	5	det	_	start_char=4999|end_char=5003
5	Stelle	Stelle	NOUN	NN	Case=Nom|Gender=Fem|Number=Sing	2	appos	_	start_char=5004|end_char=5010|SpaceAfter=No
6	,	,	PUNCT	$,	_	10	punct	_	start_char=5010|end_char=5011
7	die	der	PRON	PRELS	Case=Nom|Gender=Fem|Number=Sing|PronType=Dem,Rel	10	nsubj	_	start_char=5012|end_char=5015
8	bei	bei	ADP	APPR	_	9	case	_	start_char=5016|end_char=5019
9	Streitfragen	Streitfrage	NOUN	NN	Case=Dat|Gender=Fem|Number=Plur	10	obl	_	start_char=5020|end_char=5032
10	entscheidet	entscheiden	VERB	VVFIN	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	acl	_	start_char=5033|end_char=5044|SpaceAfter=No
11	)	)	PUNCT	$(	_	2	punct	_	start_char=5044|end_char=5045|SpacesAfter=\s\s\s

# text = Dort kann man einen Antrag stellen, dass das Standesamt die Sterbeurkunde ausstellen muss.
# sent_id = 48
1	Dort	dort	ADV	ADV	_	6	advmod	_	start_char=5048|end_char=5052
2	kann	können	AUX	VMFIN	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	6	aux	_	start_char=5053|end_char=5057
3	man	man	PRON	PIS	Case=Nom|Number=Sing|PronType=Ind	6	nsubj	_	start_char=5058|end_char=5061
4	einen	ein	DET	ART	Case=Acc|Definite=Ind|Gender=Masc|NumType=Card|Number=Sing|PronType=Art	5	det	_	start_char=5062|end_char=5067
5	Antrag	Antrag	NOUN	NN	Case=Acc|Gender=Masc|Number=Sing	6	obj	_	start_char=5068|end_char=5074
6	stellen	stellen	VERB	VVINF	VerbForm=Inf	0	root	_	start_char=5075|end_char=5082|SpaceAfter=No
7	,	,	PUNCT	$,	_	13	punct	_	start_char=5082|end_char=5083
8	dass	dass	SCONJ	KOUS	_	13	mark	_	start_char=5084|end_char=5088
9	das	der	DET	ART	Case=Nom|Definite=Def|Gender=Neut|Number=Sing|PronType=Art	10	det	_	start_char=5089|end_char=5092
10	Standesamt	Standesamt	NOUN	NN	Case=Nom|Gender=Neut|Number=Sing	13	nsubj	_	start_char=5093|end_char=5103
11	die	der	DET	ART	Case=Acc|Definite=Def|Gender=Fem|Number=Sing|PronType=Art	12	det	_	start_char=5104|end_char=5107
12	Sterbeurkunde	Sterbeurkunde	NOUN	NN	Case=Acc|Gender=Fem|Number=Sing	13	obj	_	start_char=5108|end_char=5121
13	ausstellen	ausstellen	VERB	VVINF	VerbForm=Inf	5	ccomp	_	start_char=5122|end_char=5132
14	muss	müssen	AUX	VMFIN	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	13	aux	_	start_char=5133|end_char=5137|SpaceAfter=No
15	.	.	PUNCT	$.	_	6	punct	_	start_char=5137|end_char=5138|SpaceAfter=No

